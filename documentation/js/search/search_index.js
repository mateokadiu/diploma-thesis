var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.487,1,1.065]],["body/components/AppComponent.html",[0,0.764,1,1.794,2,1.804,3,0.276,4,0.243,5,1.427,6,1.427,7,1.427,8,1.427,9,0.243,10,2.931,11,1.089,12,2.745,13,2.562,14,2.851,15,1.933,16,5.325,17,1.933,18,4.696,19,0.583,20,1.475,21,2.965,22,1.208,23,2.351,24,0.834,25,2.578,26,2.719,27,1.281,28,4.696,29,1.019,30,0.026,31,1.196,32,0.916,33,0.834,34,3.466,35,0.892,36,1.332,37,1.164,38,1.332,39,1.332,40,1.196,41,3.97,42,0.568,43,0.381,44,1.164,45,1.649,46,2.931,47,1.78,48,1.532,49,1.532,50,0.276,51,0.418,52,2.105,53,1.427,54,2.354,55,3.466,56,2.931,57,2.931,58,3.466,59,1.427,60,1.933,61,1.933,62,1.427,63,2.351,64,1.427,65,1.427,66,1.089,67,1.933,68,1.019,69,1.244,70,1.019,71,1.427,72,1.089,73,1.427,74,1.019,75,1.427,76,1.089,77,1.427,78,1.019,79,1.427,80,1.019,81,1.427,82,1.089,83,1.244,84,1.427,85,1.427,86,0.017,87,0.017]],["title/modules/AppModule.html",[88,1.498,89,2.264]],["body/modules/AppModule.html",[1,2.036,3,0.234,4,0.206,9,0.206,11,0.923,13,1.129,26,1.299,30,0.026,42,0.685,43,0.323,44,1.406,49,1.851,50,0.234,51,0.355,76,1.835,78,1.717,86,0.016,87,0.016,89,4.472,90,1.055,91,1.992,92,2.485,93,2.485,94,2.485,95,2.485,96,3.412,97,3.547,98,3.547,99,2.331,100,1.636,101,1.398,102,2.939,103,2.543,104,1.851,105,4.124,106,1.851,107,4.187,108,2.797,109,1.785,110,1.963,111,2.939,112,2.485,113,2.939,114,2.485,115,2.485,116,2.485,117,1.963,118,4.187,119,2.939,120,2.485,121,2.939,122,2.485,123,2.485,124,1.785,125,2.186,126,2.186,127,4.187,128,2.939,129,2.939,130,4.187,131,2.485,132,4.187,133,2.939,134,2.797,135,1.963,136,4.187,137,2.939,138,3.115,139,2.186,140,4.187,141,2.939,142,2.797,143,2.939,144,1.963,145,2.485,146,4.187,147,2.186,148,2.939,149,2.186,150,2.485,151,3.115,152,2.186,153,1.963,154,2.939,155,2.485,156,2.485,157,2.939,158,4.187,159,2.939,160,2.939,161,2.939,162,3.115,163,2.939,164,2.939,165,2.939,166,1.636,167,2.939,168,2.939,169,2.939,170,2.485]],["title/modules/AppRoutingModule.html",[88,1.498,97,2.058]],["body/modules/AppRoutingModule.html",[3,0.376,4,0.331,9,0.331,30,0.026,42,0.613,43,0.518,50,0.376,51,0.569,53,1.941,86,0.021,87,0.021,90,1.693,97,3.475,104,2.084,106,2.529,171,4.714,172,3.149,173,3.822,174,3.164,175,1.812,176,3.822,177,4.714,178,3.149,179,2.863,180,3.986,181,4.714,182,4.714,183,3.149,184,4.714,185,2.863]],["title/interfaces/AppState.html",[48,1.498,186,1.498]],["body/interfaces/AppState.html",[3,0.387,4,0.341,9,0.341,30,0.026,42,0.58,44,1.633,48,2.577,49,2.149,50,0.498,53,2.401,86,0.022,87,0.022,96,2.953,115,4.112,142,3.248,162,3.617,186,2.149,187,2.953,188,3.617,189,4.112,190,4.337,191,4.112,192,3.617,193,4.337]],["title/injectables/AuthEffects.html",[194,1.065,195,2.264]],["body/injectables/AuthEffects.html",[3,0.235,4,0.207,9,0.207,19,0.496,20,1.319,22,1.08,24,1.01,27,1.353,29,1.234,30,0.027,31,0.943,32,0.819,33,1.01,35,0.759,36,1.133,37,1.641,38,1.878,39,1.878,42,0.582,43,0.324,45,2.324,47,3.089,50,0.235,51,0.356,56,4.944,86,0.016,87,0.016,101,1.997,117,1.97,166,3.35,175,1.133,194,1.319,195,2.803,196,1.642,197,2.494,198,3.264,199,2.509,200,4.197,201,2.949,202,3.635,203,3.96,204,2.949,205,4.197,206,2.949,207,2.949,208,6.016,209,5.847,210,4.197,211,5.847,212,5.324,213,5.324,214,5.324,215,5.324,216,5.847,217,3.256,218,2.949,219,4.197,220,4.197,221,4.197,222,4.197,223,4.197,224,4.197,225,3.122,226,2.949,227,4.197,228,2.949,229,1.97,230,1.97,231,2.949,232,1.304,233,0.99,234,2.494,235,2.16,236,2.949,237,2.194,238,2.949,239,2.949]],["title/guards/AuthGuard.html",[176,2.264,240,2.264]],["body/guards/AuthGuard.html",[3,0.307,4,0.271,9,0.271,14,2.343,19,0.649,22,1.298,24,0.928,25,2.87,26,2.803,27,1.213,29,1.483,30,0.026,31,1.133,32,0.984,33,1.213,35,0.993,42,0.631,43,0.424,44,1.296,48,1.706,49,1.706,50,0.307,51,0.466,52,2.343,86,0.019,87,0.019,166,3.597,175,1.483,176,3.369,183,4.129,194,1.585,232,1.706,233,1.296,235,1.706,241,2.577,242,3.263,243,3.859,244,3.263,245,4.432,246,3.412,247,4.432,248,3.859,249,3.752,250,3.128,251,3.752,252,2.808,253,4.751,254,2.343,255,2.577,256,2.87,257,2.577,258,1.212,259,1.386,260,3.263,261,3.859,262,3.859,263,3.263,264,3.859]],["title/modules/AuthModule.html",[88,1.498,98,2.058]],["body/modules/AuthModule.html",[3,0.288,4,0.254,9,0.254,30,0.026,42,0.683,43,0.397,44,1.213,49,1.597,50,0.288,51,0.436,74,1.831,80,1.831,86,0.018,87,0.018,90,1.297,91,2.297,98,4.075,99,2.688,100,2.012,101,1.719,103,2.932,104,2.134,106,2.134,110,2.413,112,3.055,116,3.055,117,2.413,134,3.225,135,2.413,138,3.592,139,2.688,195,2.413,229,2.413,230,2.413,265,3.055,266,3.055,267,3.055,268,3.78,269,3.466,270,3.613,271,3.225,272,2.194,273,2.688,274,3.613,275,3.055,276,3.055,277,3.592,278,3.592,279,1.597,280,4.083,281,3.055,282,3.592,283,2.688,284,2.194,285,3.592,286,2.688,287,4.829,288,3.613,289,3.613,290,3.613,291,3.613,292,3.613]],["title/modules/AuthRoutingModule.html",[88,1.498,268,2.058]],["body/modules/AuthRoutingModule.html",[0,0.849,3,0.342,4,0.302,9,0.302,30,0.026,42,0.649,43,0.472,45,2.57,50,0.342,51,0.519,53,1.77,74,1.589,78,1.589,80,1.589,86,0.02,87,0.02,90,1.543,104,1.9,106,2.389,144,2.87,145,3.634,172,2.87,173,3.609,174,3.035,175,1.651,178,4.143,183,3.609,185,2.61,199,2.207,268,3.281,275,3.634,276,3.634,293,4.297,294,3.948,295,4.297,296,4.297,297,4.297,298,4.297,299,2.87,300,3.197]],["title/injectables/AuthService.html",[194,1.065,301,2.058]],["body/injectables/AuthService.html",[3,0.291,4,0.256,9,0.256,14,2.218,19,0.614,20,1.528,22,1.252,24,0.878,27,1.502,29,1.714,30,0.026,31,1.31,32,1.185,33,1.403,35,1.501,37,1.958,38,1.403,39,1.403,42,0.58,43,0.401,45,2.601,50,0.291,51,0.441,52,2.218,54,2.897,86,0.018,87,0.018,147,2.716,194,1.528,196,2.033,199,2.497,232,1.614,233,1.226,257,2.439,259,2.094,301,2.953,302,3.088,303,5.468,304,4.863,305,5.83,306,3.088,307,4.93,308,3.652,309,4.112,310,4.863,311,3.652,312,2.218,313,3.652,314,3.652,315,3.652,316,4.863,317,3.652,318,4.112,319,3.652,320,3.652,321,3.248,322,2.953,323,3.088,324,3.652,325,3.652,326,3.652,327,3.652,328,3.652,329,3.652]],["title/interfaces/AuthState.html",[186,1.498,330,2.058]],["body/interfaces/AuthState.html",[3,0.332,4,0.292,9,0.292,19,0.7,20,1.664,30,0.026,32,0.812,33,1.274,42,0.579,44,1.397,47,2.137,50,0.464,53,2.398,54,3.028,86,0.02,87,0.02,186,1.839,187,2.527,189,3.518,190,3.095,191,3.518,192,3.095,193,3.095,234,3.518,246,3.536,259,2.091,273,3.095,330,3.536,331,3.095,332,4.477,333,4.161,334,3.095,335,3.939,336,4.477,337,3.095,338,3.518,339,3.89,340,4.477,341,3.518,342,3.518,343,3.518]],["title/components/CalendarComponent.html",[0,0.487,66,1.065]],["body/components/CalendarComponent.html",[0,0.572,1,0.658,2,1.249,3,0.167,4,0.147,5,0.862,6,0.862,7,0.862,8,0.862,9,0.147,11,0.658,12,2.484,13,2.318,15,1.339,17,1.339,19,0.352,20,1.021,22,0.837,23,1.851,24,0.959,27,1.528,29,1.322,30,0.026,31,1.157,32,1.207,33,1.081,35,1.383,36,2.283,37,1.509,38,2.066,39,2.066,40,0.47,42,0.447,43,0.23,50,0.167,51,0.253,59,0.862,60,1.339,61,1.339,62,0.862,63,1.851,64,0.862,65,0.862,66,1.412,67,1.339,68,0.615,69,2.049,70,0.615,71,0.862,72,0.658,73,0.862,74,0.615,75,0.862,76,0.658,77,0.862,78,0.615,79,0.862,80,0.615,81,0.862,82,0.658,83,0.752,84,0.862,85,0.862,86,0.012,87,0.012,179,3.264,217,1.81,233,0.703,252,1.81,258,1.021,259,1.167,339,2.662,344,1.77,345,1.762,346,2.421,347,3.371,348,2.749,349,3.986,350,5.023,351,2.662,352,3.986,353,3.986,354,4.867,355,4.494,356,3.986,357,3.986,358,2.749,359,3.002,360,3.251,361,2.749,362,4.115,363,3.251,364,3.986,365,3.251,366,4.699,367,2.093,368,3.371,369,2.093,370,2.093,371,2.093,372,2.965,373,2.093,374,2.093,375,3.8,376,2.093,377,2.749,378,2.093,379,2.093,380,2.093,381,3.251,382,2.093,383,2.138,384,2.093,385,2.093,386,3.59,387,2.76,388,2.093,389,2.093,390,3.251,391,2.093,392,3.542,393,2.093,394,2.418,395,2.749,396,1.165,397,1.77,398,1.77,399,1.271,400,2.093,401,2.093,402,3.251,403,2.093,404,4.494,405,2.093,406,1.165,407,3.251,408,3.251,409,1.77,410,2.093,411,2.749,412,1.398,413,1.271,414,2.093,415,1.398,416,1.398,417,3.251,418,3.251,419,3.251,420,3.251,421,3.251,422,3.251,423,3.251,424,3.251]],["title/components/EventCalendarComponent.html",[0,0.487,68,0.997]],["body/components/EventCalendarComponent.html",[0,0.508,1,0.549,2,1.083,3,0.139,4,0.123,5,0.719,6,0.719,7,0.719,8,0.719,9,0.123,11,0.549,12,2.371,13,2.213,15,1.16,17,1.16,19,0.294,20,0.885,21,1.569,22,0.725,23,1.673,24,0.678,27,1.33,29,1.041,30,0.026,31,1.001,32,0.93,33,0.852,35,1.226,36,2.249,37,1.496,38,1.361,39,1.361,40,1.001,42,0.55,43,0.192,44,0.587,47,2.086,50,0.139,51,0.211,53,1.673,59,0.719,60,1.16,61,1.16,62,0.719,63,1.673,64,0.719,65,0.719,66,0.549,67,1.16,68,1.195,69,2.348,70,0.514,71,0.719,72,0.549,73,0.719,74,0.514,75,0.719,76,0.549,77,0.719,78,0.514,79,0.719,80,0.514,81,0.719,82,0.885,83,1.6,84,0.719,85,0.719,86,0.01,87,0.01,179,1.061,217,1.971,232,0.772,233,0.587,235,1.245,254,1.061,258,0.885,339,2.713,345,1.565,346,2.15,347,2.994,348,2.383,350,1.477,351,2.365,358,2.383,359,2.713,362,3.768,366,4.674,368,1.477,375,1.477,377,2.383,386,2.976,387,2.446,392,1.711,395,1.477,396,0.973,397,1.477,398,1.477,399,1.061,406,1.569,409,2.994,411,2.383,412,1.882,413,1.711,415,1.167,416,1.167,425,4.204,426,3.432,427,1.3,428,2.383,429,2.818,430,4.062,431,3.541,432,4.062,433,1.747,434,1.932,435,4.062,436,2.818,437,2.818,438,1.747,439,1.747,440,1.747,441,1.747,442,1.747,443,1.747,444,1.747,445,3.541,446,3.435,447,4.062,448,4.456,449,4.062,450,2.818,451,2.383,452,2.818,453,2.818,454,2.818,455,1.747,456,1.747,457,1.477,458,1.747,459,1.477,460,1.3,461,2.818,462,1.477,463,1.747,464,1.167,465,1.477,466,1.477,467,1.477,468,1.3,469,1.3,470,1.167,471,1.061,472,1.167,473,1.747,474,1.747,475,1.747,476,1.747,477,1.167,478,3.022,479,1.3,480,1.747,481,1.167,482,1.477,483,1.167,484,1.3,485,2.15,486,1.3,487,2.365,488,1.3,489,1.3,490,1.3,491,1.3,492,1.3,493,1.3,494,1.3,495,1.747,496,1.061,497,1.3,498,1.747,499,1.747,500,2.262,501,1.882,502,2.634,503,1.747,504,1.747,505,1.747,506,1.747,507,1.477,508,2.365,509,1.747,510,4.764,511,1.747,512,3.541,513,2.994,514,1.747,515,2.994,516,1.747,517,3.541,518,1.747,519,1.3,520,2.818,521,2.818,522,2.818,523,2.818,524,2.383,525,1.747,526,1.882,527,1.747,528,1.061,529,1.061,530,1.747,531,0.973,532,0.973,533,1.747,534,1.167,535,1.747,536,1.3,537,1.3]],["title/components/HomeComponent.html",[0,0.487,70,0.997]],["body/components/HomeComponent.html",[0,0.804,1,1.204,2,1.93,3,0.305,4,0.269,5,1.578,6,1.578,7,1.578,8,1.578,9,0.269,11,1.204,12,2.788,13,2.602,15,2.068,17,2.068,19,0.645,22,1.292,23,2.447,24,1.347,27,1.208,30,0.026,31,1.128,35,0.986,36,1.93,40,0.861,42,0.381,43,0.421,50,0.305,51,0.463,59,1.578,60,2.068,61,2.068,62,1.578,63,2.447,64,1.578,65,1.578,66,1.204,67,2.068,68,1.127,69,1.376,70,1.747,71,1.578,72,1.204,73,1.578,74,1.127,75,1.578,76,1.204,77,1.578,78,1.127,79,1.578,80,1.127,81,1.578,82,1.204,83,1.376,84,1.578,85,1.578,86,0.019,87,0.019,258,1.578,345,2.475,538,3.241,539,4.42,540,5.6,541,5.021,542,3.833,543,3.833,544,4.246]],["title/components/InputComponent.html",[0,0.487,72,1.065]],["body/components/InputComponent.html",[0,0.717,1,0.965,2,1.66,3,0.245,4,0.216,5,1.265,6,1.265,7,1.265,8,1.265,9,0.216,11,0.965,12,2.69,13,2.51,15,1.779,17,1.779,19,0.517,22,1.112,23,2.233,24,1.202,27,1.425,30,0.026,31,0.97,32,1.058,35,0.791,36,1.66,37,1.678,38,1.92,39,1.92,40,0.69,42,0.43,43,0.338,50,0.245,51,0.371,59,1.265,60,1.779,61,1.779,62,1.265,63,2.233,64,1.265,65,1.265,66,0.965,67,1.779,68,0.903,69,1.103,70,0.903,71,1.265,72,1.704,73,1.265,74,0.903,75,1.265,76,0.965,77,1.265,78,0.903,79,1.265,80,0.903,81,1.265,82,0.965,83,1.103,84,1.265,85,1.265,86,0.016,87,0.016,258,1.357,279,1.358,284,1.865,299,2.052,345,2.209,361,3.653,394,4.528,446,5.341,531,1.71,532,1.71,545,2.597,546,4.997,547,4.32,548,4.997,549,5.713,550,4.997,551,4.32,552,3.337,553,3.072,554,2.885,555,3.072,556,3.072,557,3.072,558,3.214,559,3.214,560,4.32,561,3.214,562,4.32,563,3.034,564,2.052,565,2.623,566,1.865,567,2.052]],["title/components/LoginComponent.html",[0,0.487,74,0.997]],["body/components/LoginComponent.html",[0,0.561,1,0.637,2,1.219,3,0.162,4,0.142,5,0.835,6,0.835,7,0.835,8,0.835,9,0.142,11,0.637,12,2.465,13,2.3,15,1.306,17,1.306,19,0.341,20,0.997,21,2.958,22,0.816,23,1.819,24,0.763,26,2.349,27,1.323,29,0.933,30,0.026,31,0.993,32,0.862,33,0.763,35,1.137,36,1.698,37,1.312,38,1.219,39,1.501,40,0.456,42,0.575,43,0.223,44,0.681,45,2.527,47,1.629,48,0.896,50,0.162,51,0.245,54,0.896,57,1.715,59,0.835,60,1.306,61,1.306,62,0.835,63,1.819,64,0.835,65,0.835,66,0.637,67,1.306,68,0.596,69,0.728,70,0.596,71,0.835,72,0.637,73,0.835,74,1.299,75,0.835,76,0.637,77,0.835,78,0.596,79,0.835,80,0.596,81,0.835,82,0.637,83,0.728,84,0.835,85,0.835,86,0.012,87,0.012,108,1.355,109,1.232,166,1.129,175,0.779,202,2.906,203,3.287,225,1.509,229,1.355,230,1.355,232,0.896,233,0.681,235,2.12,237,2.36,258,0.997,259,1.139,279,0.896,299,1.355,301,3.226,321,1.355,322,3.432,345,1.727,351,2.609,359,2.951,383,1.509,386,3.203,387,1.629,406,1.129,415,1.355,416,1.355,460,1.509,464,1.355,465,1.715,467,1.715,468,1.509,469,2.36,496,1.232,497,1.509,500,1.766,508,1.355,528,1.232,529,1.232,531,2.46,532,1.766,534,1.355,536,1.509,537,2.906,552,2.609,554,1.355,558,2.36,559,2.36,561,2.36,563,3.432,564,2.609,565,2.912,566,1.926,567,2.119,568,1.715,569,3.907,570,3.172,571,4.795,572,3.907,573,2.36,574,3.736,575,1.509,576,3.287,577,3.172,578,2.36,579,2.36,580,2.028,581,2.028,582,2.028,583,2.028,584,2.028,585,2.609,586,2.028,587,1.509,588,1.715,589,1.715,590,1.715,591,1.715,592,2.028,593,2.028,594,1.715,595,2.36,596,1.715,597,1.715,598,1.715,599,1.715,600,1.715,601,1.715,602,1.715,603,2.028,604,1.715,605,1.715,606,1.715,607,2.682,608,1.715,609,1.715,610,2.028,611,2.028,612,2.682,613,2.682,614,2.36,615,2.682,616,2.682,617,2.682,618,2.36,619,2.682,620,2.951,621,2.36,622,1.715,623,2.119,624,2.609,625,1.355,626,1.715,627,2.906,628,2.36,629,3.782,630,2.119,631,2.609,632,1.715,633,3.304,634,2.906,635,1.715,636,2.682,637,1.715,638,1.715,639,1.509,640,1.715,641,1.715,642,1.509,643,1.715,644,1.509,645,1.509,646,1.715,647,1.715,648,1.509,649,1.715,650,1.715]],["title/injectables/MatchPassword.html",[194,1.065,651,2.264]],["body/injectables/MatchPassword.html",[3,0.352,4,0.31,9,0.31,14,2.684,19,0.744,22,1.415,27,1.063,29,1.3,30,0.026,31,0.993,32,0.863,33,1.063,35,1.138,42,0.547,43,0.486,50,0.352,51,0.534,53,1.82,86,0.02,87,0.02,194,1.728,196,2.461,252,2.461,257,2.952,258,1.389,259,1.975,279,1.954,322,3.34,383,2.102,585,4.304,651,3.673,652,4.091,653,3.738,654,5.5,655,5.5,656,4.42,657,5.5,658,5.5,659,4.651,660,4.42,661,4.42]],["title/components/NavbarComponent.html",[0,0.487,76,1.065]],["body/components/NavbarComponent.html",[0,0.574,1,0.661,2,1.254,3,0.168,4,0.148,5,0.866,6,0.866,7,0.866,8,0.866,9,0.148,11,0.661,12,2.487,13,2.321,15,1.344,17,1.344,19,0.549,20,1.025,22,0.84,23,1.856,24,0.785,26,2.38,27,1.295,29,0.618,30,0.026,31,0.898,32,0.637,33,0.506,35,0.84,36,1.537,38,1.874,39,1.732,40,0.898,41,2.76,42,0.569,43,0.231,44,0.706,45,2.143,46,1.779,47,1.08,48,0.93,49,0.93,50,0.168,51,0.254,59,0.866,60,1.344,61,1.344,62,0.866,63,1.856,64,0.866,65,0.866,66,0.661,67,1.344,68,0.618,69,1.751,70,0.618,71,0.866,72,0.661,73,0.866,74,0.618,75,0.866,76,1.416,77,0.866,78,0.618,79,0.866,80,0.618,81,0.866,82,0.661,83,0.755,84,0.866,85,0.866,86,0.012,87,0.012,131,1.779,153,1.405,166,2.998,175,0.808,198,3.258,199,1.676,217,1.171,233,0.706,235,1.768,250,2.226,254,1.277,255,3.01,256,1.565,258,1.025,345,1.768,383,2.143,394,2.428,406,1.817,464,1.405,466,3.381,485,1.277,496,1.982,500,1.817,528,1.277,529,1.277,531,2.226,532,1.171,534,2.18,536,1.565,539,2.428,554,1.405,563,2.428,564,1.405,565,2.428,566,3.134,620,1.405,621,2.428,622,1.779,623,3.01,624,3.447,625,2.18,627,2.428,628,2.428,629,3.352,630,2.671,631,3.01,635,1.779,639,1.565,642,1.565,644,1.565,645,2.428,648,1.565,662,1.779,663,3.263,664,3.999,665,3.263,666,3.999,667,3.01,668,3.381,669,2.103,670,5.161,671,2.103,672,2.103,673,2.103,674,3.263,675,3.263,676,3.263,677,3.263,678,2.103,679,3.263,680,2.103,681,3.263,682,2.103,683,2.103,684,2.103,685,2.103,686,3.263,687,3.263,688,3.263,689,3.263,690,2.103,691,2.103,692,4.506,693,4.506,694,3.263,695,3.999,696,2.103,697,4.506,698,3.263,699,3.263,700,3.263,701,3.263,702,4.878,703,3.263,704,2.103,705,5.566,706,2.103,707,2.76,708,1.779,709,1.779,710,2.103,711,2.103,712,2.103,713,2.103,714,1.779,715,2.103,716,2.103,717,1.779,718,2.103,719,5.161,720,2.103,721,2.103,722,1.779,723,1.779,724,3.381,725,2.103,726,2.103,727,2.103,728,2.103,729,2.103,730,3.263,731,2.103,732,2.103,733,2.103,734,2.103,735,1.779]],["title/guards/NotAuthGuard.html",[240,2.264,294,2.264]],["body/guards/NotAuthGuard.html",[3,0.304,4,0.268,9,0.268,14,2.317,19,0.642,22,1.288,24,0.918,25,2.838,26,2.794,27,1.204,29,1.472,30,0.026,31,1.125,32,0.977,33,1.204,35,0.982,42,0.629,43,0.419,44,1.281,48,1.687,49,1.687,50,0.304,51,0.461,52,2.317,86,0.019,87,0.019,166,3.587,175,1.466,183,4.114,194,1.573,232,1.687,233,1.281,235,1.687,241,2.548,244,3.226,245,4.413,246,3.393,247,4.413,249,3.724,250,3.111,251,3.724,252,2.787,253,4.725,254,2.317,256,2.838,257,2.548,258,1.199,259,1.37,260,3.226,294,3.344,667,2.548,736,4.725,737,3.226,738,3.816,739,3.816,740,3.816,741,3.816,742,3.816,743,3.816]],["title/components/NotFoundComponent.html",[0,0.487,78,0.997]],["body/components/NotFoundComponent.html",[0,0.799,1,1.188,2,1.913,3,0.301,4,0.266,5,1.557,6,1.557,7,1.557,8,1.557,9,0.266,11,1.188,12,2.782,13,2.597,15,2.049,17,2.049,19,0.636,22,1.281,23,2.434,24,1.338,27,1.197,30,0.026,31,1.118,35,0.973,36,1.913,40,0.85,42,0.376,43,0.416,50,0.301,51,0.457,59,1.557,60,2.049,61,2.049,62,1.557,63,2.434,64,1.557,65,1.557,66,1.188,67,2.049,68,1.112,69,1.358,70,1.112,71,1.557,72,1.188,73,1.557,74,1.112,75,1.557,76,1.188,77,1.557,78,1.738,79,1.557,80,1.112,81,1.557,82,1.188,83,1.358,84,1.557,85,1.557,86,0.018,87,0.018,144,3.716,258,1.564,345,2.459,544,4.209,744,4.704,745,3.198,746,5.912,747,5.563,748,4.977,749,3.782,750,3.782]],["title/modules/SharedModule.html",[88,1.498,269,1.887]],["body/modules/SharedModule.html",[3,0.287,4,0.253,9,0.253,30,0.026,42,0.678,43,0.396,50,0.287,51,0.435,66,2.108,72,2.108,86,0.018,87,0.018,90,1.295,91,2.294,99,2.685,100,2.007,101,1.715,103,2.928,104,1.594,106,2.131,134,3.221,135,2.408,138,3.587,139,2.682,151,3.587,152,2.682,153,2.408,185,2.928,269,3.677,271,3.221,272,2.189,277,3.587,278,3.587,279,1.594,282,3.587,283,2.682,284,2.189,285,3.587,286,2.682,346,2.189,396,2.685,399,2.189,477,2.408,751,3.049,752,3.049,753,3.049,754,3.605,755,3.605,756,4.077,757,3.049,758,4.077,759,4.077,760,3.049,761,3.049,762,4.077,763,2.682,764,4.077,765,3.049,766,3.605,767,3.605,768,3.605,769,3.605]],["title/components/SignupComponent.html",[0,0.487,80,0.997]],["body/components/SignupComponent.html",[0,0.528,1,0.58,2,1.132,3,0.147,4,0.13,5,0.761,6,0.761,7,0.761,8,0.761,9,0.13,11,0.58,12,2.407,13,2.246,15,1.213,17,1.213,19,0.311,20,0.926,21,2.854,22,0.758,23,1.727,24,0.709,26,2.266,27,1.32,29,0.867,30,0.026,31,0.942,32,0.819,33,0.709,35,1.08,36,1.612,37,1.234,38,1.413,39,1.612,40,0.415,42,0.56,43,0.203,44,0.62,47,1.513,48,0.817,50,0.147,51,0.223,54,0.817,59,0.761,60,1.213,61,1.213,62,0.761,63,1.727,64,0.761,65,0.761,66,0.58,67,1.213,68,0.543,69,0.663,70,0.543,71,0.761,72,0.58,73,0.761,74,0.543,75,0.761,76,0.58,77,0.761,78,0.543,79,0.761,80,1.234,81,0.761,82,0.58,83,0.663,84,0.761,85,0.761,86,0.011,87,0.011,108,1.234,109,1.122,199,1.888,202,2.735,203,3.121,225,1.374,229,1.234,230,1.234,232,0.817,233,0.62,235,2.159,237,2.192,258,0.926,259,1.058,279,0.817,299,1.234,301,3.112,321,1.234,322,3.695,345,1.625,351,2.455,359,2.802,383,1.995,386,3.061,387,1.513,406,1.029,415,1.234,416,1.234,460,1.374,468,1.374,469,2.192,496,1.122,497,1.374,500,1.641,508,1.234,528,1.122,529,1.122,531,2.336,532,1.641,534,1.234,537,2.735,552,2.455,554,1.234,558,3.121,559,2.192,561,2.192,563,3.416,564,2.455,565,2.783,566,1.79,567,1.968,573,2.192,574,3.547,575,1.374,576,3.121,578,2.192,579,2.192,585,2.455,587,2.192,589,1.562,590,1.562,591,1.562,594,1.562,595,3.409,596,1.562,597,1.562,598,1.562,599,1.562,600,1.562,601,1.562,602,1.562,604,1.562,605,1.562,606,1.562,607,2.492,608,1.562,609,1.562,612,3.547,613,3.547,614,3.121,615,3.547,616,2.492,617,2.492,618,2.192,619,2.492,620,2.802,621,2.192,623,1.968,624,2.455,625,1.234,626,1.562,627,2.735,628,2.192,629,3.634,630,1.968,631,2.455,632,1.562,633,3.108,634,2.735,636,3.108,637,1.562,638,1.562,639,1.374,640,1.562,641,1.562,642,1.374,643,1.562,644,1.374,645,1.374,646,1.562,647,1.562,648,1.374,649,1.562,650,1.562,651,3.423,652,1.374,659,1.562,770,1.562,771,3.676,772,2.947,773,4.583,774,4.583,775,3.676,776,2.947,777,1.848,778,1.848,779,1.848,780,1.848,781,1.848,782,1.848,783,1.848,784,1.848,785,1.848,786,1.848,787,1.562,788,1.562,789,1.848,790,1.848,791,1.848,792,1.848,793,1.848,794,3.676,795,2.947,796,2.947,797,2.947,798,2.947,799,2.947,800,2.947,801,2.947,802,4.195,803,2.947,804,2.947,805,2.947,806,1.848,807,1.848]],["title/interfaces/Task.html",[40,0.761,186,1.498]],["body/interfaces/Task.html",[3,0.301,4,0.265,9,0.265,19,0.635,20,1.562,21,3.288,30,0.026,32,1.337,33,1.642,37,2.317,40,1.116,50,0.301,86,0.018,87,0.018,186,1.668,187,2.291,252,3.63,312,3.587,372,4.394,392,3.827,412,3.945,413,3.587,485,2.291,487,2.52,500,3.288,501,3.945,502,4.394,808,3.191,809,5.906,810,5.906,811,5.906,812,5.906,813,3.773,814,3.773]],["title/injectables/TaskDataService.html",[194,1.065,815,2.058]],["body/injectables/TaskDataService.html",[3,0.277,4,0.244,9,0.244,19,0.584,22,1.21,24,0.835,27,1.436,29,1.68,30,0.026,31,1.283,32,1.115,33,1.374,35,1.47,37,1.79,40,1.283,42,0.612,43,0.382,50,0.277,51,0.419,86,0.017,87,0.017,124,2.109,126,3.498,147,2.583,194,1.477,196,1.933,233,1.166,250,3.612,259,2.051,306,3.976,307,4.831,309,3.976,318,2.937,323,2.937,383,1.652,451,3.976,464,2.32,470,2.32,519,4.681,526,3.14,815,2.855,816,4.578,817,2.937,818,3.976,819,5.331,820,5.713,821,6.401,822,3.473,823,4.702,824,3.473,825,4.702,826,3.473,827,3.473,828,3.473,829,4.702,830,3.473,831,3.473,832,3.473,833,2.937,834,5.713,835,3.473,836,3.473,837,3.473,838,3.473,839,3.473,840,3.473,841,3.473,842,3.473]],["title/components/TaskDialogComponent.html",[0,0.487,82,1.065]],["body/components/TaskDialogComponent.html",[0,0.42,1,0.418,2,0.864,3,0.106,4,0.093,5,0.548,6,0.548,7,0.548,8,0.548,9,0.093,11,0.418,12,2.183,13,2.038,15,0.926,17,0.926,19,0.224,20,0.707,21,1.913,22,0.579,23,1.415,24,0.541,26,1.963,27,1.502,29,0.661,30,0.026,31,0.772,32,1.11,33,0.827,35,0.989,36,1.477,37,1.491,38,2.081,39,2.081,40,1.278,42,0.528,43,0.146,44,0.447,50,0.106,51,0.161,53,0.926,59,0.548,60,0.926,61,0.926,62,0.548,63,1.415,64,0.548,65,0.548,66,0.418,67,0.926,68,0.391,69,0.478,70,0.391,71,0.548,72,0.418,73,0.548,74,0.391,75,0.548,76,0.418,77,0.548,78,0.391,79,0.548,80,0.391,81,0.548,82,1.08,83,1.049,84,0.548,85,0.548,86,0.008,87,0.008,179,1.775,217,2.952,232,0.588,233,0.447,235,1.698,250,1.627,254,0.808,258,0.707,259,0.478,279,0.588,284,1.366,312,1.775,330,0.808,345,1.292,383,1.07,387,1.765,392,3.405,412,1.952,413,1.775,428,1.902,434,2.113,457,1.125,459,1.125,470,0.889,471,0.808,472,0.889,477,0.889,481,4.192,483,1.952,484,1.673,485,3.289,486,1.673,487,2.966,488,1.673,489,1.673,490,1.673,491,1.673,492,1.673,493,1.673,494,1.673,496,0.808,500,2.8,501,2.295,502,3.102,507,2.471,508,2.295,513,3.756,515,2.471,519,2.858,524,2.906,526,0.889,528,1.366,529,0.808,531,1.913,532,1.627,552,1.952,563,0.808,565,0.808,566,1.775,567,2.295,573,1.673,575,0.99,576,2.556,578,1.673,579,1.673,585,1.952,587,0.99,588,1.125,595,3.304,618,2.174,620,0.889,623,0.889,624,1.502,625,0.889,630,0.889,631,0.889,634,2.174,668,2.471,707,1.125,708,1.125,709,1.125,714,3.526,717,1.125,722,1.125,723,1.125,724,1.125,735,2.906,763,0.99,843,4.668,844,1.125,845,2.249,846,2.923,847,2.249,848,3.842,849,2.923,850,2.923,851,2.923,852,2.923,853,2.923,854,2.923,855,2.923,856,2.923,857,2.923,858,2.923,859,2.923,860,2.923,861,3.437,862,3.437,863,3.437,864,2.923,865,3.437,866,2.923,867,2.923,868,3.437,869,2.249,870,1.33,871,1.33,872,1.33,873,1.33,874,1.33,875,1.33,876,2.923,877,1.33,878,2.249,879,1.33,880,2.923,881,1.33,882,1.33,883,1.33,884,1.33,885,1.33,886,1.33,887,1.33,888,1.33,889,1.33,890,1.33,891,1.33,892,1.33,893,1.33,894,1.33,895,1.33,896,1.33,897,1.33,898,1.33,899,1.125,900,1.33,901,1.33,902,1.33,903,1.33,904,1.33,905,1.33,906,1.33,907,1.33,908,1.33,909,2.923,910,1.33,911,1.33,912,1.33,913,1.33,914,1.33,915,1.33,916,1.33,917,1.33,918,2.249,919,1.33,920,1.33,921,2.249,922,2.249,923,4.17,924,1.33,925,2.923,926,2.923,927,1.33,928,2.249,929,1.33,930,1.33,931,1.33,932,1.33,933,2.249,934,1.33,935,2.249,936,2.249,937,2.249,938,2.249,939,2.249,940,2.249,941,2.249,942,4.669,943,3.437,944,2.249,945,2.249,946,2.249,947,2.249,948,2.249,949,2.249,950,1.33,951,1.33,952,1.33,953,1.33,954,1.33,955,1.33,956,1.33,957,1.33,958,1.33,959,3.437,960,1.33,961,2.249,962,1.33,963,1.33,964,1.33]],["title/injectables/TaskEntityService.html",[194,1.065,434,1.612]],["body/injectables/TaskEntityService.html",[3,0.375,4,0.33,9,0.33,24,1.131,27,1.131,29,1.382,30,0.026,31,1.056,32,0.917,33,1.131,40,1.056,42,0.612,43,0.517,50,0.375,51,0.568,86,0.021,87,0.021,124,2.855,194,1.795,196,2.617,434,2.717,470,3.14,471,3.469,818,4.83,833,3.975,965,3.975,966,6.154,967,5.712,968,6.401,969,4.701,970,5.712]],["title/modules/TaskModule.html",[88,1.498,971,2.264]],["body/modules/TaskModule.html",[3,0.24,4,0.212,9,0.212,11,0.946,24,0.725,30,0.026,40,1.111,42,0.684,43,0.331,50,0.24,51,0.364,68,1.731,69,1.081,82,1.85,86,0.016,87,0.016,90,1.081,91,2.027,99,2.372,100,1.677,101,1.433,103,2.587,104,1.883,106,1.883,110,2.012,122,4.18,123,3.603,124,1.829,126,2.24,134,2.846,135,2.012,151,3.169,152,2.24,153,2.012,170,3.603,235,2.185,269,3.278,271,2.846,272,1.829,277,3.169,278,3.169,279,1.331,280,3.603,281,2.547,282,3.169,283,2.24,284,2.587,285,3.169,286,2.24,346,1.829,396,2.752,399,1.829,426,1.829,434,2.801,471,1.829,472,2.012,477,2.012,481,2.012,482,2.547,756,3.603,757,2.547,758,2.547,759,2.547,760,2.547,761,2.547,762,3.603,763,2.24,764,3.603,765,2.547,815,3.676,816,2.24,899,2.547,971,4.466,972,2.547,973,2.547,974,2.547,975,2.547,976,3.575,977,3.012,978,3.012,979,2.24,980,2.587,981,2.547,982,2.547,983,3.012,984,4.26,985,4.26,986,4.26,987,2.547,988,2.547,989,2.547,990,3.012,991,4.26,992,3.012,993,3.012]],["title/modules/TaskRoutingModule.html",[88,1.498,976,2.058]],["body/modules/TaskRoutingModule.html",[0,0.666,3,0.369,4,0.326,9,0.326,30,0.026,42,0.634,43,0.51,50,0.369,51,0.56,53,1.909,68,1.666,69,1.665,86,0.021,87,0.021,90,1.665,104,2.05,106,2.504,172,3.097,173,3.784,174,3.141,175,1.782,178,3.097,185,2.816,300,3.449,426,2.816,843,3.449,976,3.44,980,3.44,981,3.921,982,3.921,994,3.921,995,3.921,996,4.637]],["title/guards/TasksResolver.html",[240,2.264,980,2.058]],["body/guards/TasksResolver.html",[3,0.322,4,0.284,9,0.284,19,0.68,22,1.338,24,0.972,27,1.25,29,1.528,30,0.026,31,1.168,32,1.014,33,1.25,35,1.04,40,0.908,42,0.603,43,0.444,50,0.322,51,0.488,52,2.455,86,0.019,87,0.019,175,1.553,194,1.633,232,1.787,233,1.357,241,2.7,245,4.511,246,3.489,247,4.511,249,3.866,250,3.198,251,3.866,252,2.894,258,1.27,259,1.451,434,3.054,462,3.418,472,2.7,980,3.156,995,5.305,997,3.418,998,4.042,999,4.042,1000,4.042,1001,4.042,1002,4.395,1003,4.042,1004,4.042,1005,5.198,1006,4.042,1007,4.042]],["title/interfaces/User.html",[54,1.498,186,1.498]],["body/interfaces/User.html",[3,0.351,4,0.31,9,0.31,19,0.742,20,1.725,30,0.025,32,1.281,33,1.619,37,2.359,50,0.351,54,2.427,86,0.02,87,0.02,186,1.949,187,2.677,321,4.181,322,3.801,501,4.181,787,5.293,788,5.293,1008,3.728,1009,6.259]],["title/modules/ViewModule.html",[88,1.498,1010,2.264]],["body/modules/ViewModule.html",[3,0.362,4,0.319,9,0.319,30,0.026,42,0.629,43,0.499,50,0.362,51,0.548,70,1.944,86,0.021,87,0.021,90,1.63,91,2.659,99,3.112,100,2.527,101,2.159,103,3.395,104,2.471,106,2.471,110,3.031,179,2.756,271,3.734,272,2.756,1010,4.52,1011,3.837,1012,3.837,1013,3.837,1014,4.015,1015,4.538,1016,3.837]],["title/modules/ViewRoutingModule.html",[88,1.498,1014,2.058]],["body/modules/ViewRoutingModule.html",[0,0.669,3,0.371,4,0.327,9,0.327,30,0.026,40,1.047,42,0.61,43,0.513,50,0.371,51,0.563,53,1.92,70,1.671,86,0.021,87,0.021,90,1.674,104,2.061,106,2.512,172,3.114,173,3.796,174,3.148,175,1.792,178,3.796,180,3.943,185,2.831,300,3.468,539,3.468,1014,3.451,1016,3.943,1017,4.662,1018,4.662,1019,4.662]],["title/coverage.html",[1020,3.911]],["body/coverage.html",[0,0.9,1,0.875,9,0.196,10,2.355,11,0.875,30,0.026,32,0.543,40,0.626,45,1.325,48,1.231,49,1.231,54,1.231,66,0.875,68,0.819,70,0.819,72,0.875,74,0.819,76,0.875,78,0.819,80,0.819,82,0.875,83,1,86,0.015,87,0.015,96,2.446,125,2.072,142,1.86,144,1.86,176,1.86,186,2.292,188,3.521,194,1.729,195,1.86,197,2.355,198,1.86,199,1.43,240,3.161,242,2.355,255,1.86,294,1.86,301,1.691,302,2.355,312,1.691,330,1.691,331,3.858,334,2.072,335,2.072,337,2.072,344,2.355,387,1.43,406,3.912,425,2.997,426,2.446,427,2.997,434,1.325,471,1.691,478,2.072,479,2.072,481,1.86,483,1.86,538,2.355,545,2.355,568,2.355,651,1.86,652,2.072,653,2.355,662,2.355,667,1.86,736,2.355,737,2.355,744,2.355,745,2.355,770,2.355,808,2.355,815,1.691,816,2.072,817,2.355,843,2.072,844,2.355,965,2.355,979,2.072,980,1.691,997,2.355,1008,2.355,1020,2.355,1021,2.785,1022,2.785,1023,2.785,1024,2.785,1025,4.002,1026,4.002,1027,6.781,1028,6.819,1029,4.028,1030,2.785,1031,4.733,1032,4.653,1033,2.355,1034,2.355,1035,2.785,1036,4.002,1037,4.002,1038,2.355,1039,2.355,1040,5.502,1041,2.785,1042,4.733,1043,2.785,1044,2.785,1045,2.355,1046,2.785,1047,2.355,1048,2.355,1049,2.785,1050,2.785,1051,2.355,1052,2.355,1053,3.406,1054,2.355,1055,2.355,1056,2.785,1057,2.785]],["title/dependencies.html",[91,1.939,1058,2.106]],["body/dependencies.html",[26,1.844,30,0.026,43,0.459,44,1.781,86,0.02,87,0.02,91,1.984,105,4.484,108,3.542,109,3.22,114,3.527,117,2.786,120,3.527,124,2.533,149,3.103,150,3.527,155,3.527,156,3.527,175,1.603,233,1.401,272,2.533,279,1.844,346,2.533,392,2.533,396,2.952,399,2.533,987,3.527,988,3.527,989,3.527,1059,4.171,1060,4.171,1061,6.722,1062,4.171,1063,5.303,1064,4.171,1065,4.171,1066,4.171,1067,4.171,1068,4.171,1069,4.171,1070,4.171,1071,4.171,1072,6.334,1073,4.171,1074,4.171,1075,4.171,1076,4.171,1077,4.171,1078,4.171,1079,4.171,1080,4.171,1081,4.171,1082,4.171,1083,4.171,1084,4.171]],["title/miscellaneous/functions.html",[1085,1.891,1086,3.447]],["body/miscellaneous/functions.html",[19,0.889,30,0.023,83,2.199,86,0.023,87,0.023,478,4.809,479,3.932,1045,5.178,1085,3.53,1086,4.469,1087,5.285]],["title/index.html",[19,0.476,1088,2.831,1089,2.831]],["body/index.html",[0,0.833,4,0.29,30,0.02,31,0.928,86,0.02,87,0.02,101,1.965,149,4.882,258,1.298,387,2.121,396,3.231,413,3.921,526,2.759,994,3.493,1002,3.493,1058,3.073,1090,4.13,1091,5.27,1092,4.13,1093,5.804,1094,3.493,1095,4.13,1096,4.13,1097,5.27,1098,6.315,1099,4.13,1100,4.13,1101,4.13,1102,4.13,1103,4.13,1104,4.13,1105,4.13,1106,4.13,1107,4.13,1108,4.13,1109,4.13,1110,5.804,1111,5.804,1112,4.13,1113,6.113,1114,4.13,1115,4.13,1116,4.13,1117,4.13,1118,5.27,1119,5.27,1120,6.113,1121,5.27,1122,5.27,1123,4.13,1124,4.13,1125,4.13,1126,4.13,1127,5.27,1128,4.13,1129,4.13,1130,4.13,1131,4.13,1132,5.804,1133,4.13,1134,4.13,1135,4.13,1136,3.073,1137,4.13,1138,3.493]],["title/modules.html",[90,1.661]],["body/modules.html",[30,0.022,86,0.022,87,0.022,89,3.229,90,1.736,97,2.936,98,2.936,109,4.014,268,2.936,269,2.692,971,3.229,976,2.936,1010,3.229,1014,2.936,1139,6.61,1140,6.61,1141,6.891,1142,6.462,1143,6.462]],["title/overview.html",[1136,3.441]],["body/overview.html",[1,1.979,2,1.34,30,0.026,66,1.979,68,1.571,70,1.571,72,1.979,74,1.571,76,1.679,78,1.571,80,1.571,82,1.679,86,0.017,87,0.017,89,4.532,90,1.252,91,2.243,92,2.949,93,2.949,94,2.949,95,2.949,96,3.244,97,3.244,98,4.022,99,2.625,100,1.941,101,1.659,174,1.791,187,2.118,196,1.941,241,2.329,265,2.949,266,2.949,267,2.949,268,3.244,269,3.655,434,2.541,614,2.594,751,2.949,752,2.949,753,2.949,815,3.244,971,4.511,972,2.949,973,2.949,974,2.949,975,2.949,976,3.244,1010,4.115,1011,2.949,1012,2.949,1013,2.949,1014,3.244,1136,2.594,1144,3.487,1145,3.487,1146,3.487,1147,3.487,1148,3.487]],["title/properties.html",[20,1.281,1058,2.106]],["body/properties.html",[20,1.703,30,0.024,86,0.023,87,0.023,1094,4.583,1149,5.42]],["title/routes.html",[174,2.375]],["body/routes.html",[30,0.023,86,0.023,87,0.023,174,2.81]],["title/miscellaneous/variables.html",[1085,1.891,1150,3.447]],["body/miscellaneous/variables.html",[11,1.211,19,0.441,30,0.026,32,1.249,37,1.295,38,2.579,39,2.579,40,1.027,45,2.397,49,1.704,54,2.633,86,0.014,87,0.014,96,3.061,125,2.868,142,2.575,162,1.95,188,1.95,190,1.95,192,3.401,193,1.95,198,3.053,199,2.588,217,1.46,246,2.776,255,2.575,259,1.642,263,3.26,273,1.95,312,2.341,330,2.776,331,1.95,332,2.217,334,2.868,335,3.401,336,3.26,337,2.868,338,2.217,339,3.053,340,3.26,341,2.217,342,2.217,343,2.217,372,1.95,383,2.175,425,1.95,426,1.592,427,2.868,483,2.575,484,1.95,485,2.776,486,1.95,487,3.053,488,1.95,489,1.95,490,1.95,491,1.95,492,1.95,493,1.95,494,1.95,667,2.575,979,2.868,1025,2.217,1026,4.262,1032,2.217,1033,3.866,1034,4.262,1036,2.217,1037,4.262,1038,3.866,1039,3.866,1047,2.217,1048,3.26,1051,2.217,1052,2.217,1053,2.217,1054,3.26,1055,3.26,1085,1.751,1138,3.26,1150,2.217,1151,5.37,1152,2.622,1153,3.855,1154,5.04,1155,2.622,1156,2.622,1157,5.37,1158,4.572,1159,2.622,1160,2.622,1161,2.622,1162,3.855,1163,4.572,1164,2.622,1165,2.622,1166,2.622,1167,2.622,1168,3.855,1169,3.855,1170,2.622,1171,2.622,1172,2.622,1173,2.622,1174,3.855,1175,3.855,1176,2.622,1177,2.622]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":406,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1149,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["0.29.0",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":714,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["1.1.19",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":962,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["1.5rem",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["10",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["10.4.5",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":565,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["10px",{"_index":532,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["12",{"_index":1148,"title":{},"body":{"overview.html":{}}}],["12.1.2",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["13.3.0",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["13.3.7",{"_index":1095,"title":{},"body":{"index.html":{}}}],["13.3.9",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["150px",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["15px",{"_index":537,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["1e90ff",{"_index":490,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["1px",{"_index":723,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["2.11.5",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["2.28.0",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":704,"title":{},"body":{"components/NavbarComponent.html":{}}}],["20px",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["25",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["2rem",{"_index":530,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["3",{"_index":1146,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":239,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["303030",{"_index":733,"title":{},"body":{"components/NavbarComponent.html":{}}}],["3f51b5",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["4",{"_index":1147,"title":{},"body":{"overview.html":{}}}],["400px",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["40px",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["5",{"_index":1145,"title":{},"body":{"overview.html":{}}}],["5.0.2",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["500px",{"_index":807,"title":{},"body":{"components/SignupComponent.html":{}}}],["5px",{"_index":724,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["600px",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["7.0.1",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["85",{"_index":806,"title":{},"body":{"components/SignupComponent.html":{}}}],["9",{"_index":1144,"title":{},"body":{"overview.html":{}}}],["960px",{"_index":715,"title":{},"body":{"components/NavbarComponent.html":{}}}],["9])(?=.*?\\w",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["_id",{"_index":501,"title":{},"body":{"components/EventCalendarComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{},"interfaces/User.html":{}}}],["_ngzone",{"_index":867,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["_snackbar",{"_index":202,"title":{},"body":{"injectables/AuthEffects.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["a.active",{"_index":731,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a11ylabel",{"_index":447,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["a:hover",{"_index":732,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a:not(:last",{"_index":734,"title":{},"body":{"components/NavbarComponent.html":{}}}],["action",{"_index":339,"title":{},"body":{"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["action.user",{"_index":340,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["actionreducer",{"_index":189,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["actionreducermap",{"_index":190,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["actions.ts",{"_index":1026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions/auth",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["activatedroutesnapshot",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{},"guards/TasksResolver.html":{}}}],["activedayisopen",{"_index":349,"title":{},"body":{"components/CalendarComponent.html":{}}}],["actual_component",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["ad2121",{"_index":486,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["adapterfactory",{"_index":759,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["adapters/date",{"_index":761,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["add",{"_index":526,"title":{},"body":{"components/EventCalendarComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"index.html":{}}}],["add(entity",{"_index":823,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["adddays",{"_index":476,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["addevent",{"_index":430,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["address",{"_index":562,"title":{},"body":{"components/InputComponent.html":{}}}],["afterclosed",{"_index":522,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["afterend",{"_index":814,"title":{},"body":{"interfaces/Task.html":{}}}],["align",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["allday",{"_index":809,"title":{},"body":{"interfaces/Task.html":{}}}],["angular",{"_index":396,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["angular/cdk/text",{"_index":899,"title":{},"body":{"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{}}}],["angular/common",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/ViewModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/TaskDataService.html":{}}}],["angular/compiler",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["angular/material/card",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{},"modules/TaskModule.html":{}}}],["angular/material/core",{"_index":763,"title":{},"body":{"modules/SharedModule.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{}}}],["angular/material/datepicker",{"_index":765,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["angular/material/dialog",{"_index":477,"title":{},"body":{"components/EventCalendarComponent.html":{},"modules/SharedModule.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{}}}],["angular/material/form",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["angular/material/icon",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["angular/material/list",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["angular/material/sidenav",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":229,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["angular/material/toolbar",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"modules/ViewRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["app.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1103,"title":{},"body":{"index.html":{}}}],["applied",{"_index":907,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["appmodule",{"_index":89,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":97,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":48,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["artifacts",{"_index":1114,"title":{},"body":{"index.html":{}}}],["audi",{"_index":800,"title":{},"body":{"components/SignupComponent.html":{}}}],["auth",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":296,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["auth.guard.ts",{"_index":737,"title":{},"body":{"guards/NotAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:17",{"_index":738,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["auth.guard.ts:19",{"_index":739,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["auth/actions/auth",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["auth/auth.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/selectors/auth.selectors",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{}}}],["auth0/angular",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["authactions",{"_index":234,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["autheffects",{"_index":195,"title":{"injectables/AuthEffects.html":{}},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authfeaturekey",{"_index":334,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":176,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":98,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authreducer",{"_index":337,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authroutingmodule",{"_index":268,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":301,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["authstate",{"_index":330,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AuthState.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstate.user",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1104,"title":{},"body":{"index.html":{}}}],["autoprefixer",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["autosize",{"_index":848,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["available",{"_index":1143,"title":{},"body":{"modules.html":{}}}],["background",{"_index":534,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["bar",{"_index":230,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["beforestart",{"_index":813,"title":{},"body":{"interfaces/Task.html":{}}}],["between",{"_index":709,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["blue",{"_index":489,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["bold",{"_index":964,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["boolean",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{},"interfaces/Task.html":{},"guards/TasksResolver.html":{}}}],["bootstrap",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":725,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":959,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["break",{"_index":695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["breakpointobserver",{"_index":670,"title":{},"body":{"components/NavbarComponent.html":{}}}],["breakpoints",{"_index":684,"title":{},"body":{"components/NavbarComponent.html":{}}}],["browse",{"_index":1141,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1113,"title":{},"body":{"index.html":{}}}],["button",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["calendar",{"_index":346,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{}}}],["calendar'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["calendar.component",{"_index":982,"title":{},"body":{"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{}}}],["calendar.component.html",{"_index":348,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["calendar.component.scss",{"_index":347,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["calendar.component.ts",{"_index":427,"title":{},"body":{"components/EventCalendarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calendar.component.ts:121",{"_index":443,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendar.component.ts:125",{"_index":440,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendar.component.ts:140",{"_index":441,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendar.component.ts:161",{"_index":438,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendar.component.ts:177",{"_index":442,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendar.component.ts:68",{"_index":456,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendar.component.ts:70",{"_index":455,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendar.component.ts:89",{"_index":436,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendar.component.ts:96",{"_index":444,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendar/calendar.component",{"_index":766,"title":{},"body":{"modules/SharedModule.html":{}}}],["calendar/date",{"_index":760,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["calendar/event",{"_index":426,"title":{},"body":{"components/EventCalendarComponent.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calendarcomponent",{"_index":66,"title":{"components/CalendarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendardate",{"_index":420,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarevent",{"_index":366,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["calendareventaction",{"_index":445,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["calendareventtimeschangedevent",{"_index":375,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["calendarmodule",{"_index":757,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["calendarmodule.forroot",{"_index":767,"title":{},"body":{"modules/SharedModule.html":{}}}],["calendarview",{"_index":350,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["calendarview.month",{"_index":390,"title":{},"body":{"components/CalendarComponent.html":{}}}],["canactivate",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"guards/NotAuthGuard.html":{}}}],["canactivate(route",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{}}}],["capabilities",{"_index":1130,"title":{},"body":{"index.html":{}}}],["card",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["cars",{"_index":796,"title":{},"body":{"components/SignupComponent.html":{}}}],["case",{"_index":692,"title":{},"body":{"components/NavbarComponent.html":{}}}],["catcherror",{"_index":460,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["catcherror((err",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["cdktextareaautosize",{"_index":876,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["center",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["change",{"_index":1106,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":428,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["changedetectionstrategy",{"_index":457,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["changedetectionstrategy.default",{"_index":429,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":845,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["changes",{"_index":906,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["characters",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":1135,"title":{},"body":{"index.html":{}}}],["child",{"_index":735,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["choice",{"_index":1126,"title":{},"body":{"index.html":{}}}],["choose",{"_index":942,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["class",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["cli",{"_index":1093,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":511,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["close",{"_index":948,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["closeopenmonthviewday",{"_index":355,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cluster_appmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":751,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":753,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":752,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":972,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_declarations",{"_index":975,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":973,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":974,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_viewmodule",{"_index":1011,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["cluster_viewmodule_declarations",{"_index":1012,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["cluster_viewmodule_imports",{"_index":1013,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["code",{"_index":1108,"title":{},"body":{"index.html":{}}}],["color",{"_index":500,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{}}}],["colors",{"_index":483,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["command",{"_index":1127,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/ViewModule.html":{}}}],["complete",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["compodoc/compodoc",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"overview.html":{}}}],["components/datetime",{"_index":988,"title":{},"body":{"modules/TaskModule.html":{},"dependencies.html":{}}}],["config",{"_index":480,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["config.ts",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirm",{"_index":801,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmation",{"_index":802,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpassword",{"_index":659,"title":{},"body":{"injectables/MatchPassword.html":{},"components/SignupComponent.html":{}}}],["connect",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["console.log('here",{"_index":343,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["console.log('hereeee",{"_index":221,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["console.log(this.task",{"_index":927,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["const",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/EventCalendarComponent.html":{},"injectables/MatchPassword.html":{},"components/TaskDialogComponent.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"guards/TasksResolver.html":{}}}],["constructor(actions",{"_index":201,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(breakpointobserver",{"_index":669,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(fb",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["constructor(http",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskDataService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/NotAuthGuard.html":{},"guards/TasksResolver.html":{}}}],["constructor(serviceelementsfactory",{"_index":967,"title":{},"body":{"injectables/TaskEntityService.html":{}}}],["constructor(store",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{}}}],["constructor(taskentityservice",{"_index":998,"title":{},"body":{"guards/TasksResolver.html":{}}}],["constructor(tasksentityservice",{"_index":433,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["contain",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["container",{"_index":703,"title":{},"body":{"components/NavbarComponent.html":{}}}],["content",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["content:not(:last",{"_index":958,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["context",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":548,"title":{},"body":{"components/InputComponent.html":{}}}],["course",{"_index":525,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["coverage",{"_index":1020,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":524,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["createaction",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[logout",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":208,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["createfeatureselector",{"_index":191,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["createfeatureselector(authfeaturekey",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":332,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":192,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["createselector(isloggedin",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cssclass",{"_index":810,"title":{},"body":{"interfaces/Task.html":{}}}],["cursor",{"_index":727,"title":{},"body":{"components/NavbarComponent.html":{}}}],["d1e8ff",{"_index":491,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":866,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["data.dialogtitle",{"_index":920,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["data.event",{"_index":922,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["data.mode",{"_index":924,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["data.service",{"_index":978,"title":{},"body":{"modules/TaskModule.html":{}}}],["data.service.ts",{"_index":817,"title":{},"body":{"injectables/TaskDataService.html":{},"coverage.html":{}}}],["data.service.ts:15",{"_index":828,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["data.service.ts:21",{"_index":830,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["data.service.ts:28",{"_index":824,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["data.service.ts:32",{"_index":826,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["data.service.ts:9",{"_index":822,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["date",{"_index":392,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{},"dependencies.html":{}}}],["date(end",{"_index":506,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["date(start",{"_index":504,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["date(task.end",{"_index":936,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["date(task.start",{"_index":935,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dateadapter",{"_index":758,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["datepicker",{"_index":951,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dates",{"_index":960,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["day",{"_index":424,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dayclicked",{"_index":356,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dayclicked(undefined",{"_index":371,"title":{},"body":{"components/CalendarComponent.html":{}}}],["db_url",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/ViewModule.html":{}}}],["decoration",{"_index":720,"title":{},"body":{"components/NavbarComponent.html":{}}}],["decorators",{"_index":877,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["default",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultdataservice",{"_index":819,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["defaultdialogconfig",{"_index":478,"title":{},"body":{"components/EventCalendarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"guards/TasksResolver.html":{}}}],["delete",{"_index":451,"title":{},"body":{"components/EventCalendarComponent.html":{},"injectables/TaskDataService.html":{}}}],["delete(key",{"_index":825,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["deleteaccount",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccount(userid",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":91,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/ViewModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":502,"title":{},"body":{"components/EventCalendarComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{}}}],["destroy",{"_index":351,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["dev",{"_index":1100,"title":{},"body":{"index.html":{}}}],["development",{"_index":1096,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dialog",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dialog.component",{"_index":482,"title":{},"body":{"components/EventCalendarComponent.html":{},"modules/TaskModule.html":{}}}],["dialog.component.html",{"_index":847,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.scss",{"_index":846,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts",{"_index":844,"title":{},"body":{"components/TaskDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:121",{"_index":871,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:123",{"_index":870,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:127",{"_index":872,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:131",{"_index":873,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":879,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":874,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":882,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:54",{"_index":887,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":883,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":897,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":891,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:62",{"_index":888,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:64",{"_index":875,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":884,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:67",{"_index":893,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":892,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:69",{"_index":898,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:70",{"_index":886,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:71",{"_index":890,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:72",{"_index":889,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:73",{"_index":894,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:74",{"_index":895,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":896,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:76",{"_index":881,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:77",{"_index":885,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:78",{"_index":869,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog/task",{"_index":481,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["dialogconfig",{"_index":510,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["dialogconfig.data",{"_index":512,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["dialogref",{"_index":864,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialogtitle",{"_index":513,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["diploma",{"_index":213,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["direction",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["directive",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["directives",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1112,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1117,"title":{},"body":{"index.html":{}}}],["disableclose",{"_index":517,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["disabled",{"_index":849,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["disableminute",{"_index":850,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dispatch",{"_index":216,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["display",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["dist",{"_index":1116,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":461,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["documentation",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["draggable",{"_index":811,"title":{},"body":{"interfaces/Task.html":{}}}],["duration",{"_index":238,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["dynamic",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1124,"title":{},"body":{"index.html":{}}}],["e3bc08",{"_index":493,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["edit",{"_index":448,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["edited",{"_index":518,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["eds",{"_index":990,"title":{},"body":{"modules/TaskModule.html":{}}}],["eds.registermetadatamap(entitymetadatatask",{"_index":992,"title":{},"body":{"modules/TaskModule.html":{}}}],["effects/auth.effects",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["effectsmodule.forfeature([autheffects",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodule.forroot",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["email",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["emitchildevent",{"_index":431,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["emitchildevent(undefined",{"_index":439,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["emitclickevent",{"_index":364,"title":{},"body":{"components/CalendarComponent.html":{}}}],["enablemeridian",{"_index":851,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["end",{"_index":413,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{},"index.html":{}}}],["endofday",{"_index":474,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["enter",{"_index":559,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["entity",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/TaskDataService.html":{},"modules/TaskModule.html":{}}}],["entity.service",{"_index":472,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{},"guards/TasksResolver.html":{}}}],["entity.service.ts",{"_index":965,"title":{},"body":{"injectables/TaskEntityService.html":{},"coverage.html":{}}}],["entity.service.ts:9",{"_index":969,"title":{},"body":{"injectables/TaskEntityService.html":{}}}],["entitycollectionservicebase",{"_index":966,"title":{},"body":{"injectables/TaskEntityService.html":{}}}],["entitycollectionserviceelementsfactory",{"_index":968,"title":{},"body":{"injectables/TaskEntityService.html":{}}}],["entityconfig",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitydatamodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["entitydatamodule.forroot",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["entitydatamoduleconfig",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitydataservice",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{}}}],["entitydataservice.registerservice('task",{"_index":993,"title":{},"body":{"modules/TaskModule.html":{}}}],["entitydefinitionservice",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{}}}],["entitydispatcheroptions",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitymetadata",{"_index":1038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitymetadatamap",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitymetadatatask",{"_index":979,"title":{},"body":{"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{}}}],["err",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["error",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["event",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{}}}],["eventcalendarcomponent",{"_index":68,"title":{"components/EventCalendarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["eventemitter",{"_index":368,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["events",{"_index":362,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["events.length",{"_index":405,"title":{},"body":{"components/CalendarComponent.html":{}}}],["eventtimeschanged",{"_index":357,"title":{},"body":{"components/CalendarComponent.html":{}}}],["eventtimeschanged(undefined",{"_index":374,"title":{},"body":{"components/CalendarComponent.html":{}}}],["example",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["execute",{"_index":1121,"title":{},"body":{"index.html":{}}}],["export",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["exports",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["extends",{"_index":818,"title":{},"body":{"injectables/TaskDataService.html":{},"injectables/TaskEntityService.html":{}}}],["f5f5f5",{"_index":535,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["fae3e3",{"_index":488,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":217,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["fb.group",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["fdf1ba",{"_index":494,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["field",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{},"components/InputComponent.html":{},"modules/SharedModule.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{}}}],["files",{"_index":1107,"title":{},"body":{"index.html":{}}}],["filter",{"_index":462,"title":{},"body":{"components/EventCalendarComponent.html":{},"guards/TasksResolver.html":{}}}],["filter((loaded",{"_index":1007,"title":{},"body":{"guards/TasksResolver.html":{}}}],["first",{"_index":1002,"title":{},"body":{"guards/TasksResolver.html":{},"index.html":{}}}],["firstname",{"_index":787,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["flex",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["fns",{"_index":399,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{}}}],["fns/locale",{"_index":902,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["font",{"_index":528,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["form",{"_index":567,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["formbuilder",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["formcontrol",{"_index":552,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["formcontrols",{"_index":925,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["formgroup",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["formgroup.value",{"_index":660,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["formsmodule",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["found",{"_index":746,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["found.component",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{}}}],["found.component.html",{"_index":748,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":747,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":745,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":750,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":749,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["fromauth",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{}}}],["fromauth.authreducer",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{}}}],["full",{"_index":299,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["function",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1086,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1131,"title":{},"body":{"index.html":{}}}],["gap",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["generate",{"_index":1110,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1092,"title":{},"body":{"index.html":{}}}],["get('http://localhost:3000/api/tasks",{"_index":835,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["getall",{"_index":820,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["getallusers",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcontrol",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["getcontrol(value",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["getloggeduserdata",{"_index":1033,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":1088,"title":{"index.html":{}},"body":{}}],["go",{"_index":1134,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1142,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":240,"title":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{},"guards/TasksResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{},"guards/TasksResolver.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/not",{"_index":295,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["h3",{"_index":527,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["handleevent",{"_index":358,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["handleevent(action",{"_index":377,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["header",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["header:not(:last",{"_index":957,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["height",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["help",{"_index":1132,"title":{},"body":{"index.html":{}}}],["hide",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{}}}],["hideconfirm",{"_index":773,"title":{},"body":{"components/SignupComponent.html":{}}}],["hidepassword",{"_index":774,"title":{},"body":{"components/SignupComponent.html":{}}}],["hidetime",{"_index":852,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["home",{"_index":539,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"modules/ViewRoutingModule.html":{}}}],["home'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["home.component.html",{"_index":541,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":540,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":1016,"title":{},"body":{"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["homecomponent",{"_index":70,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["homehome",{"_index":699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hometask",{"_index":700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["how_to_regsignup",{"_index":698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["http",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskDataService.html":{}}}],["http://localhost:3000/api",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskDataService.html":{}}}],["http://localhost:3000/api/task/${update.id",{"_index":839,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["http://localhost:4200",{"_index":1102,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskDataService.html":{}}}],["httpclientmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["httpurlgenerator",{"_index":821,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["httpurlgenerator.entityresource('task",{"_index":832,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["icon",{"_index":729,"title":{},"body":{"components/NavbarComponent.html":{}}}],["icon.ng",{"_index":953,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["iconname",{"_index":549,"title":{},"body":{"components/InputComponent.html":{}}}],["id",{"_index":507,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["identifier",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["ievent",{"_index":411,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["implements",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"guards/TasksResolver.html":{},"index.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["import('./task/task.module').then((m",{"_index":1018,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["import('./view/view.module').then((m",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["imports",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["information",{"_index":514,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["inherit",{"_index":706,"title":{},"body":{"components/NavbarComponent.html":{}}}],["initialauthstate",{"_index":335,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":900,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":914,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["injectable",{"_index":194,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/MatchPassword.html":{},"injectables/TaskDataService.html":{},"injectables/TaskEntityService.html":{}},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{},"injectables/TaskDataService.html":{},"injectables/TaskEntityService.html":{},"guards/TasksResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":196,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/MatchPassword.html":{},"injectables/TaskDataService.html":{},"injectables/TaskEntityService.html":{},"overview.html":{}}}],["input",{"_index":394,"title":{},"body":{"components/CalendarComponent.html":{},"components/InputComponent.html":{},"components/NavbarComponent.html":{}}}],["input'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["input.component.html",{"_index":547,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":546,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component",{"_index":755,"title":{},"body":{"modules/SharedModule.html":{}}}],["inputcomponent",{"_index":72,"title":{"components/InputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":361,"title":{},"body":{"components/CalendarComponent.html":{},"components/InputComponent.html":{}}}],["inputtype",{"_index":550,"title":{},"body":{"components/InputComponent.html":{}}}],["inserted",{"_index":955,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["instanceof",{"_index":693,"title":{},"body":{"components/NavbarComponent.html":{}}}],["interface",{"_index":186,"title":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":187,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/user.interface",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishandset",{"_index":666,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isloggedin",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isloggedout",{"_index":667,"title":{},"body":{"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issameday",{"_index":398,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["issameday(this.viewdate",{"_index":403,"title":{},"body":{"components/CalendarComponent.html":{}}}],["issamemonth",{"_index":397,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["issamemonth(date",{"_index":401,"title":{},"body":{"components/CalendarComponent.html":{}}}],["items",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["json.parse(user",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringify(action?.user",{"_index":214,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["justify",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["jwt",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["jwtmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["karma",{"_index":1123,"title":{},"body":{"index.html":{}}}],["key",{"_index":827,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["label",{"_index":446,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/InputComponent.html":{}}}],["last",{"_index":463,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["lastname",{"_index":788,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["layoutmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":716,"title":{},"body":{"components/NavbarComponent.html":{}}}],["legend",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["letter",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["link",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":372,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["loaded",{"_index":1005,"title":{},"body":{"guards/TasksResolver.html":{}}}],["loading",{"_index":668,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["localstorage.getitem('diploma",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.removeitem('diploma",{"_index":220,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["localstorage.setitem",{"_index":212,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loggedin",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["loggedout",{"_index":742,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["login",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["login(this.loginform.value",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["login(undefined",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":74,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{}}}],["logonly",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["logout",{"_index":198,"title":{},"body":{"injectables/AuthEffects.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logoutlogout",{"_index":701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lowercase",{"_index":561,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["m.taskmodule",{"_index":1019,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["m.viewmodule",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map",{"_index":464,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TaskDataService.html":{}}}],["map((result",{"_index":676,"title":{},"body":{"components/NavbarComponent.html":{}}}],["margin",{"_index":531,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["mat",{"_index":566,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["mat_dialog_data",{"_index":901,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["matbuttonmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["matcardmodule",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{},"modules/TaskModule.html":{}}}],["match",{"_index":804,"title":{},"body":{"components/SignupComponent.html":{}}}],["matching",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":651,"title":{"injectables/MatchPassword.html":{}},"body":{"injectables/MatchPassword.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["matdatepickermodule",{"_index":764,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["matdialog",{"_index":435,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["matdialogmodule",{"_index":756,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["matdialogref",{"_index":865,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["material",{"_index":987,"title":{},"body":{"modules/TaskModule.html":{},"dependencies.html":{}}}],["matformfieldmodule",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["maticonmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["matlistmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":762,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["matprogressspinnermodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["matsidenavmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":203,"title":{},"body":{"injectables/AuthEffects.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["matsnackbarmodule",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{}}}],["mattoolbarmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["maxage",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["maxdate",{"_index":853,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["media",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["menu",{"_index":697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mercedes",{"_index":799,"title":{},"body":{"components/SignupComponent.html":{}}}],["message",{"_index":207,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["metadata.ts",{"_index":1037,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["metareducer",{"_index":193,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"guards/TasksResolver.html":{}}}],["min",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["mindate",{"_index":854,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["miscellaneous",{"_index":1085,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm/dd/yyyy",{"_index":943,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["modaldata",{"_index":352,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":515,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["module",{"_index":88,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}},"body":{}}],["modules",{"_index":90,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":422,"title":{},"body":{"components/CalendarComponent.html":{}}}],["more",{"_index":1133,"title":{},"body":{"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"guards/TasksResolver.html":{},"index.html":{}}}],["nav",{"_index":719,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":663,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["navbar.component.html",{"_index":665,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":664,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":76,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1101,"title":{},"body":{"index.html":{}}}],["navigatebyurl('/login",{"_index":223,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["navigationcancel",{"_index":686,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigationend",{"_index":687,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigationerror",{"_index":688,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigationstart",{"_index":689,"title":{},"body":{"components/NavbarComponent.html":{}}}],["need",{"_index":1128,"title":{},"body":{"index.html":{}}}],["new",{"_index":387,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"index.html":{}}}],["newend",{"_index":408,"title":{},"body":{"components/CalendarComponent.html":{}}}],["newstart",{"_index":407,"title":{},"body":{"components/CalendarComponent.html":{}}}],["next",{"_index":419,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ng",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["ngondestroy",{"_index":359,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["ngrx/data",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"injectables/TaskDataService.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":831,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["ngrx/router",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"dependencies.html":{}}}],["ngxmatdatetimepickermodule",{"_index":985,"title":{},"body":{"modules/TaskModule.html":{}}}],["ngxmatnativedatemodule",{"_index":986,"title":{},"body":{"modules/TaskModule.html":{}}}],["ngzone",{"_index":868,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["none",{"_index":721,"title":{},"body":{"components/NavbarComponent.html":{}}}],["noop",{"_index":465,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{}}}],["not(:last",{"_index":961,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["notauthguard",{"_index":294,"title":{"guards/NotAuthGuard.html":{}},"body":{"modules/AuthRoutingModule.html":{},"guards/NotAuthGuard.html":{},"coverage.html":{}}}],["notfoundcomponent",{"_index":78,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["null",{"_index":661,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["number",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["object",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"guards/TasksResolver.html":{}}}],["observe(breakpoints.handset",{"_index":675,"title":{},"body":{"components/NavbarComponent.html":{}}}],["oftype",{"_index":231,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authactions.login",{"_index":210,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authactions.logout",{"_index":219,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authactions.signup",{"_index":227,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["ok",{"_index":237,"title":{},"body":{"injectables/AuthEffects.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["on(authactions.login",{"_index":338,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authactions.logout",{"_index":342,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authactions.signup",{"_index":341,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["onclick",{"_index":449,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["onclose",{"_index":861,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["oninit",{"_index":345,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["onsave",{"_index":862,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["onsubmit",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ontaskchanges",{"_index":432,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["open(taskdialogcomponent",{"_index":521,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["opensnackbar",{"_index":200,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["opensnackbar(message",{"_index":205,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["optimisticupdate",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{}}}],["out",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/ViewModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":395,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["outputs",{"_index":363,"title":{},"body":{"components/CalendarComponent.html":{}}}],["override",{"_index":834,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["overview",{"_index":1136,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1058,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":536,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["page",{"_index":1138,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"guards/TasksResolver.html":{}}}],["password",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["password.validator",{"_index":784,"title":{},"body":{"components/SignupComponent.html":{}}}],["password.validator.ts",{"_index":653,"title":{},"body":{"injectables/MatchPassword.html":{},"coverage.html":{}}}],["password.validator.ts:6",{"_index":656,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["passwords",{"_index":803,"title":{},"body":{"components/SignupComponent.html":{}}}],["passwordsdontmatch",{"_index":657,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["path",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["pathmatch",{"_index":298,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["picker",{"_index":989,"title":{},"body":{"modules/TaskModule.html":{},"dependencies.html":{}}}],["pipe",{"_index":496,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["pipe(map((res",{"_index":836,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["pipe(take(1",{"_index":912,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":523,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["pipe(tap((val",{"_index":940,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["pipe(tap(console.log",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["platform",{"_index":1125,"title":{},"body":{"index.html":{}}}],["pluralnames",{"_index":1039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pointer",{"_index":728,"title":{},"body":{"components/NavbarComponent.html":{}}}],["popperjs/core",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":711,"title":{},"body":{"components/NavbarComponent.html":{}}}],["post(`${this.db_url}/login",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["pre",{"_index":533,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["previous",{"_index":417,"title":{},"body":{"components/CalendarComponent.html":{}}}],["primary",{"_index":485,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":235,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{}}}],["production",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1091,"title":{},"body":{"index.html":{}}}],["promise",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{},"guards/TasksResolver.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{},"interfaces/User.html":{},"properties.html":{}}}],["props",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":768,"title":{},"body":{"modules/SharedModule.html":{}}}],["providedin",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{}}}],["providers",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{}}}],["radius",{"_index":726,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reactiveformsmodule",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["red",{"_index":484,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":297,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["reducers",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":1137,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":353,"title":{},"body":{"components/CalendarComponent.html":{}}}],["reload",{"_index":1105,"title":{},"body":{"index.html":{}}}],["require",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":558,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["res['payload",{"_index":837,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["reset",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["resizable",{"_index":812,"title":{},"body":{"interfaces/Task.html":{}}}],["resize",{"_index":910,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["resolve",{"_index":995,"title":{},"body":{"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{}}}],["resolve(route",{"_index":1000,"title":{},"body":{"guards/TasksResolver.html":{}}}],["result.matches",{"_index":677,"title":{},"body":{"components/NavbarComponent.html":{}}}],["results",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"guards/TasksResolver.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"guards/TasksResolver.html":{}}}],["right",{"_index":730,"title":{},"body":{"components/NavbarComponent.html":{}}}],["role",{"_index":1009,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{}}}],["root'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["route",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{},"guards/TasksResolver.html":{}}}],["router",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{}}}],["routermodule",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":300,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstate",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstate.minimal",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{},"guards/TasksResolver.html":{}}}],["routes",{"_index":174,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TaskModule.html":{},"modules/ViewModule.html":{}}}],["routing.module.ts",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/TaskRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["row",{"_index":707,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["run",{"_index":1098,"title":{},"body":{"index.html":{}}}],["running",{"_index":1118,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":233,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"guards/TasksResolver.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":685,"title":{},"body":{"components/NavbarComponent.html":{}}}],["saab",{"_index":798,"title":{},"body":{"components/SignupComponent.html":{}}}],["save",{"_index":949,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["scaffolding",{"_index":1109,"title":{},"body":{"index.html":{}}}],["scale(1.3",{"_index":956,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["screen",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["secondary",{"_index":487,"title":{},"body":{"components/EventCalendarComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventCalendarComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/TaskDialogComponent.html":{}}}],["select(isloggedin",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select(isloggedout",{"_index":740,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["select(userid",{"_index":916,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["selectauthstate",{"_index":1034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectid",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["serve",{"_index":1099,"title":{},"body":{"index.html":{}}}],["server",{"_index":1097,"title":{},"body":{"index.html":{}}}],["serviceelementsfactory",{"_index":970,"title":{},"body":{"injectables/TaskEntityService.html":{}}}],["setview",{"_index":360,"title":{},"body":{"components/CalendarComponent.html":{}}}],["setview(view",{"_index":381,"title":{},"body":{"components/CalendarComponent.html":{}}}],["shared/shared.module",{"_index":288,"title":{},"body":{"modules/AuthModule.html":{}}}],["sharedmodule",{"_index":269,"title":{"modules/SharedModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["sharereplay",{"_index":466,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/NavbarComponent.html":{}}}],["showseconds",{"_index":855,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["showspinners",{"_index":856,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["sidenav",{"_index":702,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sign",{"_index":795,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup",{"_index":199,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signup'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["signup(this.signupform.value",{"_index":791,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup(user",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.component.html",{"_index":772,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.scss",{"_index":771,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":80,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":775,"title":{},"body":{"components/SignupComponent.html":{}}}],["size",{"_index":529,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"index.html":{}}}],["space",{"_index":708,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["spacing",{"_index":722,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["spec\\.ts",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["src/.../auth",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.selectors.ts",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":1087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../entity",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../event",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/actions/auth",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth",{"_index":293,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/effects/auth.effects.ts",{"_index":197,"title":{},"body":{"injectables/AuthEffects.html":{},"coverage.html":{}}}],["src/app/auth/effects/auth.effects.ts:16",{"_index":218,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:33",{"_index":228,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:50",{"_index":206,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:53",{"_index":226,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:9",{"_index":204,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:34",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:35",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:36",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:78",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:82",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:84",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/reducers",{"_index":903,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["src/app/auth/reducers/index.ts",{"_index":331,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/selectors/auth.selectors",{"_index":904,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["src/app/auth/selectors/auth.selectors.ts",{"_index":1032,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":770,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:23",{"_index":783,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:25",{"_index":782,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:26",{"_index":781,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:28",{"_index":776,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:60",{"_index":777,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:64",{"_index":780,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:80",{"_index":779,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:82",{"_index":778,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/entity",{"_index":1036,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:17",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:20",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/not",{"_index":736,"title":{},"body":{"guards/NotAuthGuard.html":{},"coverage.html":{}}}],["src/app/interfaces/task.interface",{"_index":470,"title":{},"body":{"components/EventCalendarComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{}}}],["src/app/interfaces/task.interface.ts",{"_index":808,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/interfaces/user.interface",{"_index":333,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/interfaces/user.interface.ts",{"_index":1008,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":662,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:23",{"_index":683,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":678,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:30",{"_index":671,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:37",{"_index":673,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:57",{"_index":680,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:58",{"_index":682,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:60",{"_index":672,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/not",{"_index":744,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/reducers",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["src/app/reducers/index.ts",{"_index":188,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:12",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:20",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:24",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:28",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:9",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/task/task",{"_index":471,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["src/app/services/task/tasks",{"_index":816,"title":{},"body":{"injectables/TaskDataService.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["src/app/services/task/tasks.resolver",{"_index":981,"title":{},"body":{"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{}}}],["src/app/services/task/tasks.resolver.ts",{"_index":997,"title":{},"body":{"guards/TasksResolver.html":{},"coverage.html":{}}}],["src/app/services/task/tasks.resolver.ts:11",{"_index":999,"title":{},"body":{"guards/TasksResolver.html":{}}}],["src/app/services/task/tasks.resolver.ts:13",{"_index":1001,"title":{},"body":{"guards/TasksResolver.html":{}}}],["src/app/shared/calendar/calendar.component.ts",{"_index":344,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/shared/calendar/calendar.component.ts:16",{"_index":388,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:18",{"_index":391,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:20",{"_index":385,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:22",{"_index":393,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:24",{"_index":389,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:30",{"_index":369,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:33",{"_index":367,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:35",{"_index":384,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:37",{"_index":365,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:41",{"_index":380,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:43",{"_index":378,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:47",{"_index":373,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:61",{"_index":376,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:78",{"_index":382,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:82",{"_index":370,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:86",{"_index":379,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/default",{"_index":479,"title":{},"body":{"components/EventCalendarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/input/input.component.ts",{"_index":545,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/shared/input/input.component.ts:10",{"_index":556,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:11",{"_index":555,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:12",{"_index":553,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:13",{"_index":551,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:17",{"_index":557,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/shared.module",{"_index":983,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":754,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/validators/match",{"_index":652,"title":{},"body":{"injectables/MatchPassword.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/view/home/home.component.ts",{"_index":538,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/view/home/home.component.ts:12",{"_index":543,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:8",{"_index":542,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/task/entity",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/view/task/event",{"_index":425,"title":{},"body":{"components/EventCalendarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/view/task/task",{"_index":843,"title":{},"body":{"components/TaskDialogComponent.html":{},"modules/TaskRoutingModule.html":{},"coverage.html":{}}}],["src/app/view/task/task.module.ts",{"_index":977,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/app/view/view",{"_index":1017,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["src/app/view/view.module.ts",{"_index":1015,"title":{},"body":{"modules/ViewModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1052,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["star",{"_index":954,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["start",{"_index":412,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{}}}],["started",{"_index":1089,"title":{"index.html":{}},"body":{}}],["startofday",{"_index":473,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["state",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"guards/NotAuthGuard.html":{},"guards/TasksResolver.html":{},"miscellaneous/variables.html":{}}}],["statekey",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["statements",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["stephour",{"_index":857,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["stepminute",{"_index":858,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["stepsecond",{"_index":859,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["sticky",{"_index":712,"title":{},"body":{"components/NavbarComponent.html":{}}}],["store",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"dependencies.html":{}}}],["stored",{"_index":1115,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["storemodule.forfeature(fromauth.authfeaturekey",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forroot",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot(reducers",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["subdays",{"_index":475,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["subject",{"_index":386,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["submit",{"_index":805,"title":{},"body":{"components/SignupComponent.html":{}}}],["subscribe",{"_index":508,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["successfully",{"_index":225,"title":{},"body":{"injectables/AuthEffects.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["super('task",{"_index":833,"title":{},"body":{"injectables/TaskDataService.html":{},"injectables/TaskEntityService.html":{}}}],["support",{"_index":1139,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1140,"title":{},"body":{"modules.html":{}}}],["svg.mat",{"_index":950,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["switch",{"_index":691,"title":{},"body":{"components/NavbarComponent.html":{}}}],["symbol",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["table",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskDialogComponent.html":{}}}],["takelast",{"_index":467,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{}}}],["takeuntil",{"_index":468,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["takeuntil(this.destroy",{"_index":497,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["tap",{"_index":232,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"guards/TasksResolver.html":{}}}],["tap((action",{"_index":211,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["tap((id",{"_index":917,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["tap((loaded",{"_index":1004,"title":{},"body":{"guards/TasksResolver.html":{}}}],["tap((loggedin",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap((loggedout",{"_index":741,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["tap((user",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["tap((val",{"_index":498,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["task",{"_index":40,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"guards/TasksResolver.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.color",{"_index":938,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["task.description",{"_index":939,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["task.id",{"_index":934,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["task.title",{"_index":937,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["task.ts",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["task?._id",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task?.description",{"_index":945,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["task?.end",{"_index":947,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["task?.start",{"_index":946,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["task?.title",{"_index":944,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["taskconnect",{"_index":1090,"title":{},"body":{"index.html":{}}}],["taskdataservice",{"_index":815,"title":{"injectables/TaskDataService.html":{}},"body":{"injectables/TaskDataService.html":{},"modules/TaskModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskdialogcomponent",{"_index":82,"title":{"components/TaskDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"modules/TaskModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskentityservice",{"_index":434,"title":{"injectables/TaskEntityService.html":{}},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"modules/TaskModule.html":{},"guards/TasksResolver.html":{},"coverage.html":{},"overview.html":{}}}],["taskmodule",{"_index":971,"title":{"modules/TaskModule.html":{}},"body":{"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskroutingmodule",{"_index":976,"title":{"modules/TaskRoutingModule.html":{}},"body":{"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":996,"title":{},"body":{"modules/TaskRoutingModule.html":{}}}],["tasksdataservice",{"_index":991,"title":{},"body":{"modules/TaskModule.html":{}}}],["tasksentityservice",{"_index":437,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["tasksresolver",{"_index":980,"title":{"guards/TasksResolver.html":{}},"body":{"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"guards/TasksResolver.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["templateref",{"_index":458,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["test",{"_index":994,"title":{},"body":{"modules/TaskRoutingModule.html":{},"index.html":{}}}],["testing",{"_index":1129,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1120,"title":{},"body":{"index.html":{}}}],["text",{"_index":554,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["textarea",{"_index":909,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["textfieldmodule",{"_index":984,"title":{},"body":{"modules/TaskModule.html":{}}}],["themepalette",{"_index":880,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["thesis.user",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{}}}],["this._id",{"_index":918,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this._ngzone.onstable",{"_index":911,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this._snackbar.open('logged",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._snackbar.open('signed",{"_index":793,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._snackbar.open(error.message",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this._snackbar.open(message",{"_index":236,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.actions",{"_index":505,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.actions$.pipe",{"_index":209,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.activedayisopen",{"_index":404,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.authservice",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.autosize.resizetofitcontent(true",{"_index":913,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.breakpointobserver",{"_index":674,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.db_url}/users/${userid",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.destroy$.next(true",{"_index":415,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":416,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.dialog",{"_index":520,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.dialog.open(taskdialogcomponent",{"_index":516,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.dialogref.close",{"_index":931,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.dialogref.close(val",{"_index":941,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.dialogtitle",{"_index":919,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.emitclickevent.emit",{"_index":400,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.events",{"_index":409,"title":{},"body":{"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{}}}],["this.events.filter((ievent",{"_index":453,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.events.map((ievent",{"_index":410,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.events.push",{"_index":503,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.fb.group",{"_index":926,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.form",{"_index":928,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.form.get(value",{"_index":930,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.form.patchvalue",{"_index":929,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.form.value",{"_index":932,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.handleevent('deleted",{"_index":454,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.handleevent('edited",{"_index":450,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.http",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskDataService.html":{}}}],["this.http.delete",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`http://localhost:3000/api/task/${key",{"_index":842,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["this.http.get(`${this.db_url}/users",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.patch",{"_index":838,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["this.http.post('http://localhost:3000/api/task",{"_index":841,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["this.http.post(`${this.db_url}/signup",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loading",{"_index":694,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loginform",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(value",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.matchpassword.validate",{"_index":789,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.mode",{"_index":923,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.ontaskchanges",{"_index":509,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.opensnackbar('logged",{"_index":224,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.router",{"_index":222,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.router.events.subscribe((event",{"_index":690,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl('/view/home').then",{"_index":215,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.router.navigatebyurl('view/home",{"_index":743,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["this.signupform",{"_index":786,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.get(value",{"_index":790,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.store",{"_index":915,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.store.dispatch(login",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.store.dispatch(logout",{"_index":696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.dispatch(signup",{"_index":792,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.store.pipe",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{}}}],["this.store.pipe(select(isloggedin",{"_index":679,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.pipe(select(isloggedout",{"_index":681,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.task",{"_index":921,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.taskentityservice",{"_index":933,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.taskentityservice.getall",{"_index":1006,"title":{},"body":{"guards/TasksResolver.html":{}}}],["this.taskentityservice.loaded$.pipe",{"_index":1003,"title":{},"body":{"guards/TasksResolver.html":{}}}],["this.tasksentityservice.delete(event.id",{"_index":452,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.tasksentityservice.entities",{"_index":495,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["this.view",{"_index":414,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.viewdate",{"_index":402,"title":{},"body":{"components/CalendarComponent.html":{}}}],["throwerror",{"_index":469,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/EventCalendarComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{}}}],["title.settitle('login",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{}}}],["title.settitle('signup",{"_index":785,"title":{},"body":{"components/SignupComponent.html":{}}}],["today",{"_index":418,"title":{},"body":{"components/CalendarComponent.html":{}}}],["toggle",{"_index":952,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["toolbar",{"_index":705,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toolbar.mat",{"_index":710,"title":{},"body":{"components/NavbarComponent.html":{}}}],["top",{"_index":564,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["touchui",{"_index":860,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["transform",{"_index":717,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["translatex",{"_index":718,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["trigger",{"_index":908,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["triggerresize",{"_index":863,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["true",{"_index":383,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{},"injectables/TaskEntityService.html":{},"guards/TasksResolver.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":336,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1119,"title":{},"body":{"index.html":{}}}],["up",{"_index":794,"title":{},"body":{"components/SignupComponent.html":{}}}],["update",{"_index":519,"title":{},"body":{"components/EventCalendarComponent.html":{},"injectables/TaskDataService.html":{},"components/TaskDialogComponent.html":{}}}],["update(update",{"_index":829,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["update.changes",{"_index":840,"title":{},"body":{"injectables/TaskDataService.html":{}}}],["uppercase",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["urltree",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{}}}],["use",{"_index":1111,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":769,"title":{},"body":{"modules/SharedModule.html":{}}}],["user",{"_index":54,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdata",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdata._id",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["val.foreach",{"_index":499,"title":{},"body":{"components/EventCalendarComponent.html":{}}}],["valid",{"_index":560,"title":{},"body":{"components/InputComponent.html":{}}}],["validate",{"_index":654,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validate(formgroup",{"_index":655,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validator",{"_index":658,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validators",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["validators.email",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(10",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.pattern",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["value",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["variable",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1150,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1094,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1122,"title":{},"body":{"index.html":{}}}],["view",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"modules/ViewModule.html":{}}}],["viewchild",{"_index":459,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{}}}],["viewchild('autosize",{"_index":878,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["viewdate",{"_index":354,"title":{},"body":{"components/CalendarComponent.html":{}}}],["viewmodule",{"_index":1010,"title":{"modules/ViewModule.html":{}},"body":{"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["viewroutingmodule",{"_index":1014,"title":{"modules/ViewRoutingModule.html":{}},"body":{"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["viewtitle\":\"en",{"_index":421,"title":{},"body":{"components/CalendarComponent.html":{}}}],["visibility",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["visibility_off",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["void",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/CalendarComponent.html":{},"components/EventCalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["volvo",{"_index":797,"title":{},"body":{"components/SignupComponent.html":{}}}],["wait",{"_index":905,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["webkit",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["week",{"_index":423,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weight",{"_index":963,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["width",{"_index":563,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"components/TaskDialogComponent.html":{}}}],["works",{"_index":544,"title":{},"body":{"components/HomeComponent.html":{},"components/NotFoundComponent.html":{}}}],["yellow",{"_index":492,"title":{},"body":{"components/EventCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["z",{"_index":713,"title":{},"body":{"components/NavbarComponent.html":{}}}],["z])(?=.*?[0",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["z])(?=.*?[a",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["zone.js",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'task-connect'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { login } from './auth/actions/auth-actions';\nimport { AppState } from './reducers';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'task-connect';\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    const user = localStorage.getItem('diploma-thesis.user');\n    if (user) {\n      this.store.dispatch(login({ user: JSON.parse(user) }));\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RouterState, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport {\n  EntityDataModule,\n  EntityDataService,\n  EntityDefinitionService,\n} from '@ngrx/data';\nimport { entityConfig } from './entity-metadata';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { reducers, metaReducers } from './reducers';\nimport { AuthModule } from './auth/auth.module';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { JwtModule } from '@auth0/angular-jwt';\n\n@NgModule({\n  declarations: [AppComponent, NavbarComponent, NotFoundComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    StoreModule.forRoot({}, {}),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    EffectsModule.forRoot([]),\n    StoreRouterConnectingModule.forRoot({\n      stateKey: 'router',\n      routerState: RouterState.Minimal,\n    }),\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AuthModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    EntityDataModule.forRoot({}),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'view',\n    loadChildren: () => \"import('./view/view.module').then((m) => m.ViewModule)\",\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/index.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer,\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\n\nexport interface AppState {}\n\nexport const reducers: ActionReducerMap = {};\n\nexport const metaReducers: MetaReducer[] = !environment.production\n  ? []\n  : [];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/effects/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login$\n                            \n                            \n                                logout$\n                            \n                            \n                                signup$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, router: Router, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/effects/auth.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \nopenSnackBar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/effects/auth.effects.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.login),\n        tap((action) => {\n          localStorage.setItem(\n            'diploma-thesis.user',\n            JSON.stringify(action?.user)\n          );\n          this.router.navigateByUrl('/view/home').then();\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/effects/auth.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.logout),\n        tap((action) => {\n          localStorage.removeItem('diploma-thesis.user');\n          console.log('hereeee');\n          this.router\n            .navigateByUrl('/login')\n            .then(() => this.openSnackBar('Logged Out Successfully!'));\n        })\n      ),\n    { dispatch: false }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/effects/auth.effects.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.signup),\n        tap((action) => {\n          localStorage.setItem(\n            'diploma-thesis.user',\n            JSON.stringify(action?.user)\n          );\n          this.router.navigateByUrl('/view/home').then();\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/effects/auth.effects.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { tap } from 'rxjs';\nimport { AuthActions } from '../actions';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private router: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  login$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.login),\n        tap((action) => {\n          localStorage.setItem(\n            'diploma-thesis.user',\n            JSON.stringify(action?.user)\n          );\n          this.router.navigateByUrl('/view/home').then();\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  signup$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.signup),\n        tap((action) => {\n          localStorage.setItem(\n            'diploma-thesis.user',\n            JSON.stringify(action?.user)\n          );\n          this.router.navigateByUrl('/view/home').then();\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, 'OK', { duration: 3000 });\n  }\n  logout$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.logout),\n        tap((action) => {\n          localStorage.removeItem('diploma-thesis.user');\n          console.log('hereeee');\n          this.router\n            .navigateByUrl('/login')\n            .then(() => this.openSnackBar('Logged Out Successfully!'));\n        })\n      ),\n    { dispatch: false }\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { isLoggedIn } from '../auth/selectors/auth.selectors';\nimport { AppState } from '../reducers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.store.pipe(\n      select(isLoggedIn),\n      tap((loggedIn) => {\n        if (!loggedIn) this.router.navigateByUrl('/login');\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromAuth from './reducers';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './effects/auth.effects';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatCardModule,\n    SharedModule,\n    StoreModule.forFeature(fromAuth.authFeatureKey, fromAuth.authReducer),\n    EffectsModule.forFeature([AuthEffects]),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotAuthGuard } from '../guards/not-auth.guard';\nimport { NotFoundComponent } from '../not-found/not-found.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent, canActivate: [NotAuthGuard] },\n  { path: 'signup', component: SignupComponent, canActivate: [NotAuthGuard] },\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DB_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                login\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \ndeleteAccount(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(undefined: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DB_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs';\nimport { User } from '../interfaces/user.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  DB_URL = 'http://localhost:3000/api';\n\n  login({ email, password }: User) {\n    return this.http\n      .post(`${this.DB_URL}/login`, { email, password })\n      .pipe(tap(console.log));\n  }\n\n  signup(user: User) {\n    return this.http.post(`${this.DB_URL}/signup`, user);\n  }\n\n  getAllUsers() {\n    return this.http.get(`${this.DB_URL}/users`);\n  }\n\n  deleteAccount(userId: string) {\n    return this.http.delete(\n      `${this.DB_URL}/users/${userId}`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createReducer,\n  createSelector,\n  MetaReducer,\n  on,\n} from '@ngrx/store';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { AuthActions } from '../actions';\n\nexport const authFeatureKey = 'auth';\n\nexport interface AuthState {\n  user?: User;\n}\n\nconst initialAuthState: AuthState = {\n  user: undefined,\n};\n\nexport const authReducer = createReducer(\n  initialAuthState,\n  on(AuthActions.login, (state, action) => {\n    return { user: action.user };\n  }),\n  on(AuthActions.signup, (state, action) => {\n    return { user: action.user };\n  }),\n  on(AuthActions.logout, (state, action) => {\n    console.log('here');\n    return { user: undefined };\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/calendar/calendar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n            \n                styleUrls\n                ./calendar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeDayIsOpen\n                            \n                            \n                                CalendarView\n                            \n                            \n                                destroy$\n                            \n                            \n                                modalData\n                            \n                            \n                                refresh\n                            \n                            \n                                view\n                            \n                            \n                                viewDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeOpenMonthViewDay\n                            \n                            \n                                dayClicked\n                            \n                            \n                                eventTimesChanged\n                            \n                            \n                                handleEvent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emitClickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/calendar/calendar.component.ts:37\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :     CalendarEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/calendar/calendar.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emitClickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/calendar/calendar.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeOpenMonthViewDay\n                        \n                    \n                \n            \n            \n                \ncloseOpenMonthViewDay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dayClicked\n                        \n                    \n                \n            \n            \n                \ndayClicked(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventTimesChanged\n                        \n                    \n                \n            \n            \n                \neventTimesChanged(undefined: CalendarEventTimesChangedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            CalendarEventTimesChangedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEvent\n                        \n                    \n                \n            \n            \n                \nhandleEvent(action: string, event: CalendarEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            CalendarEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setView\n                        \n                    \n                \n            \n            \n                \nsetView(view: CalendarView)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                            CalendarView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeDayIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CalendarView\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CalendarView\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CalendarView\n\n                    \n                \n                \n                    \n                        Default value : CalendarView.Month\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  CalendarView,\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n} from 'angular-calendar';\nimport { isSameMonth, isSameDay } from 'date-fns';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n})\nexport class CalendarComponent implements OnInit {\n  destroy$: Subject = new Subject();\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData!: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  @Output()\n  emitClickEvent = new EventEmitter();\n\n  @Input()\n  events: CalendarEvent[] = [];\n\n  activeDayIsOpen: boolean = true;\n\n  refresh = new Subject();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.emitClickEvent.emit({ action, event });\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n      this.viewDate = date;\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd,\n  }: CalendarEventTimesChangedEvent): void {\n    this.events = this.events.map((iEvent) => {\n      if (iEvent === event) {\n        return {\n          ...event,\n          start: newStart,\n          end: newEnd,\n        };\n      }\n      return iEvent;\n    });\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Previous\n        \n        \n          Today\n        \n        \n          Next\n        \n      \n    \n    \n      {{ viewDate | calendarDate: view + \"ViewTitle\":\"en\" }}\n    \n    \n      \n        \n          Month\n        \n        \n          Week\n        \n        \n          Day\n        \n      \n    \n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n\n  \n\n\n    \n\n    \n                \n                    ./calendar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Previous                          Today                          Next                            {{ viewDate | calendarDate: view + \"ViewTitle\":\"en\" }}                                Month                          Week                          Day                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventCalendarComponent.html":{"url":"components/EventCalendarComponent.html","title":"component - EventCalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventCalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/task/event-calendar/event-calendar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-calendar\n            \n\n            \n                styleUrls\n                ./event-calendar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-calendar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                destroy$\n                            \n                            \n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                emitChildEvent\n                            \n                            \n                                handleEvent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTaskChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksEntityService: TaskEntityService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/task/event-calendar/event-calendar.component.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksEntityService\n                                                  \n                                                        \n                                                                        TaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEvent\n                        \n                    \n                \n            \n            \n                \naddEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/event-calendar/event-calendar.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitChildEvent\n                        \n                    \n                \n            \n            \n                \nemitChildEvent(undefined: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/event-calendar/event-calendar.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEvent\n                        \n                    \n                \n            \n            \n                \nhandleEvent(action: string, event: CalendarEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/event-calendar/event-calendar.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            CalendarEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/event-calendar/event-calendar.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/event-calendar/event-calendar.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskChanges\n                        \n                    \n                \n            \n            \n                \nonTaskChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/event-calendar/event-calendar.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CalendarEventAction[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      label: '',\n      a11yLabel: 'Edit',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      },\n    },\n    {\n      label: ``,\n      a11yLabel: 'Delete',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.tasksEntityService.delete(event.id as string);\n        this.events = this.events.filter((iEvent) => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      },\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/event-calendar/event-calendar.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/event-calendar/event-calendar.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalendarEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/event-calendar/event-calendar.component.ts:89\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n} from '@angular/core';\nimport {\n  catchError,\n  distinctUntilChanged,\n  filter,\n  last,\n  map,\n  noop,\n  shareReplay,\n  Subject,\n  takeLast,\n  takeUntil,\n  tap,\n  throwError,\n} from 'rxjs';\nimport { Task } from 'src/app/interfaces/task.interface';\nimport { TaskEntityService } from 'src/app/services/task/task-entity.service';\n\nimport {\n  startOfDay,\n  endOfDay,\n  isSameDay,\n  isSameMonth,\n  subDays,\n  addDays,\n} from 'date-fns';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView,\n} from 'angular-calendar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { defaultDialogConfig } from 'src/app/shared/default-dialog-config';\nimport { TaskDialogComponent } from '../task-dialog/task-dialog.component';\nimport { select } from '@ngrx/store';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3',\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF',\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA',\n  },\n};\n\n@Component({\n  selector: 'app-event-calendar',\n  templateUrl: './event-calendar.component.html',\n  styleUrls: ['./event-calendar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class EventCalendarComponent implements OnInit {\n  destroy$: Subject = new Subject();\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '',\n      a11yLabel: 'Edit',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      },\n    },\n    {\n      label: ``,\n      a11yLabel: 'Delete',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.tasksEntityService.delete(event.id as string);\n        this.events = this.events.filter((iEvent) => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      },\n    },\n  ];\n\n  events: CalendarEvent[] = [];\n\n  constructor(\n    private tasksEntityService: TaskEntityService,\n    private dialog: MatDialog\n  ) {}\n\n  onTaskChanges() {\n    this.tasksEntityService.entities$\n      .pipe(\n        takeUntil(this.destroy$),\n        tap((val) => {\n          this.events = [];\n          val.forEach(({ start, end, title, color, _id, description }) => {\n            this.events.push({\n              start: new Date(start),\n              title,\n              actions: this.actions,\n              end: new Date(end as Date),\n              color: {\n                ...color,\n              },\n              description: description,\n              id: _id,\n            });\n          });\n        }),\n        distinctUntilChanged()\n      )\n      .subscribe();\n  }\n\n  ngOnInit(): void {\n    this.onTaskChanges();\n  }\n\n  emitChildEvent({ event, action }: any) {\n    const dialogConfig = defaultDialogConfig();\n    if (action === 'Clicked') {\n      dialogConfig.data = {\n        dialogTitle: 'Task Information',\n        event,\n        mode: 'view',\n      };\n    }\n    this.dialog.open(TaskDialogComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    const dialogConfig = defaultDialogConfig();\n\n    if (action === 'Edited') {\n      dialogConfig.data = {\n        dialogTitle: 'Edit Task',\n        event,\n        mode: 'update',\n      };\n\n      this.dialog\n        .open(TaskDialogComponent, {\n          ...dialogConfig,\n          disableClose: false,\n        })\n        .afterClosed()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n    }\n  }\n\n  addEvent(): void {\n    const dialogConfig = defaultDialogConfig();\n    dialogConfig.data = {\n      dialogTitle: 'Create Course',\n      mode: 'create',\n    };\n    this.dialog\n      .open(TaskDialogComponent, {\n        ...dialogConfig,\n        disableClose: false,\n      })\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n\n  Edit events\n  \n    Add new\n  \n  \n\n\n    \n\n    \n                \n                    ./event-calendar.component.scss\n                \n                h3 {\n  font-size: 2rem;\n  margin: 0 0 10px;\n}\n\npre {\n  background-color: #f5f5f5;\n  padding: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Edit events      Add new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventCalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/view/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/home/home.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        home works!\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'home works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/input/input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                iconName\n                            \n                            \n                                inputType\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/input/input.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/input/input.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent implements OnInit {\n  @Input() label = '';\n  @Input() inputType = 'text';\n  @Input() control!: FormControl;\n  @Input() iconName = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n  {{ iconName }}\n  \n    {{ label }} is required\n  \n    Enter a valid {{ label | lowercase }} address.\n\n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                .full-width {\n  margin-top: 10px;\n  width: 100%;\n}\n.mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}    {{ iconName }}      {{ label }} is required      Enter a valid {{ label | lowercase }} address.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                hide\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControl\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, title: Title, store: Store, authService: AuthService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport {\n  catchError,\n  map,\n  noop,\n  of,\n  Subject,\n  take,\n  takeLast,\n  takeUntil,\n  tap,\n  throwError,\n} from 'rxjs';\nimport { AppState } from 'src/app/reducers';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { login } from '../actions/auth-actions';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  hide = true;\n  destroy$: Subject = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    private title: Title,\n    private store: Store,\n    private authService: AuthService,\n    private _snackBar: MatSnackBar\n  ) {\n    title.setTitle('Login');\n\n    this.loginForm = fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.pattern(\n            /^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?\\W).*$/\n          ),\n        ],\n      ],\n    });\n  }\n\n  onSubmit() {\n    this.authService\n      .login(this.loginForm.value)\n      .pipe(\n        catchError((err) => {\n          return throwError(() => err);\n        }),\n        tap((user) => this.store.dispatch(login({ user }))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        error: ({ error }) => this._snackBar.open(error.message, 'OK'),\n        complete: () => this._snackBar.open('Logged in successfully!', 'OK'),\n      });\n  }\n\n  getControl(value: string) {\n    return this.loginForm.get(value) as FormControl;\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Login\n    \n    \n      \n\n      \n        Enter your password\n        \n        \n          {{\n            hide ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password is required\n        \n        \n          Password should be with at least 10 characters\n        \n        \n          Password must contain a symbol,\n          number, uppercase letter and\n          lowercase letter.\n        \n      \n\n      \n        Login\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                form {\n  width: 100%;\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n}\n\n.actions {\n  margin-top: 15px;\n}\n\n.example-card {\n  padding: 20px;\n  max-width: 400px;\n}\n.center-content {\n  text-align: -webkit-center;\n}\n.example-form {\n  min-width: 150px;\n  width: 100%;\n}\n\n.full-width {\n  margin-top: 10px;\n  width: 100%;\n}\n\n.mat-card-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-size: 1.5rem;\n}\n\n.mat-button {\n  margin-top: 10px;\n  width: 100%;\n  color: #fff !important;\n  height: 40px;\n  background-color: #3f51b5;\n}\n\n@media screen and (max-width: 600px) {\n  .example-card {\n    margin: 0 15px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login                            Enter your password                          {{            hide ? \"visibility_off\" : \"visibility\"          }}                          Password is required                          Password should be with at least 10 characters                          Password must contain a symbol,          number, uppercase letter and          lowercase letter.                            Login            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPassword.html":{"url":"injectables/MatchPassword.html","title":"injectable - MatchPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatchPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/validators/match-password.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(formGroup: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/validators/match-password.validator.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { passwordsDontMatch: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup, Validator } from '@angular/forms';\n\n@Injectable({ providedIn: 'root' })\nexport class MatchPassword implements Validator {\n  validate(formGroup: FormGroup) {\n    const { password, confirmPassword } = formGroup.value;\n\n    if (password !== confirmPassword) {\n      return { passwordsDontMatch: true };\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                            \n                                isLoggedOut$\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(isLoggedIn))\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(isLoggedOut))\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { select, Store } from '@ngrx/store';\nimport { AppState } from '../reducers';\nimport { isLoggedIn, isLoggedOut } from '../auth/selectors/auth.selectors';\nimport { logout } from '../auth/actions/auth-actions';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n} from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  loading = true;\n\n  isHandset$: Observable = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private store: Store,\n    private router: Router\n  ) {}\n  ngOnInit(): void {\n    this.router.events.subscribe((event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n  }\n  isLoggedIn$ = this.store.pipe(select(isLoggedIn));\n  isLoggedOut$ = this.store.pipe(select(isLoggedOut));\n\n  logout() {\n    this.store.dispatch(logout());\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      Login\n      Signup\n      Home\n    \n  \n  \n    \n      \n        \n          menu\n        \n        task-connect\n      \n      \n        input Login\n        how_to_regSignup\n        homeHome\n        homeTask\n        logoutLogout\n      \n    \n\n    \n      \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n@media (min-width: 960px) {\n  .mat-sidenav-content {\n    margin-left: 0 !important;\n  }\n\n  .mat-sidenav {\n    transform: translateX(-100%) !important;\n  }\n}\n\n.toolbar-nav {\n  display: flex;\n  flex-direction: row;\n}\n\n.toolbar-nav a {\n  text-decoration: none;\n  color: #fff;\n  font-size: 1.5rem;\n  letter-spacing: 1px;\n  padding: 5px 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.toolbar-nav a .mat-icon {\n  margin-right: 5px;\n}\n\n.toolbar-nav a.active,\n.toolbar-nav a:hover {\n  background-color: #303030;\n}\n\n.toolbar-nav a:not(:last-child) {\n  margin-right: 20px;\n}\n\n.spinner-container {\n  width: 100%;\n  height: 80%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu          Login      Signup      Home                                    menu                task-connect                    input Login        how_to_regSignup        homeHome        homeTask        logoutLogout                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/NotAuthGuard.html":{"url":"guards/NotAuthGuard.html","title":"guard - NotAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    NotAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/not-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/not-auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/not-auth.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { isLoggedOut } from '../auth/selectors/auth.selectors';\nimport { AppState } from '../reducers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotAuthGuard implements CanActivate {\n  constructor(private store: Store, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.store.pipe(\n      select(isLoggedOut),\n      tap((loggedOut) => {\n        if (!loggedOut) {\n          this.router.navigateByUrl('view/home');\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        not-found works!\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'not-found works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCalendarComponent->SharedModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nSharedModule -->\n\nInputComponent->SharedModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nSharedModule->CalendarComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nSharedModule->InputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            InputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            InputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputComponent } from './input/input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { CalendarComponent } from './calendar/calendar.component';\n@NgModule({\n  declarations: [InputComponent, CalendarComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    MatInputModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n  ],\n  exports: [InputComponent, CalendarComponent],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                hideConfirm\n                            \n                            \n                                hidePassword\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControl\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, title: Title, matchPassword: MatchPassword, authService: AuthService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPassword\n                                                  \n                                                        \n                                                                        MatchPassword\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup/signup.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup/signup.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup/signup.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signupForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup/signup.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Title } from '@angular/platform-browser';\nimport { Store } from '@ngrx/store';\nimport { catchError, Subject, takeUntil, tap, throwError } from 'rxjs';\nimport { AppState } from 'src/app/reducers';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatchPassword } from 'src/app/validators/match-password.validator';\nimport { signup } from '../actions/auth-actions';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n\n  hidePassword = true;\n  hideConfirm = true;\n\n  destroy$: Subject = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    private title: Title,\n    private matchPassword: MatchPassword,\n    private authService: AuthService,\n    private _snackBar: MatSnackBar\n  ) {\n    title.setTitle('Signup');\n    this.signupForm = fb.group(\n      {\n        firstName: ['', [Validators.required]],\n        lastName: ['', [Validators.required]],\n        email: ['', [Validators.email, Validators.required]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(10),\n            Validators.pattern(\n              /^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?\\W).*$/\n            ),\n          ],\n        ],\n        confirmPassword: ['', [Validators.required]],\n      },\n      { validators: [this.matchPassword.validate] }\n    );\n  }\n\n  getControl(value: string) {\n    return this.signupForm.get(value) as FormControl;\n  }\n\n  onSubmit() {\n    this.authService\n      .signup(this.signupForm.value)\n      .pipe(\n        catchError((err) => {\n          return throwError(() => err);\n        }),\n        tap((user) => this.store.dispatch(signup({ user }))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        error: ({ error }) => this._snackBar.open(error.message, 'OK'),\n        complete: () => this._snackBar.open('Signed up successfully!', 'OK'),\n      });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Sign up\n    \n    \n      \n      \n\n      \n        Cars\n        \n          Volvo\n          Saab\n          Mercedes\n          Audi\n        \n       -->\n      \n\n      \n        Enter your password\n        \n        \n          {{\n            hidePassword ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password is required\n        \n        \n          Password should be with\n          at least 10 characters \n          Password must contain a symbol,\n          number, uppercase letter and\n          lowercase letter.\n        \n      \n\n      \n        Confirm your password\n        \n        \n          {{\n            hideConfirm ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password confirmation is required\n        \n        \n          Password confirmation should be with\n          at least 10 characters\n        \n      \n\n      \n        \n          Passwords do not match\n        \n      \n\n      \n        Submit\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./signup.component.scss\n                \n                form {\n  width: 100%;\n  height: 85%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n}\n\n.actions {\n  margin-top: 15px;\n}\n\n.example-card {\n  max-width: 400px;\n}\n.center-content {\n  text-align: -webkit-center;\n}\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.full-width {\n  margin-top: 10px;\n  width: 100%;\n}\n\n.mat-card-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-size: 1.5rem;\n}\n\n.mat-button {\n  margin-top: 10px;\n  width: 100%;\n  color: #fff !important;\n  height: 40px;\n  background-color: #3f51b5;\n}\n\n@media screen and (max-width: 600px) {\n  .example-card {\n    margin: 0 15px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sign up                                  Cars                  Volvo          Saab          Mercedes          Audi               -->                    Enter your password                          {{            hidePassword ? \"visibility_off\" : \"visibility\"          }}                          Password is required                          Password should be with          at least 10 characters           Password must contain a symbol,          number, uppercase letter and          lowercase letter.                            Confirm your password                          {{            hideConfirm ? \"visibility_off\" : \"visibility\"          }}                          Password confirmation is required                          Password confirmation should be with          at least 10 characters                                      Passwords do not match                            Submit            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/task.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            allDay\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cssClass\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            draggable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            end\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resizable\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allDay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allDay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cssClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cssClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizable:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  _id?: string;\n  userId?: string;\n  start: Date;\n  end?: Date;\n  title: string;\n  color: {\n    primary: string;\n    secondary: string;\n  };\n  allDay?: boolean;\n  cssClass?: string;\n  resizable?: {\n    beforeStart?: boolean;\n    afterEnd?: boolean;\n  };\n  draggable?: boolean;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskDataService.html":{"url":"injectables/TaskDataService.html","title":"injectable - TaskDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task/tasks-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    DefaultDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task/tasks-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpUrlGenerator\n                                                  \n                                                        \n                                                                    HttpUrlGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(entity: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task/tasks-data.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task/tasks-data.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task/tasks-data.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(update: Update)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task/tasks-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Update\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DefaultDataService, HttpUrlGenerator } from '@ngrx/data';\nimport { Update } from '@ngrx/entity';\nimport { map, Observable } from 'rxjs';\nimport { Task } from 'src/app/interfaces/task.interface';\n\n@Injectable()\nexport class TaskDataService extends DefaultDataService {\n  constructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator) {\n    httpUrlGenerator.entityResource('Task', 'http://localhost:3000/api', true);\n    super('Task', http, httpUrlGenerator);\n  }\n\n  override getAll(): Observable {\n    return this.http\n      .get('http://localhost:3000/api/tasks')\n      .pipe(map((res: any) => res['payload']));\n  }\n\n  override update(update: Update): Observable {\n    return this.http.patch(\n      `http://localhost:3000/api/task/${update.id}`,\n      update.changes\n    );\n  }\n\n  override add(entity: Task): Observable {\n    return this.http.post('http://localhost:3000/api/task', entity);\n  }\n\n  override delete(key: string): Observable {\n    return this.http.delete(`http://localhost:3000/api/task/${key}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDialogComponent.html":{"url":"components/TaskDialogComponent.html","title":"component - TaskDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/task/task-dialog/task-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-dialog\n            \n\n            \n                styleUrls\n                ./task-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                autosize\n                            \n                            \n                                color\n                            \n                            \n                                colors\n                            \n                            \n                                dialogTitle\n                            \n                            \n                                disabled\n                            \n                            \n                                disableMinute\n                            \n                            \n                                enableMeridian\n                            \n                            \n                                form\n                            \n                            \n                                hideTime\n                            \n                            \n                                loading$\n                            \n                            \n                                maxDate\n                            \n                            \n                                minDate\n                            \n                            \n                                mode\n                            \n                            \n                                showSeconds\n                            \n                            \n                                showSpinners\n                            \n                            \n                                stepHour\n                            \n                            \n                                stepMinute\n                            \n                            \n                                stepSecond\n                            \n                            \n                                task\n                            \n                            \n                                touchUi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                            \n                                triggerResize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialogRef: MatDialogRef, store: Store, data: any, taskEntityService: TaskEntityService, _ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskEntityService\n                                                  \n                                                        \n                                                                        TaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/task-dialog/task-dialog.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/task-dialog/task-dialog.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/task-dialog/task-dialog.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSave\n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/task-dialog/task-dialog.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerResize\n                        \n                    \n                \n            \n            \n                \ntriggerResize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/task/task-dialog/task-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        autosize\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkTextareaAutosize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('autosize')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ThemePalette\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    red: {\n      primary: '#ad2121',\n      secondary: '#FAE3E3',\n    },\n    blue: {\n      primary: '#1e90ff',\n      secondary: '#D1E8FF',\n    },\n    yellow: {\n      primary: '#e3bc08',\n      secondary: '#FDF1BA',\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disableMinute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableMeridian\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"create\" | \"update\" | \"view\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSpinners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepMinute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepSecond\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touchUi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/task/task-dialog/task-dialog.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  NgZone,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { select, Store } from '@ngrx/store';\nimport { id } from 'date-fns/locale';\nimport { Observable, take, tap } from 'rxjs';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { userId } from 'src/app/auth/selectors/auth.selectors';\nimport { Task } from 'src/app/interfaces/task.interface';\nimport { TaskEntityService } from 'src/app/services/task/task-entity.service';\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task-dialog.component.html',\n  styleUrls: ['./task-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaskDialogComponent implements OnInit {\n  @ViewChild('autosize') autosize!: CdkTextareaAutosize;\n  triggerResize() {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n  colors: any = {\n    red: {\n      primary: '#ad2121',\n      secondary: '#FAE3E3',\n    },\n    blue: {\n      primary: '#1e90ff',\n      secondary: '#D1E8FF',\n    },\n    yellow: {\n      primary: '#e3bc08',\n      secondary: '#FDF1BA',\n    },\n  };\n  form!: FormGroup;\n\n  dialogTitle!: string;\n\n  task!: Task;\n\n  mode!: 'create' | 'update' | 'view';\n\n  loading$!: Observable;\n\n  _id?: string;\n\n  disabled = false;\n  showSpinners = true;\n  showSeconds = false;\n  touchUi = false;\n  enableMeridian = false;\n  minDate!: Date;\n  maxDate!: Date;\n  stepHour = 1;\n  stepMinute = 1;\n  stepSecond = 1;\n  color: ThemePalette = 'primary';\n  disableMinute = false;\n  hideTime = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) data: any,\n    private taskEntityService: TaskEntityService,\n    private _ngZone: NgZone\n  ) {\n    this.store\n      .pipe(\n        select(userId),\n        tap((id) => (this._id = id))\n      )\n      .subscribe();\n\n    this.dialogTitle = data.dialogTitle;\n    this.task = data.event;\n    this.mode = data.mode;\n    const formControls = {\n      title: ['', Validators.required],\n      start: ['', Validators.required],\n      end: ['', Validators.required],\n      color: this.fb.group({\n        primary: ['', Validators.required],\n        secondary: ['', Validators.required],\n      }),\n      description: ['', Validators.required],\n    };\n\n    if (this.mode === 'view') {\n      console.log(this.task);\n    } else if (this.mode == 'update') {\n      this.form = this.fb.group({ ...formControls });\n      this.form.patchValue({ ...data.event });\n    } else if (this.mode == 'create') {\n      this.form = this.fb.group({\n        ...formControls,\n        userId: [id, Validators.required],\n      });\n    }\n  }\n  ngOnInit(): void {}\n\n  getControl(value: string) {\n    return this.form.get(value) as FormControl;\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onSave() {\n    const task: any = {\n      ...this.task,\n      ...this.form.value,\n    };\n\n    if (this.mode == 'update') {\n      this.taskEntityService\n        .update({\n          ...task,\n          _id: task.id,\n          start: new Date(task.start),\n          end: new Date(task.end as Date),\n          title: task.title,\n          color: task.color,\n          description: task.description,\n        })\n        .pipe(tap((val) => this.dialogRef.close(val)))\n        .subscribe();\n    } else if (this.mode == 'create') {\n      this.taskEntityService\n        .add({\n          title: task.title,\n          userId: this._id,\n          start: new Date(task.start),\n          end: new Date(task.end as Date),\n          color: task.color,\n          description: task.description,\n        })\n        .pipe(tap((val) => this.dialogRef.close(val)))\n        .subscribe();\n    }\n  }\n}\n\n    \n\n    \n        {{ dialogTitle }}\n\n  \n    \n      \n    \n\n    \n      \n      \n        Choose a date\n        \n        MM/DD/YYYY\n        \n        \n       -->\n\n      \n        \n        \n        \n        \n      \n\n      \n        \n        \n        \n        \n      \n\n      \n        Choose a date\n        \n        MM/DD/YYYY\n        \n        \n       -->\n\n      \n        \n          Choose a primary color\n          \n        \n        \n          Choose a primary color\n          \n        \n      \n      \n        Autosize textarea\n        \n      \n    \n  \n  \n    \n      \n        {{ dialogTitle }}\n        {{\n          task?.title\n        }}\n      \n        \n          Description\n          {{ task?.description }}\n        \n        \n          \n            From: {{ task?.start | date }}\n          \n          \n            To: {{ task?.end | date }}\n          \n        \n      \n    \n  \n\n\n\n  Close\n\n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./task-dialog.component.scss\n                \n                .mat-form-field {\n  width: 100%;\n}\n\nsvg.mat-datepicker-toggle-default-icon.ng-star-inserted {\n  transform: scale(1.3);\n}\n\n.mat-card-header:not(:last-child),\n.mat-card-content:not(:last-child) {\n  margin-bottom: 10px;\n}\n.card {\n  &-dates {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    &:not(:last-child) {\n      margin-bottom: 10px;\n    }\n  }\n\n  &-description {\n    &-title {\n      font-size: 1.2rem;\n      margin-bottom: 5px;\n      letter-spacing: 1px;\n      font-weight: bold;\n    }\n    &:not(:last-child) {\n      margin-bottom: 10px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ dialogTitle }}                                        Choose a date                MM/DD/YYYY                       -->                                                                                                      Choose a date                MM/DD/YYYY                       -->                        Choose a primary color                                    Choose a primary color                                      Autosize textarea                                        {{ dialogTitle }}        {{          task?.title        }}                        Description          {{ task?.description }}                                      From: {{ task?.start | date }}                                To: {{ task?.end | date }}                                Close      Save  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'EventCalendarComponent', 'selector': 'app-event-calendar'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskEntityService.html":{"url":"injectables/TaskEntityService.html","title":"injectable - TaskEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task/task-entity.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityCollectionServiceBase\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceElementsFactory: EntityCollectionServiceElementsFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task/task-entity.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceElementsFactory\n                                                  \n                                                        \n                                                                    EntityCollectionServiceElementsFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory,\n} from '@ngrx/data';\nimport { Task } from 'src/app/interfaces/task.interface';\n\n@Injectable()\nexport class TaskEntityService extends EntityCollectionServiceBase {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('Task', serviceElementsFactory);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_imports\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_declarations\n\n\n\n\nEventCalendarComponent\n\nEventCalendarComponent\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nEventCalendarComponent->TaskModule\n\n\n\n\n\nTaskDialogComponent\n\nTaskDialogComponent\n\nTaskModule -->\n\nTaskDialogComponent->TaskModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTaskModule -->\n\nSharedModule->TaskModule\n\n\n\n\n\nTaskRoutingModule\n\nTaskRoutingModule\n\nTaskModule -->\n\nTaskRoutingModule->TaskModule\n\n\n\n\n\nTaskDataService\n\nTaskDataService\n\nTaskModule -->\n\nTaskDataService->TaskModule\n\n\n\n\n\nTaskEntityService\n\nTaskEntityService\n\nTaskModule -->\n\nTaskEntityService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventCalendarComponent\n                        \n                        \n                            TaskDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TaskDataService\n                        \n                        \n                            TaskEntityService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TaskRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TaskRoutingModule } from './task-routing.module';\nimport { EntityDataService, EntityDefinitionService } from '@ngrx/data';\nimport { TaskDataService } from 'src/app/services/task/tasks-data.service';\nimport { entityMetadataTask } from './entity-metadata-task';\nimport { TaskEntityService } from 'src/app/services/task/task-entity.service';\nimport { TasksResolver } from 'src/app/services/task/tasks.resolver';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { EventCalendarComponent } from './event-calendar/event-calendar.component';\nimport { TaskDialogComponent } from './task-dialog/task-dialog.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { MatCardModule } from '@angular/material/card';\nimport {\n  NgxMatDatetimePickerModule,\n  NgxMatNativeDateModule,\n} from '@angular-material-components/datetime-picker';\n\n@NgModule({\n  declarations: [EventCalendarComponent, TaskDialogComponent],\n  imports: [\n    CommonModule,\n    TaskRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    SharedModule,\n    TextFieldModule,\n    MatCardModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    NgxMatDatetimePickerModule,\n    NgxMatNativeDateModule,\n  ],\n  providers: [TaskDataService, TaskEntityService, TasksResolver],\n})\nexport class TaskModule {\n  constructor(\n    private eds: EntityDefinitionService,\n    private entityDataService: EntityDataService,\n    private tasksDataService: TaskDataService\n  ) {\n    eds.registerMetadataMap(entityMetadataTask);\n    entityDataService.registerService('Task', tasksDataService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskRoutingModule.html":{"url":"modules/TaskRoutingModule.html","title":"module - TaskRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/task/task-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TasksResolver } from 'src/app/services/task/tasks.resolver';\nimport { EventCalendarComponent } from './event-calendar/event-calendar.component';\n\nconst routes: Routes = [\n  {\n    path: 'test',\n    component: EventCalendarComponent,\n    resolve: {\n      tasks: TasksResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TasksResolver.html":{"url":"guards/TasksResolver.html","title":"guard - TasksResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    TasksResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/task/tasks.resolver.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(taskEntityService: TaskEntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task/tasks.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskEntityService\n                                                  \n                                                        \n                                                                        TaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/task/tasks.resolver.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { filter, first, Observable, tap } from 'rxjs';\nimport { TaskEntityService } from './task-entity.service';\n\n@Injectable()\nexport class TasksResolver implements Resolve {\n  constructor(private taskEntityService: TaskEntityService) {}\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable | Promise {\n    return this.taskEntityService.loaded$.pipe(\n      tap((loaded) => {\n        if (!loaded) {\n          this.taskEntityService.getAll();\n        }\n      }),\n      filter((loaded) => !!loaded),\n      first()\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  _id?: string;\n  email: string;\n  password: string;\n  firstName?: string;\n  lastName?: string;\n  role?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewModule.html":{"url":"modules/ViewModule.html","title":"module - ViewModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_declarations\n\n\n\ncluster_ViewModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nHomeComponent->ViewModule\n\n\n\n\n\nViewRoutingModule\n\nViewRoutingModule\n\nViewModule -->\n\nViewRoutingModule->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/view.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ViewRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ViewRoutingModule } from './view-routing.module';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, ViewRoutingModule],\n})\nexport class ViewModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewRoutingModule.html":{"url":"modules/ViewRoutingModule.html","title":"module - ViewRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/view-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'task',\n    loadChildren: () => \"import('./task/task.module').then((m) => m.TaskModule)\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ViewRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/actions/auth-actions.ts\n            \n            variable\n            login\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/actions/auth-actions.ts\n            \n            variable\n            logout\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/actions/auth-actions.ts\n            \n            variable\n            signup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/effects/auth.effects.ts\n            \n            injectable\n            AuthEffects\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/reducers/index.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/reducers/index.ts\n            \n            variable\n            authFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/reducers/index.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/reducers/index.ts\n            \n            variable\n            initialAuthState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            getLoggedUserData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            isLoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            isLoggedOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            selectAuthState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            userId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/entity-metadata.ts\n            \n            variable\n            entityConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/entity-metadata.ts\n            \n            variable\n            entityMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/entity-metadata.ts\n            \n            variable\n            pluralNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/not-auth.guard.ts\n            \n            guard\n            NotAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/task.interface.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/task/task-entity.service.ts\n            \n            injectable\n            TaskEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/task/tasks-data.service.ts\n            \n            injectable\n            TaskDataService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/task/tasks.resolver.ts\n            \n            guard\n            TasksResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/default-dialog-config.ts\n            \n            function\n            defaultDialogConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/validators/match-password.validator.ts\n            \n            injectable\n            MatchPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/view/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/view/task/entity-metadata-task.ts\n            \n            variable\n            entityMetadataTask\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/view/task/event-calendar/event-calendar.component.ts\n            \n            component\n            EventCalendarComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/view/task/event-calendar/event-calendar.component.ts\n            \n            variable\n            colors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/view/task/task-dialog/task-dialog.component.ts\n            \n            component\n            TaskDialogComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-components/datetime-picker : ^7.0.1\n        \n            @angular/animations : ~13.3.0\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/localize : ~13.3.0\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @ng-bootstrap/ng-bootstrap : ^12.1.2\n        \n            @ngrx/data : ^13.2.0\n        \n            @ngrx/effects : ^13.2.0\n        \n            @ngrx/router-store : ^13.2.0\n        \n            @ngrx/store : ^13.2.0\n        \n            @ngrx/store-devtools : ^13.2.0\n        \n            @popperjs/core : ^2.11.5\n        \n            angular-calendar : ^0.29.0\n        \n            autoprefixer : 10.4.5\n        \n            bootstrap : ^5.1.3\n        \n            date-fns : ^2.28.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultDialogConfig   (src/.../default-dialog-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/default-dialog-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultDialogConfig\n                        \n                    \n                \n            \n            \n                \ndefaultDialogConfig()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTaskConnect\nThis project was generated with Angular CLI version 13.3.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_declarations\n\n\n\ncluster_TaskModule_imports\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_declarations\n\n\n\ncluster_ViewModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nSharedModule->CalendarComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nSharedModule->InputComponent \n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nSharedModule->TaskModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\nSharedModule -->\n\nCalendarComponent->SharedModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nSharedModule -->\n\nInputComponent->SharedModule\n\n\n\n\n\nEventCalendarComponent\n\nEventCalendarComponent\n\nTaskModule -->\n\nEventCalendarComponent->TaskModule\n\n\n\n\n\nTaskDialogComponent\n\nTaskDialogComponent\n\nTaskModule -->\n\nTaskDialogComponent->TaskModule\n\n\n\n\n\nTaskRoutingModule\n\nTaskRoutingModule\n\nTaskModule -->\n\nTaskRoutingModule->TaskModule\n\n\n\n\n\nTaskDataService\n\nTaskDataService\n\nTaskModule -->\n\nTaskDataService->TaskModule\n\n\n\n\n\nTaskEntityService\n\nTaskEntityService\n\nTaskModule -->\n\nTaskEntityService->TaskModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nHomeComponent->ViewModule\n\n\n\n\n\nViewRoutingModule\n\nViewRoutingModule\n\nViewModule -->\n\nViewRoutingModule->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authFeatureKey   (src/.../index.ts)\n                        \n                        \n                            authReducer   (src/.../index.ts)\n                        \n                        \n                            colors   (src/.../event-calendar.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            entityConfig   (src/.../entity-metadata.ts)\n                        \n                        \n                            entityMetadata   (src/.../entity-metadata.ts)\n                        \n                        \n                            entityMetadataTask   (src/.../entity-metadata-task.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getLoggedUserData   (src/.../auth.selectors.ts)\n                        \n                        \n                            initialAuthState   (src/.../index.ts)\n                        \n                        \n                            isLoggedIn   (src/.../auth.selectors.ts)\n                        \n                        \n                            isLoggedOut   (src/.../auth.selectors.ts)\n                        \n                        \n                            login   (src/.../auth-actions.ts)\n                        \n                        \n                            logout   (src/.../auth-actions.ts)\n                        \n                        \n                            metaReducers   (src/.../index.ts)\n                        \n                        \n                            pluralNames   (src/.../entity-metadata.ts)\n                        \n                        \n                            reducers   (src/.../index.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectAuthState   (src/.../auth.selectors.ts)\n                        \n                        \n                            signup   (src/.../auth-actions.ts)\n                        \n                        \n                            userId   (src/.../auth.selectors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialAuthState,\n  on(AuthActions.login, (state, action) => {\n    return { user: action.user };\n  }),\n  on(AuthActions.signup, (state, action) => {\n    return { user: action.user };\n  }),\n  on(AuthActions.logout, (state, action) => {\n    console.log('here');\n    return { user: undefined };\n  })\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialAuthState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: undefined,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/view/task/event-calendar/event-calendar.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3',\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF',\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/entity-metadata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entityConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityDataModuleConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  entityMetadata,\n  pluralNames,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityMetadataMap\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluralNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/app/view/task/entity-metadata-task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entityMetadataTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityMetadataMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  Task: {\n    selectId: (task: Task) => task?._id as any,\n    entityDispatcherOptions: {\n      optimisticUpdate: true,\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth/selectors/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLoggedUserData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuthState,\n  (authState) => authState.user as User\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuthState,\n  (authState) => !!authState.user\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(isLoggedIn, (loggedIn) => !loggedIn)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuthState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(authFeatureKey)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  getLoggedUserData,\n  (userData) => userData._id as string\n)\n                    \n                \n\n\n        \n    \n\n    src/app/auth/actions/auth-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] User Login',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Logout Link] User Logout')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Signup Page] User Signup',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        metaReducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaReducer[]\n\n                    \n                \n                \n                    \n                        Default value : !environment.production\n  ? []\n  : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
