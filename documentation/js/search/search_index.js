var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AdminModule.html",[0,1.586,1,2.705]],["body/modules/AdminModule.html",[1,5.544,2,1.44,3,2.59,4,3.445,5,3.445,6,3.445,7,1.952,8,0.017,9,1.87,10,1.87,11,4.582,12,1.952,13,1.952,14,4.582,15,3.561,16,2.893,17,2.145,18,1.921,19,0.171,20,0.151,21,0.151,22,3.988,23,3.072,24,2.23,25,0.415,26,2.23,27,0.231,28,3.277,29,2.278,30,2.43,31,2.43,32,1.21,33,2.821,34,3.445,35,5.379,36,3.988,37,4.647,38,3.277,39,3.088,40,3.277,41,3.088,42,3.988,43,3.988,44,3.517,45,2.608,46,2.145,47,3.804,48,4.305,49,1.735,50,3.804,51,2.821,52,3.517,53,2.608,54,1.21,55,2.821,56,3.445,57,3.517,58,2.608,59,3.517,60,2.608,61,1.498,62,2.821,63,4.647,64,1.159,65,2.821,66,3.804,67,1.578,68,2.821,69,3.445,70,4.164,71,3.088,72,0.171,73,0.252,74,0.011,75,0.011]],["title/modules/AdminRoutingModule.html",[0,1.586,14,2.501]],["body/modules/AdminRoutingModule.html",[2,1.958,8,0.017,9,1.747,10,1.747,14,4.28,19,0.232,20,0.206,21,0.206,24,2.248,25,0.385,26,2.714,27,0.314,32,1.985,33,3.835,34,4.684,54,1.985,55,3.835,56,4.684,72,0.232,73,0.342,74,0.014,75,0.014,76,5.422,77,3.304,78,3.989,79,3.574,80,1.793,81,1.958,82,3.989,83,1.129,84,0.673,85,3.545,86,3.097]],["title/components/AppComponent.html",[84,0.393,87,1.065]],["body/components/AppComponent.html",[7,1.095,8,0.017,9,1.05,10,1.05,12,1.095,13,1.095,19,0.168,20,0.149,21,0.149,25,0.342,27,0.228,32,1.193,54,1.193,61,1.484,64,1.143,72,0.168,73,0.248,74,0.011,75,0.011,81,1.42,83,1.117,84,0.622,87,1.804,88,1.687,89,1.3,90,1.3,91,1.3,92,1.3,93,3.397,94,1.006,95,2.588,96,2.478,97,2.865,98,1.762,99,6.042,100,1.762,101,5.327,102,0.506,103,1.252,104,3.25,105,0.877,106,2.051,107,0.617,108,2.396,109,2.307,110,0.86,111,5.327,112,0.617,113,0.777,114,0.548,115,0.532,116,3.932,117,0.617,118,1.143,119,1.095,120,1.3,121,1.193,122,1.096,123,4.602,124,1.193,125,2.115,126,3.397,127,1.998,128,1.998,129,1.998,130,1.894,131,3.397,132,3.397,133,3.397,134,3.932,135,5.327,136,3.397,137,2.571,138,2.781,139,2.115,140,3.045,141,2.781,142,2.91,143,2.571,144,2.571,145,3.397,146,3.932,147,1.3,148,1.762,149,1.762,150,1.3,151,2.142,152,1.3,153,1.3,154,1.095,155,1.762,156,1.762,157,1.05,158,1.3,159,1.095,160,1.3,161,1.05,162,1.3,163,1.3,164,1.095,165,1.3,166,1.05,167,1.3,168,1.3,169,1.095,170,1.3,171,1.05,172,1.363,173,1.762,174,1.05,175,1.3,176,1.3,177,1.095,178,1.3,179,1.3,180,1.3]],["title/modules/AppModule.html",[0,1.586,181,2.705]],["body/modules/AppModule.html",[2,1.365,3,2.497,8,0.017,16,2.789,17,2.032,18,1.82,19,0.162,20,0.143,21,0.143,23,2.962,24,2.15,25,0.417,26,2.15,27,0.219,31,2.303,38,2.303,40,3.159,52,3.39,53,2.471,72,0.162,73,0.239,74,0.011,75,0.011,87,2.093,96,1.197,109,1.25,124,1.573,129,2.635,164,1.92,166,1.841,181,5.46,182,3.265,183,3.265,184,3.265,185,3.265,186,4.365,187,4.509,188,4.509,189,3.779,190,4.479,191,5.185,192,3.39,193,2.303,194,3.779,195,3.265,196,3.779,197,3.265,198,3.265,199,3.265,200,2.673,201,5.185,202,3.779,203,3.265,204,3.779,205,1.92,206,5.185,207,3.779,208,3.779,209,5.185,210,3.265,211,5.185,212,3.779,213,5.185,214,3.779,215,5.185,216,3.779,217,5.185,218,3.779,219,3.667,220,3.779,221,2.673,222,3.265,223,5.185,224,2.471,225,4.014,226,2.926,227,2.673,228,4.479,229,3.265,230,3.779,231,3.265,232,3.265,233,3.779,234,5.185,235,3.779,236,3.265,237,3.779,238,4.014,239,3.779,240,3.779,241,3.779,242,2.303,243,3.779,244,3.779,245,3.779]],["title/modules/AppRoutingModule.html",[0,1.586,187,2.501]],["body/modules/AppRoutingModule.html",[2,2.006,8,0.017,19,0.238,20,0.211,21,0.211,24,2.303,25,0.375,26,2.753,27,0.322,72,0.238,73,0.351,74,0.014,75,0.014,77,3.384,78,4.046,79,3.611,80,1.836,81,2.006,82,3.384,86,3.172,187,4.342,246,5.554,247,4.697,248,5.554,249,3.172,250,4.798,251,5.554,252,5.554,253,3.928,254,5.554]],["title/interfaces/AppState.html",[128,1.944,255,1.944]],["body/interfaces/AppState.html",[8,0.017,19,0.212,20,0.188,21,0.188,25,0.356,72,0.303,74,0.013,75,0.013,81,2.233,83,0.853,102,0.636,103,1.453,114,0.694,115,0.958,124,1.499,128,3.143,129,2.512,186,3.232,198,4.27,219,3.496,238,3.827,255,2.512,256,3.232,257,3.496,258,5.002,259,7.072,260,2.672,261,5.226,262,4.788,263,4.27,264,4.27,265,3.827,266,3.827,267,6.184,268,4.788,269,4.27,270,4.27,271,4.774,272,4.27,273,1.727,274,2.512,275,4.112,276,3.496,277,4.943,278,4.044,279,4.27,280,4.943,281,4.943]],["title/injectables/AuthEffects.html",[282,0.861,283,2.705]],["body/injectables/AuthEffects.html",[8,0.017,18,2.615,19,0.173,20,0.154,21,0.154,25,0.379,27,0.234,72,0.173,73,0.255,74,0.011,75,0.011,80,1.338,102,0.52,103,1.276,105,0.894,107,0.853,110,0.933,112,0.853,113,0.698,114,0.559,115,0.735,117,0.635,118,1.176,119,1.707,120,1.796,121,1.647,125,3.297,127,3.713,132,5.661,200,2.862,242,4.38,278,4.284,282,1.222,283,3.841,284,1.948,285,3.495,286,5.431,287,4.046,288,3.502,289,3.743,290,4.046,291,5.431,292,4.046,293,4.046,294,6.835,295,6.552,296,5.431,297,6.552,298,5.431,299,5.431,300,5.431,301,5.431,302,6.552,303,3.33,304,4.046,305,5.431,306,5.431,307,5.431,308,5.431,309,5.431,310,3.102,311,4.046,312,2.176,313,2.056,314,4.046,315,1.281,316,0.872,317,3.495,318,3.495,319,1.859,320,4.046,321,2.311,322,2.465,323,2.465]],["title/guards/AuthGuard.html",[247,2.705,324,1.944]],["body/guards/AuthGuard.html",[8,0.017,19,0.202,20,0.179,21,0.179,25,0.387,27,0.273,72,0.202,73,0.298,74,0.013,75,0.013,80,1.561,97,2.539,102,0.607,105,0.989,107,0.741,108,2.877,109,2.427,110,0.856,112,0.943,113,0.772,114,0.618,115,0.813,117,0.741,124,1.432,128,2.399,129,2.399,130,2.273,242,4.545,247,4.249,253,5.079,273,1.208,274,3.358,282,1.352,315,1.495,316,1.017,319,1.432,325,2.399,326,4.078,327,4.721,328,4.078,329,4.547,330,4.547,331,4.721,332,3.231,333,2.283,334,3.231,335,2.747,336,4.32,337,1.784,338,3.339,339,3.655,340,2.697,341,0.932,342,4.078,343,4.721,344,4.721,345,4.078,346,4.721]],["title/modules/AuthModule.html",[0,1.586,188,2.501]],["body/modules/AuthModule.html",[2,1.634,3,2.816,8,0.017,15,3.69,16,3.145,17,2.434,18,2.179,19,0.194,20,0.172,21,0.172,23,3.34,24,2.424,25,0.416,26,2.424,27,0.262,28,3.563,29,2.585,31,2.758,38,2.758,40,3.563,44,3.823,45,2.959,46,2.434,47,4.136,48,4.136,49,1.969,50,4.136,51,3.201,52,3.823,53,2.959,57,3.823,58,2.959,59,3.823,60,2.959,72,0.194,73,0.286,74,0.012,75,0.012,124,1.373,129,2.3,161,1.938,188,4.988,195,3.91,199,3.91,200,3.201,258,3.201,283,3.201,312,2.434,313,2.3,347,3.91,348,3.91,349,3.91,350,4.747,351,4.526,352,4.526,353,3.91,354,5.847,355,3.91,356,4.526,357,4.526,358,4.526,359,4.526]],["title/modules/AuthRoutingModule.html",[0,1.586,350,2.501]],["body/modules/AuthRoutingModule.html",[2,1.913,8,0.017,19,0.227,20,0.201,21,0.201,24,2.196,25,0.392,26,2.676,27,0.307,72,0.227,73,0.334,74,0.013,75,0.013,77,3.227,78,3.932,79,3.538,80,1.751,81,1.913,82,4.241,84,0.664,85,3.463,86,3.025,125,3.471,161,1.723,166,1.723,221,3.746,222,4.576,253,3.746,350,4.22,353,4.576,360,5.297,361,4.565,362,5.297,363,5.297,364,5.297,365,5.297,366,3.227]],["title/injectables/AuthService.html",[282,0.861,367,2.33]],["body/injectables/AuthService.html",[8,0.017,19,0.183,20,0.162,21,0.162,25,0.354,27,0.248,72,0.183,73,0.27,74,0.012,75,0.012,83,1.313,97,2.302,102,0.55,103,1.324,105,0.928,107,0.672,110,1.038,112,1.123,113,0.919,114,0.75,115,0.968,117,1.093,119,1.866,120,1.415,121,1.298,125,3.391,130,2.061,224,2.798,273,1.781,282,1.269,284,2.061,315,1.355,316,0.922,340,2.445,367,3.435,368,3.697,369,6.304,370,4.365,371,5.638,372,4.87,373,5.638,374,3.027,375,4.739,376,4.28,377,3.987,378,5.638,379,4.28,380,2.302,381,5.638,382,4.28,383,2.445,384,5.638,385,4.28,386,4.28,387,4.28,388,5.638,389,4.28,390,4.87,391,4.28,392,3.697,393,3.435,394,3.204,395,4.28,396,4.28,397,4.28,398,4.28,399,4.28,400,3.697,401,4.28,402,4.28,403,4.28,404,4.28]],["title/interfaces/AuthState.html",[255,1.944,260,1.445]],["body/interfaces/AuthState.html",[8,0.017,19,0.214,20,0.19,21,0.19,25,0.358,72,0.29,74,0.013,75,0.013,81,2.451,83,1.351,102,0.643,103,1.464,114,0.515,115,0.844,124,1.517,127,2.542,255,2.542,256,3.271,258,3.538,260,2.564,261,3.873,262,3.873,264,4.321,265,4.824,266,3.873,268,3.873,273,1.736,274,3.449,275,4.135,317,4.321,405,3.873,406,2.288,407,3.873,408,4.824,409,5.382,410,3.873,411,4.321,412,5.382,413,4.321,414,4.321,415,4.321]],["title/components/CalendarComponent.html",[84,0.393,154,1.065]],["body/components/CalendarComponent.html",[7,0.724,8,0.017,9,0.693,10,0.693,12,0.724,13,0.724,19,0.111,20,0.099,21,0.099,25,0.282,27,0.15,32,0.788,54,0.788,61,1.101,64,0.755,72,0.111,73,0.164,74,0.008,75,0.008,83,0.448,84,0.492,87,0.724,88,1.251,89,0.859,90,0.859,91,0.859,92,0.859,94,0.665,95,2.462,96,2.358,98,1.307,100,1.307,102,0.334,103,0.928,105,0.651,106,1.693,107,0.751,110,1.042,112,0.839,113,0.779,114,0.735,115,0.724,117,0.989,118,2.003,119,1.489,120,2.082,121,1.91,122,0.839,139,1.397,142,1.903,147,0.859,148,1.307,149,1.307,150,0.859,151,1.768,152,0.859,153,0.859,154,1.489,155,1.307,156,1.307,157,0.693,158,0.859,159,0.724,160,0.859,161,0.693,162,0.859,163,0.859,164,0.724,165,0.859,166,0.693,167,0.859,168,0.859,169,0.724,170,0.859,171,0.693,172,1.011,173,1.307,174,0.693,175,0.859,176,0.859,177,0.724,178,0.859,179,0.859,180,0.859,249,3.597,273,1.011,275,2.915,303,2.009,316,0.56,335,1.807,341,0.78,416,2.244,417,1.582,418,3.495,419,4.133,420,3.414,421,4.784,422,6.892,423,2.188,424,4.784,425,4.784,426,5.751,427,5.346,428,4.784,429,4.784,430,3.414,431,3.054,432,3.952,433,3.06,434,4.453,435,3.952,436,4.784,437,3.952,438,5.025,439,2.598,440,4.784,441,2.598,442,2.598,443,2.598,444,3.704,445,2.598,446,2.598,447,5.346,448,2.598,449,3.414,450,4.59,451,2.598,452,2.598,453,2.598,454,3.952,455,2.598,456,2.574,457,2.598,458,2.598,459,2.88,460,2.491,461,2.598,462,2.598,463,3.952,464,2.598,465,2.95,466,2.598,467,2.795,468,3.952,469,1.484,470,2.598,471,2.598,472,2.011,473,2.598,474,2.598,475,3.952,476,2.598,477,5.346,478,2.598,479,3.952,480,3.952,481,2.011,482,2.598,483,3.952,484,1.699,485,1.484,486,2.598,487,1.397,488,1.397,489,3.952,490,3.952,491,3.952,492,3.952,493,3.952,494,3.952,495,3.952,496,3.952,497,1.699,498,1.13,499,2.244,500,1.807,501,1.699,502,2.011,503,2.598,504,2.258,505,1.397,506,1.837,507,2.011,508,2.598,509,1.397,510,1.837,511,2.011]],["title/guards/CanLoadAdminGuard.html",[324,1.944,512,2.705]],["body/guards/CanLoadAdminGuard.html",[8,0.017,19,0.206,20,0.183,21,0.183,25,0.389,27,0.279,72,0.206,73,0.304,74,0.013,75,0.013,80,1.594,97,2.593,102,0.62,105,1.002,107,0.757,108,2.937,109,2.44,110,0.867,112,0.956,113,0.783,114,0.626,115,0.824,117,0.757,124,1.462,130,2.321,260,1.821,273,1.233,282,1.37,316,1.039,325,2.45,332,3.97,333,2.305,334,3.274,335,2.784,336,4.362,337,1.821,340,2.753,341,0.952,512,4.305,513,5.764,514,4.065,515,4.164,516,5.112,517,4.82,518,3.732,519,5.166,520,5.426,521,4.82,522,2.45,523,3.409,524,2.45,525,4.164]],["title/guards/CanLoadEmployeeGuard.html",[324,1.944,526,2.705]],["body/guards/CanLoadEmployeeGuard.html",[8,0.017,19,0.206,20,0.183,21,0.183,25,0.389,27,0.279,72,0.206,73,0.304,74,0.013,75,0.013,80,1.594,97,2.593,102,0.62,105,1.002,107,0.757,108,2.937,109,2.44,110,0.867,112,0.956,113,0.783,114,0.626,115,0.824,117,0.757,124,1.462,130,2.321,260,1.821,273,1.233,282,1.37,316,1.039,325,2.45,332,3.97,333,2.305,334,3.274,335,2.784,336,4.362,337,1.821,340,2.753,341,0.952,514,4.065,516,5.112,518,3.732,519,5.166,520,5.426,522,2.45,524,2.45,526,4.305,527,5.166,528,4.164,529,4.82,530,4.82,531,3.409,532,4.164]],["title/guards/CanLoadManagerGuard.html",[324,1.944,533,2.705]],["body/guards/CanLoadManagerGuard.html",[8,0.017,19,0.206,20,0.183,21,0.183,25,0.389,27,0.279,72,0.206,73,0.304,74,0.013,75,0.013,80,1.594,97,2.593,102,0.62,105,1.002,107,0.757,108,2.937,109,2.44,110,0.867,112,0.956,113,0.783,114,0.626,115,0.824,117,0.757,124,1.462,130,2.321,260,1.821,273,1.233,282,1.37,316,1.039,325,2.45,332,3.97,333,2.305,334,3.274,335,2.784,336,4.362,337,1.821,340,2.753,341,0.952,514,4.065,516,5.112,518,3.732,519,5.166,520,5.426,522,2.45,524,2.45,527,5.166,533,4.305,534,4.164,535,4.82,536,4.82,537,3.409,538,4.164]],["title/components/DeleteModalComponent.html",[7,1.065,84,0.393]],["body/components/DeleteModalComponent.html",[7,1.637,8,0.017,9,0.842,10,0.842,12,0.878,13,0.878,19,0.135,20,0.12,21,0.12,25,0.343,27,0.183,32,0.957,54,0.957,61,1.271,64,2.034,65,4.951,67,1.248,72,0.135,73,0.199,74,0.01,75,0.01,83,1.185,84,0.552,87,0.878,88,1.445,89,1.043,90,1.043,91,1.043,92,1.043,94,0.807,95,2.526,96,2.419,98,1.509,100,1.509,102,0.406,103,1.072,105,0.751,106,1.862,107,0.717,110,0.978,112,0.495,113,0.69,114,0.605,115,0.427,117,0.842,118,1.709,119,1.271,120,1.043,121,0.957,122,0.923,147,1.043,148,1.509,149,1.509,150,1.043,151,1.944,152,1.043,153,1.043,154,0.878,155,1.509,156,1.509,157,0.842,158,1.043,159,0.878,160,1.043,161,0.842,162,1.043,163,1.043,164,0.878,165,1.043,166,0.842,167,1.043,168,1.043,169,0.878,170,1.043,171,0.842,172,1.168,173,1.509,174,0.842,175,1.043,176,1.043,177,0.878,178,1.043,179,1.043,180,1.043,288,3.064,289,3.358,310,1.802,312,1.696,313,1.603,316,0.68,319,1.627,321,2.607,322,2.781,323,2.781,341,0.901,380,2.885,393,1.922,406,1.442,417,1.774,423,2.453,459,2.853,460,1.806,539,6.047,540,2.442,541,3.534,542,4.634,543,3.943,544,3.004,545,2.583,546,3.582,547,4.158,548,2.725,549,3.582,550,2.918,551,4.565,552,2.781,553,3.154,554,3.154,555,3.154,556,3.154,557,3.154,558,2.725,559,1.922,560,1.922,561,1.922,562,1.442,563,2.781,564,1.802,565,1.192,566,1.922,567,1.922,568,1.922,569,1.696,570,2.231,571,1.922,572,1.922,573,2.231,574,3.154,575,0.999,576,2.062,577,1.922,578,1.519,579,1.248,580,2.781,581,2.725,582,1.922,583,3.154,584,3.154,585,2.442,586,2.781,587,4.565,588,4.565,589,4.565,590,5.079,591,3.229,592,4.565]],["title/modules/EmployeeModule.html",[0,1.586,593,2.705]],["body/modules/EmployeeModule.html",[2,1.626,3,2.806,8,0.017,15,3.684,16,3.134,17,2.421,18,2.168,19,0.193,20,0.171,21,0.171,23,3.328,24,2.416,25,0.407,26,2.416,27,0.261,28,3.55,29,2.571,31,2.743,38,2.743,40,3.55,41,3.485,57,3.81,58,2.943,66,4.121,67,1.781,72,0.193,73,0.284,74,0.012,75,0.012,122,1.014,171,1.935,172,1.855,565,1.701,593,5.551,594,3.889,595,3.889,596,3.889,597,3.889,598,4.74,599,4.417,600,3.491,601,4.501,602,4.511,603,2.059,604,3.184,605,3.889,606,2.571,607,3.184,608,3.328,609,3.937,610,2.943,611,2.743,612,3.485]],["title/modules/EmployeeRoutingModule.html",[0,1.586,598,2.501]],["body/modules/EmployeeRoutingModule.html",[2,1.997,8,0.017,19,0.237,20,0.21,21,0.21,24,2.292,25,0.388,26,2.746,27,0.32,72,0.237,73,0.349,74,0.014,75,0.014,77,3.369,78,4.036,79,3.604,80,1.828,81,1.997,82,3.369,84,0.569,85,3.615,86,3.158,122,1.04,171,1.768,598,4.331,604,3.911,605,4.777,608,3.158,610,3.615,613,5.529,614,3.615]],["title/injectables/EmployeeTaskDataService.html",[282,0.861,599,2.33]],["body/injectables/EmployeeTaskDataService.html",[8,0.017,19,0.167,20,0.148,21,0.148,25,0.392,27,0.226,61,1.984,72,0.167,73,0.247,74,0.011,75,0.011,83,1.201,102,0.502,103,1.246,105,0.873,107,0.833,109,2.397,110,0.992,112,0.833,113,0.682,114,0.665,115,0.718,117,0.946,118,1.136,120,1.292,121,1.185,122,0.614,124,1.185,205,1.986,224,2.555,260,1.476,273,1.653,282,1.194,284,1.882,315,1.237,316,0.842,319,1.185,333,2.333,337,1.476,374,2.764,375,4.569,377,4.26,380,2.102,406,1.787,423,2.754,459,3.089,460,2.099,487,2.102,488,2.102,522,1.986,524,1.986,562,1.787,569,2.102,575,1.68,578,1.882,579,1.546,599,3.233,603,1.787,611,4.341,614,4.658,615,2.764,616,3.233,617,4.26,618,5.002,619,6.46,620,5.613,621,5.305,622,3.908,623,3.908,624,4.107,625,3.376,626,3.908,627,3.026,628,3.752,629,2.102,630,2.232,631,3.026,632,1.787,633,3.376,634,2.764,635,3.908,636,5.305,637,4.107,638,3.376,639,3.908,640,3.026,641,3.908,642,3.026,643,3.376,644,3.026]],["title/injectables/EmployeeTaskEntityService.html",[282,0.861,600,1.842]],["body/injectables/EmployeeTaskEntityService.html",[8,0.017,19,0.236,20,0.209,21,0.209,25,0.374,27,0.319,72,0.236,73,0.348,74,0.014,75,0.014,107,0.866,110,0.786,112,0.866,113,0.709,114,0.568,115,0.747,122,1.112,205,2.804,282,1.489,284,2.657,600,3.185,614,4.325,616,4.031,632,2.523,633,4.766,645,3.902,646,5.485,647,5.121,648,5.687,649,4.766,650,5.121]],["title/guards/EmployeeTasksResolver.html",[324,1.944,608,2.185]],["body/guards/EmployeeTasksResolver.html",[8,0.017,19,0.208,20,0.185,21,0.185,25,0.371,27,0.282,72,0.208,73,0.307,74,0.013,75,0.013,80,1.609,102,0.626,105,1.008,107,0.764,110,0.872,112,0.962,113,0.787,114,0.63,115,0.829,117,0.764,122,0.764,130,2.344,273,1.245,274,3.406,282,1.378,315,1.541,316,1.049,325,2.473,329,4.598,330,4.598,332,3.294,333,2.315,334,3.294,335,2.801,341,0.961,565,1.839,600,3.387,603,2.226,608,3.498,614,4.382,651,3.768,652,5.126,653,4.204,654,4.204,655,4.332,656,3.768,657,4.204,658,3.442,659,4.004,660,4.204,661,3.768,662,4.742,663,4.204,664,3.768]],["title/pipes/FilterStatePipe.html",[575,1.211,665,2.501]],["body/pipes/FilterStatePipe.html",[8,0.017,19,0.234,20,0.207,21,0.207,25,0.347,27,0.316,72,0.234,73,0.344,74,0.014,75,0.014,94,1.396,105,0.898,110,0.777,112,0.857,113,0.907,114,0.561,115,0.739,117,0.857,121,1.655,122,1.032,273,1.396,274,3.72,341,1.078,575,2.081,632,2.496,665,4.297,666,4.225,667,5.677,668,4.715,669,6.572,670,3.568,671,5.677,672,5.457,673,5.677,674,5.457,675,4.715]],["title/components/HomeComponent.html",[84,0.393,157,1.021]],["body/components/HomeComponent.html",[7,0.672,8,0.017,9,0.644,10,0.644,12,0.672,13,0.672,19,0.103,20,0.092,21,0.092,25,0.351,27,0.14,32,0.731,54,0.731,61,1.04,64,0.701,72,0.103,73,0.152,74,0.008,75,0.008,83,1.122,84,0.47,87,0.672,88,1.182,89,0.797,90,0.797,91,0.797,92,0.797,94,0.617,95,2.435,96,2.332,98,1.234,100,1.234,102,0.31,103,0.877,105,0.614,106,1.628,107,0.586,109,2.095,110,1.002,112,0.379,113,0.587,114,0.696,115,0.326,117,0.586,118,1.327,119,1.04,120,1.234,121,1.132,122,1.021,124,0.731,137,2.986,138,1.706,139,1.297,141,1.706,142,2.678,143,1.577,144,2.441,145,2.083,147,0.797,148,1.234,149,1.234,150,0.797,151,1.7,152,0.797,153,0.797,154,0.672,155,1.234,156,1.234,157,1.372,158,0.797,159,0.672,160,0.797,161,0.644,162,0.797,163,0.797,164,0.672,165,0.797,166,0.644,167,0.797,168,0.797,169,0.672,170,0.797,171,0.644,172,0.955,173,1.234,174,0.644,175,0.797,176,0.797,177,0.672,178,0.797,179,0.797,180,0.797,260,0.911,315,0.764,316,0.52,319,1.559,333,2.456,337,1.725,341,0.737,406,1.103,417,1.51,423,1.707,431,2.937,459,2.351,460,2.326,485,2.132,487,1.297,488,1.297,497,1.577,498,1.987,500,2.089,501,1.577,504,2.937,505,2.456,507,2.89,509,1.297,510,1.706,522,1.225,524,1.225,550,2.669,562,1.103,564,1.377,565,1.725,569,1.297,575,1.182,578,2.954,579,0.954,600,2.476,603,1.103,609,1.469,628,1.706,629,1.297,630,1.377,632,1.103,634,1.706,640,4.553,676,2.083,677,2.89,678,4.567,679,3.733,680,4.804,681,4.567,682,4.306,683,4.567,684,4.804,685,4.567,686,4.567,687,4.567,688,3.536,689,2.411,690,2.954,691,2.411,692,3.733,693,2.411,694,2.411,695,2.411,696,2.411,697,2.411,698,2.411,699,2.411,700,2.411,701,2.411,702,2.411,703,3.733,704,2.411,705,2.411,706,2.411,707,2.411,708,2.411,709,2.411,710,2.083,711,1.469,712,1.867,713,1.867,714,2.411,715,2.411,716,3.733,717,1.797,718,2.441,719,3.733,720,2.411,721,4.567,722,5.881,723,5.881,724,2.411,725,2.411,726,1.867,727,2.083,728,2.411,729,4.567,730,2.411,731,2.411,732,3.733,733,3.733,734,3.733,735,3.225,736,3.733,737,3.636,738,4.553,739,2.411,740,1.706,741,2.132,742,2.411,743,2.411,744,2.456,745,2.083,746,2.411,747,2.083,748,1.867,749,3.225,750,1.706,751,1.706,752,2.083,753,2.083,754,3.225,755,2.411,756,1.897,757,2.008,758,2.456,759,2.609,760,2.132,761,3.176,762,2.008,763,2.411,764,1.577,765,1.377,766,2.083,767,1.161,768,2.411,769,2.411,770,2.411,771,2.411,772,1.706,773,2.411,774,2.083,775,2.411,776,1.161,777,2.411,778,1.577,779,1.867,780,1.577,781,2.083,782,2.083,783,2.411]],["title/components/InputComponent.html",[84,0.393,159,1.065]],["body/components/InputComponent.html",[7,1.022,8,0.017,9,0.979,10,0.979,12,1.022,13,1.022,19,0.157,20,0.139,21,0.139,25,0.268,27,0.212,32,1.113,46,1.973,49,1.596,54,1.113,61,1.415,64,1.066,72,0.157,73,0.232,74,0.011,75,0.011,83,0.633,84,0.6,87,1.022,88,1.609,89,1.213,90,1.213,91,1.213,92,1.213,94,0.939,95,2.57,96,2.461,98,1.68,100,1.68,102,0.472,105,0.836,106,1.992,107,0.915,110,0.973,113,0.653,114,0.647,117,0.576,118,1.476,119,1.623,120,1.927,121,1.768,122,0.988,139,1.973,147,1.213,148,1.68,149,1.68,150,1.213,151,2.08,152,1.213,153,1.213,154,1.022,155,1.68,156,1.68,157,0.979,158,1.213,159,1.752,160,1.213,161,0.979,162,1.213,163,1.213,164,1.022,165,1.213,166,0.979,167,1.213,168,1.213,169,1.022,170,1.213,171,0.979,172,1.3,173,1.68,174,0.979,175,1.213,176,1.213,177,1.022,178,1.213,179,1.213,180,1.213,341,1.003,366,2.235,417,1.927,433,3.933,467,4.955,498,2.536,500,1.678,756,2.582,764,3.322,767,1.767,784,3.169,785,5.828,786,5.08,787,5.828,788,6.605,789,5.828,790,6.263,791,5.08,792,3.551,793,3.669,794,3.669,795,3.669,796,3.669,797,3.322,798,3.322,799,5.08,800,3.322,801,5.08,802,2.399,803,2.096]],["title/components/LoginComponent.html",[84,0.393,161,1.021]],["body/components/LoginComponent.html",[7,0.72,8,0.017,9,0.69,10,0.69,12,0.72,13,0.72,19,0.111,20,0.098,21,0.098,25,0.357,27,0.15,32,0.784,49,1.125,54,0.784,61,1.096,64,0.751,72,0.111,73,0.163,74,0.008,75,0.008,80,0.855,83,0.679,84,0.491,87,0.72,88,1.247,89,0.855,90,0.855,91,0.855,92,0.855,94,0.661,95,2.46,96,2.356,98,1.302,100,1.302,102,0.332,103,0.925,104,3.381,105,0.648,106,1.688,107,0.618,109,2.079,110,0.923,112,0.618,113,0.686,114,0.548,115,0.533,117,0.837,118,1.55,119,1.328,120,1.302,121,1.446,122,0.837,124,0.784,125,3.381,127,2.001,128,1.314,133,2.233,139,2.565,142,1.245,147,0.855,148,1.302,149,1.302,150,0.855,151,1.763,152,0.855,153,0.855,154,0.72,155,1.302,156,1.302,157,0.69,158,0.855,159,0.72,160,0.855,161,1.423,162,0.855,163,0.855,164,0.72,165,0.855,166,0.69,167,0.855,168,0.855,169,0.72,170,0.855,171,0.69,172,1.007,173,1.302,174,0.69,175,0.855,176,0.855,177,0.72,178,0.855,179,0.855,180,0.855,192,1.69,193,1.575,242,1.575,273,1.007,288,2.724,289,3.046,310,1.476,312,1.39,313,1.314,315,0.818,316,0.557,318,2.233,319,1.741,321,2.249,322,2.399,323,2.399,341,0.777,366,1.575,367,3.83,393,1.575,394,3.374,417,1.577,423,2.181,431,3.046,456,1.896,459,2.624,460,1.557,487,1.39,488,1.39,498,2.888,500,2.438,504,1.476,505,1.39,506,1.828,509,2.868,561,1.575,562,1.182,563,2.399,575,0.818,576,1.69,577,1.575,578,1.245,579,1.022,580,2.399,582,1.575,629,1.39,737,1.828,741,2.249,744,2.565,748,2.001,750,1.828,751,1.828,756,2.916,757,2.117,758,2.565,759,2.724,760,2.249,761,3.453,762,2.117,764,1.69,767,1.896,778,1.69,779,2.001,780,1.69,792,2.906,797,2.574,798,2.574,800,2.574,802,2.574,803,2.249,804,2.233,805,4.769,806,3.937,807,5.738,808,4.769,809,2.574,810,4.606,811,1.828,812,3.486,813,3.937,814,2.574,815,2.574,816,2.584,817,2.584,818,2.584,819,2.584,820,2.584,821,2.906,822,2.584,823,1.69,824,1.69,825,2.233,826,2.584,827,2.233,828,2.233,829,2.584,830,2.584,831,2.233,832,2.574,833,2.233,834,1.828,835,1.828,836,1.828,837,1.828,838,1.828,839,2.001,840,2.584,841,1.828,842,2.001,843,2.584,844,2.584,845,2.785,846,2.785,847,2.574,848,2.785,849,2.785,850,2.785,851,2.399,852,2.785,853,2.233,854,3.692,855,3.692,856,3.373,857,2.233,858,3.401,859,2.233,860,2.233,861,1.69,862,2.233,863,2.001,864,1.69,865,2.001,866,2.233]],["title/components/ManagementTableComponent.html",[9,1.021,84,0.393]],["body/components/ManagementTableComponent.html",[7,0.942,8,0.017,9,1.281,10,0.568,12,0.592,13,0.942,19,0.091,20,0.081,21,0.081,25,0.351,27,0.123,32,1.897,33,4.899,46,1.819,54,0.645,61,1.629,62,1.504,63,2.922,64,1.863,65,1.504,67,0.841,72,0.091,73,0.134,74,0.007,75,0.007,81,1.221,83,1.236,84,0.433,87,0.592,88,1.071,89,0.703,90,0.703,91,0.703,92,0.703,94,0.544,95,2.401,96,2.285,98,1.118,100,1.118,102,0.273,103,0.794,104,3.146,105,0.557,106,1.519,107,0.531,109,2.007,110,0.975,112,0.661,113,0.869,114,0.673,115,0.57,117,0.822,118,1.621,119,1.69,120,1.587,121,1.455,122,0.753,124,0.645,128,1.081,137,2.211,138,1.504,142,2.311,143,1.39,144,1.39,147,0.703,148,1.118,149,1.118,150,0.703,151,1.587,152,0.703,153,0.703,154,0.592,155,1.118,156,1.118,157,0.568,158,0.703,159,0.592,160,0.703,161,0.568,162,0.703,163,0.703,164,0.592,165,0.703,166,0.568,167,0.703,168,0.703,169,0.592,170,0.703,171,0.568,172,0.865,173,1.118,174,0.568,175,0.703,176,0.703,177,0.592,178,0.703,179,0.703,180,0.703,192,1.39,193,1.296,236,2.922,303,1.719,313,1.081,315,1.071,316,0.458,319,1.455,333,1.809,337,1.591,341,0.668,383,1.215,393,2.924,406,0.972,417,1.392,423,1.926,431,2.741,459,2.395,460,1.338,487,1.144,488,1.144,497,2.753,498,2.641,499,2.922,500,1.547,501,2.753,502,2.618,504,1.932,505,2.581,514,2.061,524,1.081,544,1.629,545,1.629,550,2.427,562,0.972,564,1.215,565,0.803,573,1.504,575,1.071,578,1.024,579,1.338,629,1.144,658,2.392,659,3.137,670,1.39,688,4.055,712,1.646,713,1.646,717,1.024,726,1.646,740,1.504,741,1.932,744,2.265,756,2.14,757,2.581,758,2.581,759,2.405,760,2.405,761,2.992,762,2.265,767,2.028,780,2.211,803,1.932,827,1.837,847,2.211,851,1.296,854,1.646,861,1.39,864,1.39,867,5.983,868,1.837,869,4.818,870,4.21,871,3.382,872,4.21,873,3.26,874,4.21,875,4.798,876,4.21,877,3.637,878,3.382,879,4.798,880,3.382,881,1.837,882,2.439,883,3.137,884,2.126,885,3.382,886,2.126,887,2.126,888,2.126,889,2.126,890,3.382,891,2.126,892,2.126,893,3.137,894,4.798,895,3.137,896,3.394,897,2.126,898,2.126,899,2.126,900,4.798,901,2.126,902,2.126,903,2.126,904,2.126,905,2.126,906,2.405,907,1.296,908,1.39,909,1.837,910,1.837,911,3.637,912,1.837,913,2.126,914,2.126,915,2.126,916,2.126,917,2.126,918,2.126,919,2.126,920,3.382,921,1.646,922,1.837,923,2.126,924,2.126,925,2.126,926,3.137,927,2.211,928,2.126,929,2.211,930,2.126,931,4.21,932,2.618,933,4.21,934,2.392,935,3.382,936,3.382,937,3.382,938,3.382,939,3.382,940,2.922,941,2.126,942,2.126,943,2.922,944,1.837,945,1.646,946,2.126,947,2.126,948,2.126,949,1.646,950,1.646]],["title/modules/ManagerModule.html",[0,1.586,951,2.705]],["body/modules/ManagerModule.html",[2,1.447,3,2.598,8,0.017,15,3.566,16,2.902,17,2.155,18,1.93,19,0.172,20,0.152,21,0.152,23,3.082,24,2.237,25,0.417,26,2.237,27,0.232,28,3.288,29,2.289,31,2.442,38,2.442,40,3.288,41,3.103,44,3.528,45,2.62,46,2.902,47,3.817,48,3.817,49,1.744,50,3.817,51,2.834,52,3.528,53,2.62,57,3.528,58,2.62,59,3.528,60,2.62,66,3.817,67,1.585,70,4.178,71,3.103,72,0.172,73,0.253,74,0.011,75,0.011,122,0.958,172,1.38,174,1.873,225,4.178,226,3.103,227,2.834,228,4.662,229,3.462,469,2.289,565,1.514,602,4.178,606,2.289,607,2.834,610,2.62,611,2.442,612,3.103,690,3.379,711,3.717,776,1.93,951,5.429,952,3.462,953,3.462,954,3.462,955,3.462,956,4.588,957,4.276,958,4.007,959,2.834,960,3.462,961,5.396,962,3.462,963,4.662,964,3.103,965,5.396,966,5.396,967,3.462,968,3.462,969,3.462,970,3.288]],["title/modules/ManagerRoutingModule.html",[0,1.586,956,2.501]],["body/modules/ManagerRoutingModule.html",[2,2.023,8,0.017,19,0.24,20,0.213,21,0.213,24,2.323,25,0.376,26,2.768,27,0.324,72,0.24,73,0.354,74,0.014,75,0.014,77,3.414,78,4.068,79,3.624,80,1.853,81,2.023,82,3.414,84,0.576,85,3.663,86,3.2,122,1.048,174,1.782,956,4.365,959,3.963,960,4.84,971,5.603]],["title/injectables/ManagerTaskDataService.html",[282,0.861,957,2.33]],["body/injectables/ManagerTaskDataService.html",[8,0.017,19,0.164,20,0.145,21,0.145,25,0.39,27,0.221,61,1.973,64,1.519,72,0.164,73,0.241,74,0.011,75,0.011,102,0.492,103,1.228,105,0.861,106,2.027,107,0.821,109,2.385,110,1.009,112,1.005,113,0.823,114,0.69,115,0.867,117,1.053,118,1.112,119,1.867,122,1.005,124,1.16,205,1.944,224,2.501,260,1.445,273,1.638,282,1.177,284,1.842,315,1.211,316,0.824,319,1.16,333,2.527,337,1.445,341,0.755,374,2.705,375,4.528,377,4.213,383,2.185,417,1.729,465,1.664,522,1.944,524,1.944,575,1.211,579,1.513,611,4.395,615,2.705,616,3.186,617,4.213,618,4.957,620,5.584,624,4.048,627,2.961,629,2.057,632,1.749,637,4.957,642,2.961,643,3.304,644,2.961,877,5.146,893,3.418,910,3.304,911,3.304,957,3.186,972,5.101,973,3.418,974,3.825,975,4.516,976,3.304,977,4.048,978,4.516,979,3.825,980,3.304,981,3.825,982,3.825,983,3.825,984,3.825,985,3.825,986,3.304,987,3.304,988,3.825,989,3.825,990,3.825,991,3.825,992,3.825]],["title/injectables/ManagerTaskEntityService.html",[282,0.861,690,1.842]],["body/injectables/ManagerTaskEntityService.html",[8,0.017,19,0.236,20,0.209,21,0.209,25,0.374,27,0.319,72,0.236,73,0.348,74,0.014,75,0.014,107,0.866,110,0.786,112,0.866,113,0.709,114,0.568,115,0.747,122,1.112,205,2.804,282,1.489,284,2.657,616,4.031,632,2.523,645,3.902,646,5.485,647,5.121,648,5.687,649,4.766,650,5.121,690,3.185,972,4.679,987,4.766]],["title/guards/ManagerTasksResolver.html",[324,1.944,970,2.33]],["body/guards/ManagerTasksResolver.html",[8,0.017,19,0.208,20,0.185,21,0.185,25,0.371,27,0.282,72,0.208,73,0.307,74,0.013,75,0.013,80,1.609,102,0.626,105,1.008,107,0.764,110,0.872,112,0.962,113,0.787,114,0.63,115,0.829,117,0.764,122,0.764,130,2.344,273,1.245,274,3.406,282,1.378,315,1.541,316,1.049,325,2.473,329,4.598,330,4.598,332,3.294,333,2.315,334,3.294,335,2.801,341,0.961,565,1.839,651,3.768,652,5.126,653,4.204,654,4.204,655,4.332,656,3.768,657,4.204,658,3.442,659,4.004,660,4.204,661,3.768,662,4.742,663,4.204,664,3.768,690,3.387,776,2.344,970,3.732,972,4.74]],["title/injectables/MatchPassword.html",[282,0.861,993,2.33]],["body/injectables/MatchPassword.html",[8,0.017,19,0.226,20,0.2,21,0.2,25,0.34,27,0.305,49,2.295,72,0.226,73,0.333,74,0.013,75,0.013,81,1.905,97,2.837,102,0.678,105,1.06,110,0.751,112,0.828,113,0.678,114,0.543,115,0.714,117,0.828,273,1.647,276,3.731,282,1.449,284,2.54,335,2.412,340,3.013,341,1.042,394,3.272,456,2.54,821,4.52,993,3.922,994,4.209,995,4.557,996,6.437,997,6.437,998,5.274,999,6.437,1000,6.437,1001,4.553,1002,5.274]],["title/components/NavbarComponent.html",[84,0.393,164,1.065]],["body/components/NavbarComponent.html",[7,0.417,8,0.017,9,0.399,10,0.399,12,0.417,13,0.417,19,0.064,20,0.057,21,0.057,25,0.329,27,0.087,32,0.999,54,0.454,61,1.312,64,0.435,67,0.592,72,0.064,73,0.094,74,0.005,75,0.005,80,0.495,81,1.4,83,1.094,84,0.339,87,0.417,88,0.802,89,0.495,90,0.495,91,0.495,92,0.495,94,0.383,95,2.227,96,2.133,98,0.838,100,0.838,102,0.424,103,0.595,105,0.417,106,1.228,107,0.398,109,1.659,110,0.95,112,0.398,113,0.498,114,0.446,115,0.343,117,0.681,118,1.369,119,0.918,120,1.983,121,1.775,122,0.829,123,2.188,124,0.454,125,2.085,126,1.292,127,0.76,128,0.76,129,0.76,131,1.292,136,1.292,137,1.656,139,1.362,140,1.158,141,2.742,142,2.647,143,3.079,147,0.495,148,0.838,149,0.838,150,0.495,151,1.282,152,0.495,153,0.495,154,0.417,155,0.838,156,0.838,157,0.399,158,0.495,159,0.417,160,0.495,161,0.399,162,0.495,163,0.495,164,1.08,165,0.495,166,0.399,167,0.495,168,0.495,169,0.417,170,0.495,171,0.399,172,0.648,173,0.838,174,0.399,175,0.495,176,0.495,177,0.706,178,1.434,179,0.495,180,0.495,210,1.292,227,1.058,242,3.058,260,0.565,269,1.292,278,2.836,303,3.453,315,0.474,316,0.322,319,1.176,333,1.498,337,0.565,338,2.742,339,1.158,341,0.5,370,3.002,392,1.292,394,1.97,417,1.089,450,2.742,456,2.739,467,1.792,497,1.656,498,1.687,500,2.514,502,1.961,504,1.447,505,1.362,506,1.058,509,1.362,510,1.792,511,3.002,523,2.742,525,2.188,531,2.742,532,2.188,537,2.742,538,2.188,544,1.22,545,1.22,569,1.772,575,0.802,579,0.592,629,0.805,630,0.855,670,0.978,677,1.961,710,2.846,738,3.885,740,1.058,741,2.215,744,2.333,750,1.058,751,2.33,754,4.749,756,1.674,757,2.533,758,2.838,759,3.014,760,2.215,761,3.014,762,2.085,764,2.154,765,2.477,766,1.292,767,2.889,772,1.058,778,1.656,781,2.188,802,1.656,824,0.978,855,1.158,857,1.292,861,0.978,864,3.079,865,1.158,873,2.551,882,1.97,883,2.535,906,1.882,908,0.978,922,2.188,926,2.535,927,1.656,929,1.656,934,1.058,943,1.292,944,5.293,945,3.358,949,1.961,950,1.961,1003,1.292,1004,2.533,1005,3.294,1006,2.533,1007,4.337,1008,4.337,1009,3.294,1010,2.742,1011,4.337,1012,4.337,1013,4.337,1014,3.877,1015,2.533,1016,1.496,1017,4.71,1018,1.496,1019,1.496,1020,1.496,1021,2.533,1022,1.496,1023,4.71,1024,1.496,1025,1.496,1026,1.496,1027,1.496,1028,1.496,1029,1.496,1030,2.533,1031,2.533,1032,2.533,1033,2.533,1034,1.496,1035,2.533,1036,1.496,1037,2.533,1038,1.496,1039,1.496,1040,1.496,1041,1.496,1042,1.496,1043,1.496,1044,1.496,1045,1.496,1046,1.496,1047,1.158,1048,2.533,1049,2.533,1050,2.533,1051,2.533,1052,1.496,1053,1.496,1054,1.058,1055,1.292,1056,6.993,1057,4.337,1058,1.496,1059,1.496,1060,1.496,1061,1.292,1062,1.496,1063,1.496,1064,2.533,1065,1.496,1066,2.533,1067,5.277,1068,3.877,1069,5.018,1070,1.496,1071,1.496,1072,3.294,1073,5.497,1074,4.71,1075,3.877,1076,3.877,1077,3.877,1078,3.877,1079,3.294,1080,5.687,1081,3.877,1082,4.335,1083,5.018,1084,3.877,1085,3.877,1086,3.294,1087,2.533,1088,3.877,1089,1.496,1090,5.497,1091,2.533,1092,2.533,1093,2.533,1094,2.533,1095,2.533,1096,2.533,1097,2.533,1098,2.533,1099,2.533,1100,1.961,1101,2.533,1102,5.277,1103,5.277,1104,4.337,1105,1.292,1106,5.687,1107,2.188,1108,2.533,1109,2.533,1110,2.551,1111,1.961,1112,4.337,1113,1.496,1114,3.294,1115,1.496,1116,2.846,1117,2.188,1118,1.496,1119,1.496,1120,1.496,1121,1.496,1122,1.496,1123,1.496,1124,1.496,1125,1.496,1126,2.533,1127,1.496,1128,1.496,1129,1.158,1130,2.533,1131,1.292,1132,3.877,1133,1.496,1134,1.496,1135,2.533,1136,1.496,1137,1.496,1138,1.496,1139,1.496,1140,1.496,1141,1.496,1142,1.496,1143,2.846,1144,5.497,1145,1.496,1146,1.496,1147,1.496,1148,1.496,1149,1.496,1150,1.496,1151,1.496,1152,1.496,1153,1.496,1154,1.496,1155,1.496,1156,1.292]],["title/guards/NotAuthGuard.html",[324,1.944,361,2.705]],["body/guards/NotAuthGuard.html",[8,0.017,19,0.2,20,0.178,21,0.178,25,0.386,27,0.271,72,0.2,73,0.295,74,0.012,75,0.012,80,1.547,97,2.516,102,0.601,105,0.983,107,0.734,108,2.85,109,2.421,110,0.85,112,0.938,113,0.768,114,0.614,115,0.809,117,0.734,124,1.419,128,2.377,129,2.377,130,2.252,242,4.536,253,5.065,273,1.196,274,3.343,282,1.344,315,1.481,316,1.008,319,1.419,325,2.377,328,4.04,329,4.532,330,4.532,332,3.212,333,2.273,334,3.212,335,2.731,336,4.301,337,1.767,339,3.621,340,2.672,341,0.924,342,4.04,361,4.224,1010,3.308,1157,5.683,1158,4.04,1159,4.677,1160,4.677,1161,4.677,1162,4.677,1163,4.677,1164,4.677]],["title/components/NotFoundComponent.html",[84,0.393,166,1.021]],["body/components/NotFoundComponent.html",[7,1.204,8,0.016,9,1.154,10,1.154,12,1.204,13,1.204,19,0.185,20,0.164,21,0.164,25,0.228,27,0.25,32,1.311,54,1.311,61,1.581,64,1.257,72,0.185,73,0.273,74,0.012,75,0.012,83,0.746,84,0.652,87,1.204,88,1.797,89,1.43,90,1.43,91,1.43,92,1.43,94,1.106,95,2.612,96,2.501,98,1.877,100,1.877,102,0.556,105,0.934,106,2.13,107,0.995,110,0.808,113,0.73,117,0.679,118,1.649,122,1.056,147,1.43,148,1.877,149,1.877,150,1.43,151,2.224,152,1.43,153,1.43,154,1.204,155,1.877,156,1.877,157,1.154,158,1.43,159,1.204,160,1.43,161,1.154,162,1.43,163,1.43,164,1.204,165,1.43,166,1.796,167,1.43,168,1.43,169,1.204,170,1.43,171,1.154,172,1.452,173,1.877,174,1.154,175,1.43,176,1.43,177,1.204,178,1.43,179,1.43,180,1.43,221,4.481,341,1.121,417,2.095,1165,5.474,1166,3.735,1167,6.727,1168,6.336,1169,5.676,1170,4.324,1171,4.324,1172,5.676]],["title/components/RegisterUserComponent.html",[10,1.021,84,0.393]],["body/components/RegisterUserComponent.html",[7,0.615,8,0.017,9,0.589,10,1.308,12,0.615,13,0.615,19,0.094,20,0.084,21,0.084,25,0.313,27,0.128,30,2.122,32,0.669,49,0.96,54,1.865,55,4.584,61,0.97,64,0.641,72,0.094,73,0.139,74,0.007,75,0.007,83,1.092,84,0.444,87,0.615,88,1.103,89,0.73,90,0.73,91,0.73,92,0.73,94,0.564,95,2.401,96,2.299,98,1.151,100,1.151,102,0.284,103,0.818,104,3.191,105,0.573,106,1.551,107,0.547,109,1.151,110,0.901,112,0.547,113,0.63,114,0.504,115,0.472,117,0.769,118,1.424,119,1.201,120,1.426,121,1.486,122,0.769,127,1.121,139,2.32,142,1.063,147,0.73,148,1.151,149,1.151,150,0.73,151,1.62,152,0.73,153,0.73,154,0.615,155,1.151,156,1.151,157,0.589,158,0.73,159,0.615,160,0.73,161,0.589,162,0.73,163,0.73,164,0.615,165,0.73,166,0.589,167,0.73,168,0.73,169,0.615,170,0.73,171,0.589,172,0.891,173,1.151,174,0.589,175,0.73,176,0.73,177,0.615,178,0.73,179,0.73,180,0.73,192,1.443,193,1.344,273,0.891,288,2.464,289,2.798,310,1.989,312,1.187,313,1.121,316,0.476,319,1.8,321,2.798,337,1.851,341,0.688,366,1.344,367,2.122,393,1.344,394,3.548,417,1.426,423,1.973,431,2.798,456,2.359,459,2.439,460,1.377,465,2.132,487,1.187,488,1.187,498,2.754,500,2.439,504,1.26,505,1.187,506,1.561,509,2.635,550,2.582,561,1.344,562,1.009,563,2.629,564,1.26,565,0.834,573,1.561,575,1.103,576,2.277,577,2.122,578,1.677,579,1.377,580,2.985,581,1.906,582,2.122,591,2.463,603,1.593,737,1.561,741,1.26,744,2.32,748,1.708,756,2.49,757,1.873,758,2.32,759,2.464,760,1.989,761,3.237,762,1.873,764,1.443,767,1.677,776,1.677,778,1.443,779,1.708,780,1.443,792,2.629,797,4.237,798,2.277,800,2.277,802,2.277,803,1.989,809,2.277,810,4.232,811,1.561,812,3.203,814,2.277,815,2.277,821,2.629,823,2.277,831,1.906,832,4.021,833,1.906,834,1.561,835,1.561,836,1.561,837,1.561,838,1.561,839,1.708,841,1.561,842,1.708,845,3.465,846,3.465,847,3.203,848,3.465,849,2.463,850,2.463,851,2.122,852,2.463,853,1.906,854,3.793,855,3.34,856,3.051,858,3.727,859,1.906,860,1.906,861,1.443,862,1.906,863,1.708,864,1.443,865,1.708,866,1.906,895,3.487,909,1.906,993,3.615,994,1.443,1001,1.561,1173,5.598,1174,1.906,1175,4.314,1176,3.482,1177,4.129,1178,4.129,1179,4.314,1180,3.482,1181,2.206,1182,2.206,1183,2.206,1184,2.206,1185,2.206,1186,2.206,1187,2.206,1188,1.708,1189,1.708,1190,2.206,1191,1.561,1192,1.561,1193,3.772,1194,1.561,1195,1.708,1196,2.206,1197,2.206,1198,1.906,1199,2.206,1200,2.206,1201,2.206,1202,2.206,1203,4.314,1204,3.482,1205,2.463,1206,3.793,1207,2.696,1208,2.696,1209,2.696,1210,3.793,1211,2.696,1212,2.696,1213,3.482,1214,2.206]],["title/pipes/SearchFilterPipe.html",[11,2.501,575,1.211]],["body/pipes/SearchFilterPipe.html",[8,0.017,11,4.269,19,0.231,20,0.205,21,0.205,25,0.285,27,0.313,72,0.231,73,0.341,74,0.014,75,0.014,94,1.381,105,0.889,110,0.769,112,0.848,113,0.902,114,0.555,115,0.731,117,0.848,121,2.129,273,1.866,276,3.819,341,1.066,575,2.067,590,4.664,666,4.18,670,3.53,671,5.64,673,5.64,1116,4.664,1215,5.64,1216,4.664,1217,6.529,1218,7.467,1219,5.399,1220,5.399,1221,5.399,1222,5.399]],["title/modules/SharedModule.html",[0,1.586,15,1.944]],["body/modules/SharedModule.html",[2,1.427,3,2.574,8,0.017,15,3.929,16,2.875,17,2.125,18,1.903,19,0.169,20,0.15,21,0.15,23,3.053,24,1.638,25,0.414,26,2.216,27,0.229,28,3.257,29,2.257,37,4.617,38,3.257,39,3.059,40,3.257,44,3.494,45,2.583,46,2.125,47,3.78,48,3.78,49,1.719,50,3.78,51,2.794,52,3.494,53,2.583,57,3.494,58,2.583,59,3.494,60,2.583,66,3.78,67,1.563,70,4.138,71,3.059,72,0.169,73,0.249,74,0.011,75,0.011,83,0.681,86,3.053,154,2.108,159,2.108,169,2.108,177,2.108,225,4.138,226,3.059,227,2.794,418,2.583,469,3.053,472,3.059,963,4.617,964,3.059,1054,2.794,1055,3.413,1223,3.413,1224,3.413,1225,3.413,1226,3.951,1227,3.951,1228,5.344,1229,3.951,1230,3.951,1231,5.344,1232,5.344,1233,3.951,1234,3.951,1235,3.951,1236,3.951,1237,3.951,1238,3.951,1239,3.951]],["title/components/TabComponent.html",[84,0.393,169,1.065]],["body/components/TabComponent.html",[7,0.938,8,0.017,9,0.899,10,0.899,12,0.938,13,0.938,19,0.144,20,0.128,21,0.128,25,0.294,27,0.195,32,1.022,54,1.022,61,1.333,64,0.979,72,0.144,73,0.213,74,0.01,75,0.01,83,0.581,84,0.573,87,0.938,88,1.515,89,1.114,90,1.114,91,1.114,92,1.114,94,0.862,95,2.546,96,2.438,98,1.583,100,1.583,102,0.433,105,0.788,106,1.919,107,0.874,110,0.912,113,0.615,114,0.573,117,0.529,118,1.391,122,1.145,137,3.639,138,2.383,139,1.812,141,2.383,142,3.082,143,2.203,144,2.203,147,1.114,148,1.583,149,1.583,150,1.114,151,2.004,152,1.114,153,1.114,154,0.938,155,1.583,156,1.583,157,0.899,158,1.114,159,0.938,160,1.114,161,0.899,162,1.114,163,1.114,164,0.938,165,1.114,166,0.899,167,1.114,168,1.114,169,1.688,170,1.114,171,0.899,172,1.224,173,1.583,174,0.899,175,1.114,176,1.114,177,0.938,178,1.114,179,1.114,180,1.114,276,4.703,316,0.726,333,1.164,341,0.945,417,1.84,433,3.706,467,4.286,498,2.082,500,2.545,501,3.639,505,1.812,632,1.541,680,4.808,682,4.309,684,4.808,737,2.383,738,5.412,740,2.383,741,2.734,744,2.574,745,4.135,747,2.911,749,4.135,750,2.383,751,2.383,752,2.911,753,2.911,757,1.812,758,1.812,759,1.925,760,1.925,761,3.179,762,1.812,765,3.179,767,2.68,772,2.383,780,2.203,782,4.808,856,4.838,861,2.203,934,2.383,1105,2.911,1110,2.609,1111,2.609,1240,2.911,1241,5.566,1242,4.786,1243,4.786,1244,3.369,1245,3.369,1246,3.369,1247,4.786,1248,4.786,1249,4.786,1250,3.369,1251,3.369,1252,3.369,1253,3.369,1254,3.369,1255,3.369,1256,3.369,1257,3.369,1258,3.369,1259,3.369,1260,3.369]],["title/interfaces/Task.html",[122,0.601,255,1.944]],["body/interfaces/Task.html",[8,0.017,19,0.192,20,0.17,21,0.17,72,0.192,74,0.012,75,0.012,102,0.576,103,1.364,104,3.667,114,0.811,115,1.055,119,2.227,122,0.912,255,2.276,256,2.928,335,3.416,383,3.895,444,5.279,465,3.15,484,4.458,485,3.895,717,3.283,718,4.458,765,3.895,1129,3.467,1261,3.868,1262,6.818,1263,6.818,1264,4.458,1265,6.818,1266,6.818,1267,3.868,1268,4.477,1269,4.477]],["title/components/TaskCalendarComponent.html",[84,0.393,171,1.021]],["body/components/TaskCalendarComponent.html",[7,0.884,8,0.017,9,0.847,10,0.847,12,0.884,13,0.884,19,0.136,20,0.121,21,0.121,25,0.363,27,0.184,32,0.963,54,0.963,61,1.277,64,0.922,67,1.256,72,0.136,73,0.2,74,0.01,75,0.01,81,1.146,83,0.547,84,0.554,87,0.884,88,1.452,89,1.05,90,1.05,91,1.05,92,1.05,94,0.812,95,2.528,96,2.421,98,1.516,100,1.516,102,0.408,103,1.077,104,2.466,105,0.755,106,1.867,107,0.72,110,0.928,112,0.72,113,0.758,114,0.607,115,0.621,117,0.845,118,1.714,120,1.516,121,1.391,122,1.171,147,1.05,148,1.516,149,1.516,150,1.05,151,1.95,152,1.05,153,1.05,154,0.884,155,1.516,156,1.516,157,0.847,158,1.05,159,0.884,160,1.05,161,0.847,162,1.05,163,1.05,164,0.884,165,1.05,166,0.847,167,1.05,168,1.05,169,0.884,170,1.05,171,1.574,172,1.377,173,1.516,174,0.847,175,1.05,176,1.05,177,0.884,178,1.05,179,1.05,180,1.05,249,1.813,275,2.794,303,1.613,315,1.005,316,0.684,319,1.391,341,0.905,417,1.78,418,3.52,419,4.651,420,3.961,423,2.462,434,4.168,438,4.168,450,3.243,459,2.86,460,2.332,465,1.381,469,1.813,481,2.458,484,2.998,485,2.619,544,1.528,545,1.528,562,1.452,565,1.199,575,1.005,578,1.528,579,1.256,600,2.84,604,4.753,606,1.813,607,2.245,609,1.934,628,3.243,632,1.452,717,2.208,718,2.998,765,3.075,882,2.736,883,3.855,893,2.075,906,2.619,907,1.934,908,2.075,926,2.998,927,2.075,929,2.075,1264,3.52,1270,5.203,1271,2.742,1272,4.651,1273,5.094,1274,2.742,1275,4.651,1276,4.585,1277,2.742,1278,3.174,1279,3.174,1280,3.174,1281,3.174,1282,2.742,1283,2.742,1284,2.742,1285,2.742,1286,2.742,1287,2.742,1288,2.742,1289,2.742,1290,2.458,1291,2.742]],["title/components/TaskDialogComponent.html",[84,0.393,172,0.978]],["body/components/TaskDialogComponent.html",[7,0.888,8,0.017,9,0.852,10,0.852,12,0.888,13,0.888,19,0.137,20,0.121,21,0.121,25,0.331,27,0.185,32,0.968,54,0.968,61,1.504,64,0.927,67,1.262,72,0.137,73,0.201,74,0.01,75,0.01,83,0.55,84,0.555,87,0.888,88,1.457,89,1.055,90,1.055,91,1.055,92,1.055,94,0.816,95,2.53,96,2.422,98,1.522,100,1.522,102,0.41,103,1.081,105,0.758,106,1.871,107,0.723,110,0.958,112,0.501,113,0.694,114,0.555,115,0.432,117,0.848,118,1.718,119,1.282,122,1.179,127,1.621,142,1.536,147,1.055,148,1.522,149,1.522,150,1.055,151,1.954,152,1.055,153,1.055,154,0.888,155,1.522,156,1.522,157,0.852,158,1.055,159,0.888,160,1.055,161,0.852,162,1.055,163,1.055,164,0.888,165,1.055,166,0.852,167,1.055,168,1.055,169,0.888,170,1.055,171,0.852,172,1.603,173,1.522,174,0.852,175,1.055,176,1.055,177,0.888,178,1.055,179,1.055,180,1.055,249,2.629,315,1.01,316,0.688,319,1.396,333,1.102,341,0.909,380,2.475,417,1.785,465,2.572,500,1.459,501,2.086,544,3.018,545,2.6,546,3.601,547,4.18,549,3.601,552,3.29,559,1.944,560,1.944,565,1.205,566,1.944,567,1.944,568,1.944,571,2.804,572,1.944,586,2.804,600,2.846,606,3.935,609,1.944,632,1.459,655,3.819,682,4.18,717,1.536,718,2.086,767,1.536,824,2.086,882,2.744,1264,3.009,1270,5.334,1292,2.47,1293,4.664,1294,3.976,1295,3.19,1296,4.602,1297,2.756,1298,3.19,1299,3.19,1300,3.19,1301,3.19,1302,2.756,1303,2.756,1304,2.756,1305,3.19,1306,2.756,1307,2.756,1308,3.976,1309,3.976,1310,3.976,1311,3.976,1312,3.976,1313,3.976,1314,4.602,1315,3.009,1316,4.602]],["title/components/TaskDialogComponent-1.html",[84,0.328,172,0.816,921,2.47]],["body/components/TaskDialogComponent-1.html",[7,0.461,8,0.017,9,0.442,10,0.442,12,0.461,13,0.461,19,0.071,20,0.063,21,0.063,25,0.344,27,0.096,32,0.502,39,1.283,46,1.484,49,0.721,54,0.502,61,1.465,64,1.442,67,0.655,72,0.071,73,0.105,74,0.006,75,0.006,81,0.997,83,1.069,84,0.365,87,0.461,88,0.874,89,0.548,90,0.548,91,0.548,92,0.548,94,0.424,95,2.277,96,2.18,98,0.912,100,0.912,102,0.213,103,0.648,104,2.225,105,0.454,106,1.31,107,0.433,109,1.74,110,1.034,112,0.433,113,0.532,114,0.695,115,0.374,117,0.722,118,1.335,119,1.382,120,2.09,121,1.917,122,1.072,124,0.502,144,2.705,147,0.548,148,0.912,149,0.912,150,0.548,151,1.368,152,0.548,153,0.548,154,0.461,155,0.912,156,0.912,157,0.442,158,0.548,159,0.461,160,0.548,161,0.442,162,0.548,163,0.548,164,0.461,165,0.548,166,0.442,167,0.548,168,0.548,169,0.461,170,0.548,171,0.442,172,1.176,173,0.912,174,0.442,175,0.548,176,0.548,177,0.461,178,0.548,179,0.548,180,0.548,249,1.576,260,0.626,273,0.424,288,2.026,289,2.363,303,3.15,310,0.946,312,0.891,313,0.842,315,0.524,316,0.357,319,1.596,321,1.576,322,1.681,323,1.681,333,1.225,337,1.34,341,0.545,380,1.908,383,2.026,406,0.758,417,1.173,456,1.329,460,1.636,465,2.637,484,2.319,485,2.026,498,0.721,500,1.892,504,1.576,505,0.891,507,1.283,509,0.891,510,1.172,511,1.283,522,0.842,524,0.842,544,2.534,545,1.708,546,2.52,547,2.926,549,2.52,550,2.29,552,2.161,559,1.009,560,1.009,561,1.009,562,0.758,563,1.681,564,0.946,565,1.042,566,1.009,567,1.009,568,1.009,569,0.891,571,3.023,572,1.009,575,0.524,577,1.681,579,1.403,580,1.009,582,1.009,585,1.283,586,2.161,606,4.164,630,0.946,632,0.758,634,1.172,655,2.508,670,1.083,675,2.384,688,2.746,690,1.992,711,1.009,717,0.798,726,1.283,727,1.431,735,2.384,744,0.891,756,0.842,757,0.891,758,1.484,762,0.891,765,3.373,767,1.708,774,1.431,778,1.083,792,2.161,802,2.319,803,2.363,809,1.804,811,1.172,812,2.705,814,1.804,815,1.804,821,2.161,823,1.083,824,1.083,825,1.431,832,3.742,841,1.172,851,2.161,856,2.508,873,2.746,882,1.402,893,1.804,912,1.431,921,4.074,945,1.283,949,1.283,950,1.283,962,1.431,964,1.283,973,1.083,986,1.431,1061,1.431,1082,2.384,1117,1.431,1129,4.693,1156,3.573,1189,3.203,1205,2.926,1264,3.604,1267,4.944,1292,1.283,1293,3.064,1294,2.384,1297,1.431,1302,2.384,1303,2.384,1304,3.064,1306,1.431,1307,3.064,1308,2.384,1309,2.384,1310,2.384,1311,2.384,1312,2.384,1313,2.384,1315,1.804,1317,5.644,1318,3.546,1319,3.546,1320,3.546,1321,3.546,1322,3.546,1323,3.546,1324,3.546,1325,3.546,1326,3.546,1327,3.546,1328,3.546,1329,3.546,1330,3.546,1331,3.546,1332,3.546,1333,4.136,1334,3.546,1335,4.136,1336,2.759,1337,1.656,1338,1.656,1339,1.656,1340,1.656,1341,3.546,1342,1.656,1343,2.759,1344,1.656,1345,3.546,1346,1.656,1347,2.759,1348,2.759,1349,2.759,1350,2.759,1351,2.759,1352,2.759,1353,2.759,1354,2.759,1355,1.656,1356,1.656,1357,1.656,1358,1.656,1359,1.656,1360,1.656,1361,1.656,1362,1.656,1363,1.656,1364,1.656,1365,1.656,1366,1.656,1367,1.656,1368,1.656,1369,1.656,1370,1.656,1371,1.656,1372,1.656,1373,1.656,1374,1.656,1375,1.656,1376,1.656,1377,1.656,1378,1.656,1379,1.656,1380,1.656,1381,1.656,1382,1.656,1383,1.656,1384,1.656,1385,3.546,1386,2.746,1387,1.656,1388,2.136,1389,1.283,1390,1.656,1391,1.656,1392,1.283,1393,1.656,1394,1.656,1395,2.759,1396,2.759,1397,2.759,1398,2.759,1399,2.759,1400,2.759,1401,1.283,1402,1.656,1403,1.656,1404,1.656,1405,1.656,1406,1.431,1407,1.656,1408,2.759,1409,1.656,1410,1.656,1411,1.656,1412,1.656,1413,1.656,1414,1.656,1415,1.656,1416,1.656,1417,1.656,1418,2.759,1419,1.656]],["title/components/TaskManagementComponent.html",[84,0.393,174,1.021]],["body/components/TaskManagementComponent.html",[7,0.668,8,0.017,9,0.64,10,0.64,12,0.668,13,0.668,19,0.103,20,0.091,21,0.091,25,0.334,27,0.139,32,1.38,54,0.727,61,1.267,64,1.612,67,0.948,72,0.103,73,0.151,74,0.008,75,0.008,81,1.643,83,0.413,84,0.468,87,0.668,88,1.177,89,0.793,90,0.793,91,0.793,92,0.793,94,0.613,95,2.433,96,2.33,98,1.229,100,1.229,102,0.308,103,0.873,104,1.999,105,0.612,106,1.623,107,0.583,110,0.945,112,0.714,113,0.713,114,0.604,115,0.616,117,0.921,118,2.02,119,1.267,120,1.505,121,1.38,122,1.134,127,2.605,140,2.877,147,0.793,148,1.229,149,1.229,150,0.793,151,1.695,152,0.793,153,0.793,154,0.668,155,1.229,156,1.229,157,0.64,158,0.793,159,0.668,160,0.793,161,0.64,162,0.793,163,0.793,164,0.668,165,0.793,166,0.64,167,0.793,168,0.793,169,0.668,170,0.793,171,0.64,172,1.164,173,1.229,174,1.368,175,0.793,176,0.793,177,0.668,178,0.793,179,0.793,180,0.793,249,1.369,275,3.38,303,2.605,315,0.759,316,0.517,319,1.127,341,0.734,417,1.505,418,1.568,423,2.081,430,3.21,431,2.928,434,3.523,438,5.138,449,3.21,450,5.175,459,2.536,460,2.028,465,1.043,469,1.369,481,1.856,484,2.43,485,2.123,487,1.29,488,1.29,497,1.568,498,1.043,500,1.096,544,2.468,545,2.468,562,1.096,565,0.906,575,0.759,578,1.155,579,0.948,585,1.856,606,1.369,607,1.696,628,2.628,632,1.096,690,2.468,711,1.461,717,1.79,718,2.43,741,1.369,744,1.29,757,1.29,758,1.29,759,1.369,760,1.369,761,2.123,762,1.29,765,2.599,767,1.79,772,1.696,790,4.428,863,1.856,864,2.43,882,2.605,883,3.351,893,1.568,896,3.218,906,2.928,907,1.461,908,1.568,926,4.002,927,3.351,929,3.351,934,1.696,959,4.779,973,2.975,1110,1.856,1111,1.856,1189,2.877,1264,2.975,1272,3.931,1273,4.428,1275,3.21,1277,2.071,1282,2.071,1283,2.071,1284,2.071,1285,2.071,1286,2.071,1287,2.071,1288,2.071,1289,2.071,1290,1.856,1291,4.428,1317,5.231,1420,2.071,1421,4.55,1422,3.716,1423,5.126,1424,2.398,1425,3.716,1426,2.398,1427,2.398,1428,2.398,1429,2.398,1430,2.398,1431,2.398,1432,4.55,1433,5.126,1434,5.126,1435,3.716,1436,3.716,1437,2.398,1438,2.398,1439,2.398,1440,2.398,1441,2.398]],["title/components/UpdateInfoComponent.html",[12,1.065,84,0.393]],["body/components/UpdateInfoComponent.html",[7,0.626,8,0.017,9,0.6,10,0.6,12,1.378,13,0.626,19,0.212,20,0.085,21,0.085,25,0.327,27,0.13,30,2.153,32,0.682,49,0.978,54,0.682,61,1.987,64,0.653,67,0.889,68,4.844,72,0.096,73,0.142,74,0.007,75,0.007,83,1.146,84,0.449,87,0.626,88,1.119,89,0.743,90,0.743,91,0.743,92,0.743,94,0.575,95,2.408,96,2.306,98,1.168,100,1.168,102,0.289,103,0.83,105,0.582,106,1.567,107,0.555,110,0.962,112,0.555,113,0.636,114,0.615,115,0.478,117,0.777,118,1.438,119,1.499,120,1.444,121,1.501,122,0.777,147,0.743,148,1.168,149,1.168,150,0.743,151,1.637,152,0.743,153,0.743,154,0.626,155,1.168,156,1.168,157,0.6,158,0.743,159,0.626,160,0.743,161,0.6,162,0.743,163,0.743,164,0.626,165,0.743,166,0.6,167,0.743,168,0.743,169,0.626,170,0.743,171,0.6,172,0.904,173,1.168,174,0.6,175,0.743,176,0.743,177,0.626,178,0.743,179,0.743,180,0.743,273,0.575,288,2.494,289,2.827,310,2.018,312,1.209,313,1.142,316,0.484,319,1.632,321,2.827,322,3.016,323,3.016,337,1.87,341,0.698,366,1.37,380,2.348,394,3.702,406,1.028,417,1.444,423,1.997,456,2.383,459,2.461,460,1.398,465,2.153,498,1.538,509,2.662,544,2.591,545,2.103,546,3.016,548,1.942,549,3.016,550,2.6,552,2.153,559,1.37,560,1.37,561,1.37,562,1.028,563,2.66,564,1.284,565,0.849,566,1.37,567,1.37,568,1.37,569,1.901,570,1.59,571,3.278,572,1.37,573,2.499,575,1.119,576,2.31,577,3.016,578,1.702,579,1.398,580,2.153,582,2.153,586,2.66,591,2.499,603,1.616,717,1.702,756,1.142,776,1.702,792,2.66,797,4.26,798,2.31,800,2.31,803,2.494,809,2.31,812,3.236,814,2.855,815,2.31,821,2.66,823,2.31,832,3.907,834,1.59,835,1.59,836,1.59,837,1.59,838,1.59,845,3.501,846,3.501,847,3.236,848,3.501,849,2.499,850,2.499,851,2.153,852,2.499,895,3.518,993,3.641,994,1.47,1001,1.59,1177,4.166,1178,4.166,1188,1.74,1191,1.59,1192,1.59,1193,3.806,1194,1.59,1195,1.74,1205,2.499,1206,3.832,1207,2.736,1208,2.736,1209,2.736,1210,3.832,1211,2.736,1212,2.736,1315,2.31,1386,2.736,1388,2.736,1389,1.74,1392,1.74,1401,2.736,1406,3.053,1442,5.303,1443,1.942,1444,4.366,1445,3.534,1446,4.949,1447,3.534,1448,2.248,1449,2.248,1450,2.248,1451,2.248,1452,2.248,1453,2.248,1454,2.248,1455,2.248,1456,2.248,1457,2.248,1458,3.053,1459,3.534,1460,3.053]],["title/components/UpdateModalComponent.html",[13,1.065,84,0.393]],["body/components/UpdateModalComponent.html",[7,0.905,8,0.017,9,0.867,10,0.867,12,1.298,13,1.66,19,0.139,20,0.123,21,0.123,25,0.333,27,0.188,32,0.985,54,0.985,61,2.072,62,4.986,64,0.944,67,1.285,68,2.297,69,2.806,72,0.139,73,0.205,74,0.01,75,0.01,81,1.684,83,1.273,84,0.561,87,0.905,88,1.476,89,1.074,90,1.074,91,1.074,92,1.074,94,0.831,95,2.535,96,2.427,98,1.541,100,1.541,102,0.418,103,1.095,105,0.767,106,1.887,107,0.732,110,0.986,112,0.51,113,0.701,114,0.561,115,0.44,117,0.936,118,1.834,119,1.298,122,0.936,147,1.074,148,1.541,149,1.541,150,1.074,151,1.971,152,1.074,153,1.074,154,0.905,155,1.541,156,1.541,157,0.867,158,1.074,159,0.905,160,1.074,161,0.867,162,1.074,163,1.074,164,0.905,165,1.074,166,0.867,167,1.074,168,1.074,169,0.905,170,1.074,171,0.867,172,1.193,173,1.541,174,0.867,175,1.074,176,1.074,177,0.905,178,1.074,179,1.074,180,1.074,303,2.369,319,1.414,341,0.921,380,2.933,394,3.029,406,1.485,417,1.803,540,2.515,541,3.609,542,4.711,543,4.027,544,3.258,545,3.039,546,3.631,549,3.631,552,3.323,558,2.806,559,1.979,560,1.979,566,1.979,567,1.979,568,1.979,569,2.933,570,2.297,571,1.979,572,1.979,586,1.979,882,2.772,883,3.896,896,3.297,906,3.115,907,1.979,908,2.123,926,3.896,927,3.048,929,3.048,1100,3.609,1274,2.806,1290,2.515,1315,3.048,1442,5.458,1461,5.959,1462,5.959,1463,4.662,1464,3.248,1465,3.248,1466,3.248,1467,3.248,1468,3.248,1469,4.662]],["title/interfaces/User.html",[83,0.66,255,1.944]],["body/interfaces/User.html",[8,0.016,19,0.221,20,0.196,21,0.196,72,0.221,74,0.013,75,0.013,83,1.095,102,0.663,103,1.491,114,0.79,119,2.236,255,2.62,256,3.371,393,4.374,394,3.648,465,2.993,717,3.457,895,4.693,1191,5.077,1192,5.077,1193,5.077,1194,5.077,1470,4.454]],["title/components/UserCredentialsComponent.html",[84,0.393,177,1.065]],["body/components/UserCredentialsComponent.html",[7,0.548,8,0.017,9,0.525,10,0.525,12,0.548,13,0.548,19,0.084,20,0.075,21,0.075,25,0.338,27,0.114,30,1.936,32,0.597,49,0.856,54,0.597,61,1.816,64,0.572,67,0.778,72,0.084,73,0.124,74,0.007,75,0.007,83,1.228,84,0.411,87,0.548,88,1.006,89,0.65,90,0.65,91,0.65,92,0.65,94,0.503,95,2.354,96,2.254,98,1.051,100,1.051,102,0.253,103,0.746,105,0.523,106,1.453,107,0.499,109,1.874,110,0.957,112,0.499,113,0.59,114,0.583,115,0.43,117,0.791,118,1.464,119,1.403,120,1.517,121,1.528,122,0.72,124,0.597,127,1,147,0.65,148,1.051,149,1.051,150,0.65,151,1.517,152,0.65,153,0.65,154,0.548,155,1.051,156,1.051,157,0.525,158,0.65,159,0.548,160,0.65,161,0.525,162,0.65,163,0.65,164,0.548,165,0.65,166,0.525,167,0.65,168,0.65,169,0.548,170,0.65,171,0.525,172,0.813,173,1.051,174,0.525,175,0.65,176,0.65,177,1.278,178,1.874,179,0.65,180,0.65,260,0.743,273,0.503,288,2.283,289,2.621,310,1.815,312,1.058,313,1,315,0.623,316,0.424,319,1.634,321,2.621,322,2.796,323,2.796,337,1.734,341,0.627,366,1.198,367,3.454,370,2.46,372,1.699,380,2.15,394,3.792,400,2.745,406,0.9,417,1.322,423,1.828,431,2.621,456,2.594,459,2.303,460,1.257,465,1.997,487,1.058,488,1.058,498,1.382,509,3.173,522,1,544,2.425,545,1.925,546,2.796,547,3.246,549,2.796,552,2.435,559,1.198,560,1.198,561,1.198,562,0.9,563,2.435,566,1.198,567,1.198,568,1.198,569,1.709,570,1.391,571,3.069,572,1.198,575,1.006,576,2.077,577,1.936,578,1.53,579,1.581,580,2.796,582,1.936,586,2.435,591,2.247,603,1.453,717,1.925,756,1,776,1.53,792,2.435,797,4.263,798,3,800,3,803,2.283,809,2.077,811,1.391,812,3,814,2.077,815,2.077,821,2.435,823,2.077,824,1.286,828,1.699,832,3.857,834,2.247,835,2.247,836,2.247,837,2.247,838,2.247,839,3.094,841,2.247,842,2.46,845,3.81,846,3.81,847,3.522,848,3.81,849,3.246,850,3.246,851,2.796,852,3.246,895,3.293,993,3.454,994,1.286,1001,1.391,1054,4.814,1177,3.899,1178,3.899,1188,1.523,1191,1.391,1192,1.391,1193,3.562,1194,1.391,1195,1.523,1198,2.745,1205,2.247,1206,3.553,1207,2.46,1208,2.46,1209,2.46,1210,3.553,1211,2.46,1212,2.46,1315,2.077,1386,2.46,1388,2.46,1389,1.523,1392,1.523,1401,2.46,1458,1.699,1460,2.745,1471,5.88,1472,1.699,1473,3.997,1474,3.177,1475,5.036,1476,3.177,1477,1.967,1478,1.967,1479,1.967,1480,1.967,1481,1.967,1482,1.967,1483,1.967,1484,1.967,1485,1.967,1486,1.967,1487,1.967,1488,1.967,1489,1.523,1490,1.523,1491,1.967,1492,3.177,1493,1.967,1494,1.967,1495,1.967,1496,1.967,1497,1.967,1498,1.967,1499,5.899]],["title/injectables/UserDataService.html",[282,0.861,1500,2.501]],["body/injectables/UserDataService.html",[8,0.017,19,0.161,20,0.143,21,0.143,25,0.385,27,0.218,61,1.964,64,1.502,72,0.161,73,0.237,74,0.011,75,0.011,83,1.216,102,0.484,103,1.214,105,0.851,107,0.812,109,2.376,110,0.981,112,0.998,113,0.817,114,0.686,115,0.861,117,0.998,119,1.645,124,1.141,205,1.912,224,2.46,260,1.421,273,1.838,282,1.163,284,1.812,315,1.191,316,0.811,319,1.141,333,2.518,337,1.421,374,2.661,375,4.497,377,4.177,390,3.25,406,1.72,456,1.812,522,1.912,524,1.912,575,1.637,579,1.488,603,2.364,615,2.661,616,3.15,617,4.177,618,4.923,620,5.563,624,4.002,625,3.25,627,2.913,629,2.023,630,2.149,634,2.661,637,4.923,638,3.25,640,2.913,642,2.913,644,2.913,712,2.913,713,2.913,776,1.812,973,3.38,975,4.465,976,3.25,977,4.002,978,4.465,980,3.25,1500,3.38,1501,5.461,1502,5.102,1503,3.762,1504,3.762,1505,3.762,1506,3.762,1507,3.762,1508,3.25,1509,3.762,1510,3.762,1511,5.169,1512,3.762,1513,4.465,1514,5.169,1515,3.25,1516,3.762,1517,3.762,1518,3.762,1519,3.762]],["title/injectables/UserEntityService.html",[282,0.861,550,1.664]],["body/injectables/UserEntityService.html",[8,0.017,19,0.237,20,0.21,21,0.21,25,0.374,27,0.32,72,0.237,73,0.349,74,0.014,75,0.014,83,0.954,107,0.868,110,0.787,112,0.868,113,0.711,114,0.569,115,0.749,205,2.81,282,1.491,284,2.663,406,2.529,550,2.882,616,4.036,617,3.911,645,3.911,646,5.49,647,5.128,648,5.691,650,5.128,1501,5.128,1508,4.777,1520,5.529]],["title/guards/UsersResolver.html",[324,1.944,1521,2.501]],["body/guards/UsersResolver.html",[8,0.017,19,0.21,20,0.186,21,0.186,25,0.372,27,0.284,72,0.21,73,0.31,74,0.013,75,0.013,80,1.622,83,0.846,102,0.631,105,1.013,107,0.77,110,0.876,112,0.966,113,0.791,114,0.633,115,0.833,117,0.77,130,2.362,273,1.255,274,3.418,282,1.385,315,1.553,316,1.057,325,2.493,329,4.611,330,4.611,332,3.31,333,2.323,334,3.31,335,2.814,341,0.968,550,3.225,565,1.853,652,5.138,656,3.798,658,3.469,659,4.024,661,3.798,662,4.765,664,3.798,881,4.237,1521,4.024,1522,4.237,1523,4.905,1524,4.905,1525,4.905,1526,4.905]],["title/modules/ViewModule.html",[0,1.586,1527,2.705]],["body/modules/ViewModule.html",[2,1.367,3,2.499,8,0.017,15,3.506,16,2.792,17,2.036,18,1.822,19,0.162,20,0.144,21,0.144,23,2.965,24,2.152,25,0.41,26,2.152,27,0.219,28,3.163,29,2.162,31,2.306,44,3.394,45,2.474,46,2.036,59,3.394,60,2.474,72,0.162,73,0.239,74,0.011,75,0.011,83,0.653,94,0.968,107,0.594,122,0.815,157,1.841,205,1.923,249,2.162,319,2.026,355,3.269,550,3.002,564,2.965,565,2.238,599,4.305,600,3.322,602,4.019,603,1.731,608,2.965,609,3.61,610,3.394,611,3.163,612,4.586,629,2.036,665,4.511,690,3.322,711,3.61,776,1.822,957,4.305,970,3.163,977,2.93,1500,4.619,1521,3.394,1527,5.566,1528,3.269,1529,3.269,1530,3.269,1531,3.269,1532,4.511,1533,3.784,1534,3.269,1535,3.784,1536,5.924,1537,5.19,1538,2.93,1539,3.269,1540,3.784,1541,3.784,1542,3.784,1543,5.19,1544,5.19,1545,5.19,1546,3.784,1547,3.784]],["title/modules/ViewRoutingModule.html",[0,1.586,1532,2.501]],["body/modules/ViewRoutingModule.html",[2,1.715,8,0.017,19,0.203,20,0.18,21,0.18,24,1.968,25,0.403,26,2.5,27,0.275,30,2.893,72,0.203,73,0.3,74,0.013,75,0.013,77,2.893,78,3.674,79,3.367,80,1.57,81,1.715,82,4.247,83,0.819,84,0.488,85,3.104,86,2.712,157,1.609,250,5.723,512,4.264,514,4.037,516,4.686,526,4.264,533,4.264,603,2.757,608,3.444,609,2.893,610,3.942,652,3.358,677,3.676,711,2.893,776,2.903,970,3.674,1521,3.942,1532,3.942,1534,4.101,1539,4.101,1548,4.748,1549,4.748,1550,4.748,1551,6.029,1552,4.748,1553,4.748,1554,4.748,1555,4.748,1556,4.748,1557,4.748,1558,4.748,1559,4.748]],["title/coverage.html",[1560,4.516]],["body/coverage.html",[7,0.81,8,0.017,9,0.776,10,0.776,11,1.9,12,0.81,13,0.81,21,0.11,33,2.056,55,2.056,62,2.056,65,2.056,68,2.056,74,0.009,75,0.009,83,0.501,84,0.771,87,0.81,93,2.511,94,1.1,114,0.299,122,0.804,125,1.563,128,1.477,129,1.477,142,3.87,154,0.81,157,0.776,159,0.81,161,0.776,164,0.81,166,0.776,169,0.81,171,0.776,172,1.1,174,0.776,177,0.81,186,2.811,219,2.056,221,2.056,247,2.056,255,2.874,257,4,260,1.098,270,4.421,271,2.056,278,1.9,282,1.543,283,2.056,285,2.511,324,3.412,326,2.511,338,2.056,361,2.056,367,1.771,368,2.511,383,1.66,405,4.378,407,2.25,408,2.25,410,2.25,416,2.511,460,1.15,512,2.056,513,2.511,514,3.118,515,2.511,523,2.056,526,2.056,527,3.329,528,2.511,531,2.056,533,2.056,534,2.511,537,2.056,539,2.511,540,3.329,550,1.265,575,1.361,599,1.771,600,1.4,604,2.056,606,2.456,608,1.66,611,2.62,614,3.346,615,3.619,630,1.66,631,2.25,645,3.619,651,3.329,665,1.9,667,2.511,668,2.511,676,2.511,690,1.4,784,2.511,804,2.511,867,2.511,868,2.511,869,2.511,882,1.477,906,1.66,907,1.771,957,1.771,959,2.056,970,1.771,972,3.619,993,1.771,994,1.9,995,2.511,1003,2.511,1010,2.056,1047,2.25,1054,2.056,1157,2.511,1158,2.511,1165,2.511,1166,2.511,1173,2.511,1174,2.511,1215,2.511,1216,2.511,1240,2.511,1261,2.511,1270,3.329,1271,2.511,1292,3.329,1317,3.329,1420,2.511,1442,3.329,1443,2.511,1470,2.511,1471,2.511,1472,2.511,1489,2.25,1490,3.962,1500,1.9,1501,3.329,1521,1.9,1522,2.511,1538,2.25,1560,2.511,1561,2.907,1562,2.907,1563,2.907,1564,2.907,1565,4.421,1566,7.646,1567,7.748,1568,2.907,1569,5.655,1570,6.035,1571,6.025,1572,2.511,1573,6.974,1574,5.655,1575,2.907,1576,5.117,1577,2.907,1578,2.511,1579,5.655,1580,2.907,1581,2.907,1582,2.907,1583,3.329,1584,3.329,1585,2.25,1586,2.907,1587,2.907,1588,2.511,1589,2.511,1590,3.715,1591,2.511,1592,2.511,1593,2.907]],["title/dependencies.html",[3,2.216,1594,2.47]],["body/dependencies.html",[3,2.423,8,0.017,27,0.291,29,2.874,49,2.19,74,0.013,75,0.013,80,1.664,109,1.664,124,1.897,190,5.402,192,4.089,193,3.81,197,4.347,200,3.559,203,4.347,205,2.557,231,4.347,232,4.347,316,1.085,418,3.29,465,2.19,469,3.572,472,3.896,967,4.347,968,4.347,969,4.347,1595,5.032,1596,5.032,1597,7.709,1598,5.032,1599,6.253,1600,5.032,1601,5.032,1602,5.032,1603,5.032,1604,5.032,1605,5.032,1606,5.032,1607,4.347,1608,5.032,1609,5.032,1610,7.319,1611,5.032,1612,5.032,1613,5.032,1614,5.032,1615,5.032,1616,5.032,1617,5.032,1618,5.032,1619,5.032,1620,5.032,1621,5.032,1622,5.032]],["title/miscellaneous/functions.html",[1623,2.256,1624,3.976]],["body/miscellaneous/functions.html",[8,0.016,74,0.014,75,0.014,94,1.703,102,0.717,112,1.045,113,0.856,114,0.685,115,0.902,117,0.876,122,1.158,257,3.945,261,5.511,271,4.71,272,4.819,882,3.384,906,4.066,907,3.399,1578,5.752,1583,4.319,1584,5.155,1585,5.155,1623,3.945,1624,4.819,1625,4.819,1626,5.578,1627,4.819,1628,5.578,1629,6.658,1630,5.578,1631,5.578]],["title/index.html",[102,0.41,1632,3.19,1633,3.19]],["body/index.html",[8,0.013,18,2.404,20,0.19,74,0.013,75,0.013,84,0.697,113,0.642,341,0.986,460,1.975,469,3.872,485,4.253,659,3.264,932,3.865,940,4.313,973,3.264,1100,3.865,1594,3.865,1607,6.524,1634,4.992,1635,6.222,1636,4.992,1637,6.779,1638,4.313,1639,4.992,1640,4.992,1641,6.222,1642,7.302,1643,4.992,1644,4.992,1645,4.992,1646,4.992,1647,4.992,1648,4.992,1649,4.992,1650,4.992,1651,4.992,1652,4.992,1653,6.779,1654,6.779,1655,4.992,1656,7.097,1657,4.992,1658,4.992,1659,4.992,1660,4.992,1661,6.222,1662,6.222,1663,7.097,1664,4.992,1665,6.222,1666,6.222,1667,4.992,1668,4.992,1669,4.992,1670,4.992,1671,6.222,1672,4.992,1673,4.992,1674,4.992,1675,4.992,1676,6.779,1677,4.992,1678,4.992,1679,3.865,1680,4.992]],["title/modules.html",[2,1.888]],["body/modules.html",[1,3.852,2,1.967,8,0.014,14,3.561,15,2.768,74,0.014,75,0.014,181,3.852,187,3.561,188,3.561,193,4.686,350,3.561,593,3.852,598,3.561,951,3.852,956,3.561,1143,6.644,1527,3.852,1532,3.561,1681,7.69,1682,7.942,1683,7.603,1684,7.603]],["title/overview.html",[1679,4.048]],["body/overview.html",[1,5.426,2,1.255,3,2.356,4,3.003,5,3.003,6,3.003,7,1.577,8,0.017,9,1.511,10,1.511,11,3.702,12,1.577,13,1.577,14,3.702,15,3.913,16,2.632,17,1.87,18,1.674,74,0.01,75,0.01,79,1.767,87,1.922,88,1.101,154,1.922,157,1.511,159,1.922,161,1.511,164,1.577,166,1.511,169,1.922,171,1.511,172,1.448,174,1.511,177,1.922,181,5.35,182,3.003,183,3.003,184,3.003,185,3.003,186,3.702,187,3.702,188,4.683,256,2.273,284,1.674,325,1.767,347,3.003,348,3.003,349,3.003,350,3.702,550,2.464,593,5.318,594,3.003,595,3.003,596,3.003,597,3.003,598,3.702,599,3.744,600,2.959,665,3.702,666,2.692,690,2.959,951,5.24,952,3.003,953,3.003,954,3.003,955,3.003,956,3.702,957,3.744,1131,3.003,1223,3.003,1224,3.003,1225,3.003,1500,3.702,1527,5.497,1528,3.003,1529,3.003,1530,3.003,1531,3.003,1532,3.702,1679,2.692,1685,3.476,1686,3.476,1687,3.476,1688,3.476,1689,3.476,1690,3.476]],["title/properties.html",[103,1.081,1594,2.47]],["body/properties.html",[8,0.016,74,0.015,75,0.015,103,1.455,1638,5.352,1691,6.196]],["title/routes.html",[79,2.657]],["body/routes.html",[8,0.015,74,0.015,75,0.015,79,3.172]],["title/miscellaneous/variables.html",[1623,2.256,1692,3.976]],["body/miscellaneous/variables.html",[8,0.017,30,1.954,74,0.01,75,0.01,83,1.303,94,1.182,102,0.412,114,0.723,119,1.822,120,2.548,121,2.337,122,0.93,125,3.186,129,2.348,186,3.874,219,3.267,238,2.483,257,2.268,258,2.268,260,2.046,262,2.483,263,3.99,265,2.483,266,5.342,268,2.483,271,3.267,273,1.385,274,2.752,275,3.299,278,3.54,279,2.77,303,1.63,338,3.267,345,3.99,383,2.638,405,2.483,407,3.576,408,4.192,409,3.99,410,3.576,411,2.77,412,3.99,413,2.77,414,2.77,415,2.77,444,2.483,456,3.478,523,3.267,531,3.267,537,3.267,541,2.483,603,2.112,630,3.941,631,3.576,776,2.224,896,2.268,932,2.483,1010,3.267,1047,3.576,1107,2.77,1489,3.576,1490,2.483,1502,2.77,1513,2.77,1515,4.677,1538,4.192,1565,5.118,1571,2.77,1572,5.118,1583,2.483,1584,3.576,1585,3.576,1588,2.77,1589,2.77,1590,2.77,1591,3.99,1592,3.99,1623,2.268,1625,2.77,1627,5.425,1692,2.77,1693,4.619,1694,3.206,1695,3.206,1696,7.134,1697,5.414,1698,3.206,1699,3.206,1700,5.414,1701,3.206,1702,5.414,1703,5.414,1704,5.414,1705,5.414,1706,4.619,1707,3.206,1708,4.619,1709,4.619,1710,4.619,1711,3.206,1712,3.206,1713,3.206,1714,3.206,1715,3.206,1716,3.206,1717,4.619,1718,3.206]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1691,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":753,"title":{},"body":{"components/HomeComponent.html":{},"components/TabComponent.html":{}}}],["0.29.0",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["0000001f",{"_index":1125,"title":{},"body":{"components/NavbarComponent.html":{}}}],["00000024",{"_index":1123,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0003",{"_index":1121,"title":{},"body":{"components/NavbarComponent.html":{}}}],["077e8c",{"_index":1254,"title":{},"body":{"components/TabComponent.html":{}}}],["1",{"_index":921,"title":{"components/TaskDialogComponent-1.html":{}},"body":{"components/ManagementTableComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["1.1.19",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":774,"title":{},"body":{"components/HomeComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["1.5rem",{"_index":506,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{}}}],["10",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["10.4.5",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":756,"title":{},"body":{"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["1000",{"_index":1127,"title":{},"body":{"components/NavbarComponent.html":{}}}],["10px",{"_index":802,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["12.1.2",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1685,"title":{},"body":{"overview.html":{}}}],["13.2.0",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["13.3.0",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["13.3.7",{"_index":1639,"title":{},"body":{"index.html":{}}}],["13.3.9",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":933,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["150px",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["15px",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{}}}],["160px",{"_index":1252,"title":{},"body":{"components/TabComponent.html":{}}}],["18",{"_index":1686,"title":{},"body":{"overview.html":{}}}],["180px",{"_index":942,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["18px",{"_index":1124,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1e90ff",{"_index":1350,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["1px",{"_index":511,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["1rem",{"_index":943,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{}}}],["2",{"_index":1131,"title":{},"body":{"components/NavbarComponent.html":{},"overview.html":{}}}],["2.11.5",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["2.28.0",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":323,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["200px",{"_index":1105,"title":{},"body":{"components/NavbarComponent.html":{},"components/TabComponent.html":{}}}],["20px",{"_index":751,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{}}}],["24",{"_index":1690,"title":{},"body":{"overview.html":{}}}],["25",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/ManagementTableComponent.html":{}}}],["2px",{"_index":770,"title":{},"body":{"components/HomeComponent.html":{}}}],["3.5rem",{"_index":769,"title":{},"body":{"components/HomeComponent.html":{}}}],["30",{"_index":941,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["303030",{"_index":1112,"title":{},"body":{"components/NavbarComponent.html":{}}}],["30px",{"_index":772,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{},"components/TaskManagementComponent.html":{}}}],["3px",{"_index":1120,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4",{"_index":1689,"title":{},"body":{"overview.html":{}}}],["40",{"_index":783,"title":{},"body":{"components/HomeComponent.html":{}}}],["400",{"_index":775,"title":{},"body":{"components/HomeComponent.html":{}}}],["400px",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["40px",{"_index":780,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{}}}],["420px",{"_index":742,"title":{},"body":{"components/HomeComponent.html":{}}}],["4caf50",{"_index":1152,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5",{"_index":900,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["5.0.2",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":934,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{},"components/TaskManagementComponent.html":{}}}],["500px",{"_index":1214,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["50px",{"_index":502,"title":{},"body":{"components/CalendarComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{}}}],["55px",{"_index":1133,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5px",{"_index":945,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["60",{"_index":1251,"title":{},"body":{"components/TabComponent.html":{}}}],["600px",{"_index":748,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["607d8b",{"_index":1149,"title":{},"body":{"components/NavbarComponent.html":{}}}],["60px",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["62c4535ce7fcd8b34b2bd89a",{"_index":1495,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["673ab7",{"_index":1147,"title":{},"body":{"components/NavbarComponent.html":{}}}],["6px",{"_index":1122,"title":{},"body":{"components/NavbarComponent.html":{}}}],["7.0.1",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":508,"title":{},"body":{"components/CalendarComponent.html":{}}}],["8",{"_index":1688,"title":{},"body":{"overview.html":{}}}],["80",{"_index":750,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{}}}],["9",{"_index":1687,"title":{},"body":{"overview.html":{}}}],["90",{"_index":499,"title":{},"body":{"components/CalendarComponent.html":{},"components/ManagementTableComponent.html":{}}}],["900",{"_index":771,"title":{},"body":{"components/HomeComponent.html":{}}}],["960px",{"_index":1134,"title":{},"body":{"components/NavbarComponent.html":{}}}],["9])(?=.*?\\w",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["9c27b0",{"_index":1151,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_id",{"_index":717,"title":{},"body":{"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{}}}],["_ngzone",{"_index":1334,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["_snackbar",{"_index":288,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["a.active",{"_index":1153,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a11ylabel",{"_index":1433,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["a:hover",{"_index":1154,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a:not(:last",{"_index":1155,"title":{},"body":{"components/NavbarComponent.html":{}}}],["absolute",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/TabComponent.html":{}}}],["action",{"_index":275,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["action.type",{"_index":277,"title":{},"body":{"interfaces/AppState.html":{}}}],["action.user",{"_index":412,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["actionreducer",{"_index":261,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":262,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskManagementComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["actions.ts",{"_index":1565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions/auth",{"_index":318,"title":{},"body":{"injectables/AuthEffects.html":{},"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/NotAuthGuard.html":{},"guards/UsersResolver.html":{}}}],["activedayisopen",{"_index":421,"title":{},"body":{"components/CalendarComponent.html":{}}}],["actual_component",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["ad2121",{"_index":1348,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["adapterfactory",{"_index":1232,"title":{},"body":{"modules/SharedModule.html":{}}}],["adapters/date",{"_index":1234,"title":{},"body":{"modules/SharedModule.html":{}}}],["add",{"_index":973,"title":{},"body":{"injectables/ManagerTaskDataService.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"injectables/UserDataService.html":{},"index.html":{}}}],["add(entity",{"_index":975,"title":{},"body":{"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["add(this.signupform.value",{"_index":1197,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["addevent",{"_index":1423,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["address",{"_index":801,"title":{},"body":{"components/InputComponent.html":{}}}],["admin",{"_index":30,"title":{},"body":{"modules/AdminModule.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"modules/ViewRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["admin.guard",{"_index":1550,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["admin.guard.ts",{"_index":515,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"coverage.html":{}}}],["admin.guard.ts:11",{"_index":517,"title":{},"body":{"guards/CanLoadAdminGuard.html":{}}}],["admin.guard.ts:14",{"_index":521,"title":{},"body":{"guards/CanLoadAdminGuard.html":{}}}],["adminmodule",{"_index":1,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":14,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["afterend",{"_index":1269,"title":{},"body":{"interfaces/Task.html":{}}}],["align",{"_index":759,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskManagementComponent.html":{}}}],["allday",{"_index":1262,"title":{},"body":{"interfaces/Task.html":{}}}],["amber",{"_index":1074,"title":{},"body":{"components/NavbarComponent.html":{}}}],["angular",{"_index":469,"title":{},"body":{"components/CalendarComponent.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["angular/cdk/text",{"_index":962,"title":{},"body":{"modules/ManagerModule.html":{},"components/TaskDialogComponent-1.html":{}}}],["angular/common",{"_index":29,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["angular/compiler",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":27,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":49,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"modules/ManagerModule.html":{},"injectables/MatchPassword.html":{},"components/RegisterUserComponent.html":{},"modules/SharedModule.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":38,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":58,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":964,"title":{},"body":{"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"components/TaskDialogComponent-1.html":{}}}],["angular/material/datepicker",{"_index":71,"title":{},"body":{"modules/AdminModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":67,"title":{},"body":{"modules/AdminModule.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"components/NavbarComponent.html":{},"modules/SharedModule.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["angular/material/form",{"_index":45,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{}}}],["angular/material/icon",{"_index":53,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":51,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":60,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{}}}],["angular/material/sidenav",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":312,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["angular/material/table",{"_index":36,"title":{},"body":{"modules/AdminModule.html":{}}}],["angular/material/tabs",{"_index":1229,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/ManagerModule.html":{}}}],["angular/platform",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":80,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"modules/EmployeeRoutingModule.html":{},"guards/EmployeeTasksResolver.html":{},"components/LoginComponent.html":{},"modules/ManagerRoutingModule.html":{},"guards/ManagerTasksResolver.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"guards/UsersResolver.html":{},"modules/ViewRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["app.component",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":87,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1647,"title":{},"body":{"index.html":{}}}],["applied",{"_index":1378,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["appmodule",{"_index":181,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":187,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":128,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"coverage.html":{}}}],["args",{"_index":1218,"title":{},"body":{"pipes/SearchFilterPipe.html":{}}}],["args.tolowercase",{"_index":1220,"title":{},"body":{"pipes/SearchFilterPipe.html":{}}}],["artifacts",{"_index":1657,"title":{},"body":{"index.html":{}}}],["assign?.title",{"_index":1247,"title":{},"body":{"components/TabComponent.html":{}}}],["assigned",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{},"components/TabComponent.html":{}}}],["assigneduser",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["async",{"_index":1096,"title":{},"body":{"components/NavbarComponent.html":{}}}],["auth",{"_index":258,"title":{},"body":{"interfaces/AppState.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":363,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["auth.guard.ts",{"_index":1158,"title":{},"body":{"guards/NotAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:17",{"_index":1159,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["auth.guard.ts:19",{"_index":1160,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["auth/actions/auth",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["auth/auth.module",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/reducers",{"_index":269,"title":{},"body":{"interfaces/AppState.html":{},"components/NavbarComponent.html":{}}}],["auth/selectors/auth.selectors",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{}}}],["auth0/angular",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["authactions",{"_index":317,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["autheffects",{"_index":283,"title":{"injectables/AuthEffects.html":{}},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authfeaturekey",{"_index":407,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":247,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":188,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authreducer",{"_index":410,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authroutingmodule",{"_index":350,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":367,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{}}}],["authstate",{"_index":260,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstate.user",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":501,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent.html":{}}}],["automatically",{"_index":1648,"title":{},"body":{"index.html":{}}}],["autoprefixer",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["autosize",{"_index":1318,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["available",{"_index":1684,"title":{},"body":{"modules.html":{}}}],["background",{"_index":738,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{}}}],["background::before",{"_index":743,"title":{},"body":{"components/HomeComponent.html":{}}}],["bar",{"_index":313,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["beforestart",{"_index":1268,"title":{},"body":{"interfaces/Task.html":{}}}],["behaviorsubject",{"_index":708,"title":{},"body":{"components/HomeComponent.html":{}}}],["behaviorsubject(this.selectedemail",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{}}}],["between",{"_index":950,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["birth",{"_index":1206,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["blue",{"_index":1082,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["bluegrey",{"_index":1148,"title":{},"body":{"components/NavbarComponent.html":{}}}],["body",{"_index":1070,"title":{},"body":{"components/NavbarComponent.html":{}}}],["body.classlist.add(themename",{"_index":1084,"title":{},"body":{"components/NavbarComponent.html":{}}}],["body.classlist.remove('deep",{"_index":1087,"title":{},"body":{"components/NavbarComponent.html":{}}}],["body.classlist.remove('indigo",{"_index":1079,"title":{},"body":{"components/NavbarComponent.html":{}}}],["body.classlist.remove('pink",{"_index":1081,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bold",{"_index":1419,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["boolean",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{},"interfaces/Task.html":{},"guards/UsersResolver.html":{}}}],["bootstrap",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":1110,"title":{},"body":{"components/NavbarComponent.html":{},"components/TabComponent.html":{},"components/TaskManagementComponent.html":{}}}],["bottom",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["box",{"_index":1118,"title":{},"body":{"components/NavbarComponent.html":{}}}],["break",{"_index":1069,"title":{},"body":{"components/NavbarComponent.html":{}}}],["breakpointobserver",{"_index":1017,"title":{},"body":{"components/NavbarComponent.html":{}}}],["breakpoints",{"_index":1045,"title":{},"body":{"components/NavbarComponent.html":{}}}],["browse",{"_index":1682,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1656,"title":{},"body":{"index.html":{}}}],["button",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskManagementComponent.html":{}}}],["button.mat",{"_index":1115,"title":{},"body":{"components/NavbarComponent.html":{}}}],["calendar",{"_index":418,"title":{},"body":{"components/CalendarComponent.html":{},"modules/SharedModule.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"dependencies.html":{}}}],["calendar'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["calendar.component",{"_index":605,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{}}}],["calendar.component.html",{"_index":420,"title":{},"body":{"components/CalendarComponent.html":{},"components/TaskCalendarComponent.html":{}}}],["calendar.component.scss",{"_index":419,"title":{},"body":{"components/CalendarComponent.html":{},"components/TaskCalendarComponent.html":{}}}],["calendar.component.ts",{"_index":1271,"title":{},"body":{"components/TaskCalendarComponent.html":{},"coverage.html":{}}}],["calendar.component.ts:16",{"_index":1276,"title":{},"body":{"components/TaskCalendarComponent.html":{}}}],["calendar.component.ts:23",{"_index":1280,"title":{},"body":{"components/TaskCalendarComponent.html":{}}}],["calendar.component.ts:62",{"_index":1279,"title":{},"body":{"components/TaskCalendarComponent.html":{}}}],["calendar.component.ts:66",{"_index":1281,"title":{},"body":{"components/TaskCalendarComponent.html":{}}}],["calendar.component.ts:68",{"_index":1278,"title":{},"body":{"components/TaskCalendarComponent.html":{}}}],["calendar/calendar.component",{"_index":1235,"title":{},"body":{"modules/SharedModule.html":{}}}],["calendar/date",{"_index":1233,"title":{},"body":{"modules/SharedModule.html":{}}}],["calendar/task",{"_index":604,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"components/TaskCalendarComponent.html":{},"coverage.html":{}}}],["calendarcomponent",{"_index":154,"title":{"components/CalendarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendardate",{"_index":492,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarevent",{"_index":438,"title":{},"body":{"components/CalendarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["calendareventaction",{"_index":1432,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["calendareventtimeschangedevent",{"_index":447,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarmodule",{"_index":1230,"title":{},"body":{"modules/SharedModule.html":{}}}],["calendarmodule.forroot",{"_index":1237,"title":{},"body":{"modules/SharedModule.html":{}}}],["calendarview",{"_index":422,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarview.month",{"_index":463,"title":{},"body":{"components/CalendarComponent.html":{}}}],["canactivate",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"guards/NotAuthGuard.html":{}}}],["canactivate(route",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{}}}],["cancel",{"_index":592,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["canload",{"_index":516,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"modules/ViewRoutingModule.html":{}}}],["canload(route",{"_index":518,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{}}}],["canloadadminguard",{"_index":512,"title":{"guards/CanLoadAdminGuard.html":{}},"body":{"guards/CanLoadAdminGuard.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{}}}],["canloademployeeguard",{"_index":526,"title":{"guards/CanLoadEmployeeGuard.html":{}},"body":{"guards/CanLoadEmployeeGuard.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{}}}],["canloadmanagerguard",{"_index":533,"title":{"guards/CanLoadManagerGuard.html":{}},"body":{"guards/CanLoadManagerGuard.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{}}}],["capabilities",{"_index":1674,"title":{},"body":{"index.html":{}}}],["card",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["case",{"_index":1067,"title":{},"body":{"components/NavbarComponent.html":{}}}],["catcherror",{"_index":561,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["catcherror((err",{"_index":576,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["cdktextareaautosize",{"_index":1341,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["center",{"_index":761,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskManagementComponent.html":{}}}],["change",{"_index":1100,"title":{},"body":{"components/NavbarComponent.html":{},"components/UpdateModalComponent.html":{},"index.html":{}}}],["changecredentials",{"_index":1014,"title":{},"body":{"components/NavbarComponent.html":{}}}],["changedetectionstrategy",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{}}}],["changepassword",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["changepassword(data",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["changes",{"_index":1377,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["changetheme",{"_index":1015,"title":{},"body":{"components/NavbarComponent.html":{}}}],["changetheme(themename",{"_index":1021,"title":{},"body":{"components/NavbarComponent.html":{}}}],["characters",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["check",{"_index":1678,"title":{},"body":{"index.html":{}}}],["child",{"_index":1156,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["choice",{"_index":1670,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1205,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["class",{"_index":73,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["cli",{"_index":1637,"title":{},"body":{"index.html":{}}}],["click",{"_index":589,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["clicked",{"_index":1289,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["close",{"_index":1315,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["closeopenmonthviewday",{"_index":427,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cluster_adminmodule",{"_index":4,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":5,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":6,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":594,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_declarations",{"_index":597,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_imports",{"_index":595,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_providers",{"_index":596,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_managermodule",{"_index":952,"title":{},"body":{"modules/ManagerModule.html":{},"overview.html":{}}}],["cluster_managermodule_declarations",{"_index":954,"title":{},"body":{"modules/ManagerModule.html":{},"overview.html":{}}}],["cluster_managermodule_imports",{"_index":955,"title":{},"body":{"modules/ManagerModule.html":{},"overview.html":{}}}],["cluster_managermodule_providers",{"_index":953,"title":{},"body":{"modules/ManagerModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1223,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1224,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1225,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_viewmodule",{"_index":1528,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["cluster_viewmodule_declarations",{"_index":1529,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["cluster_viewmodule_imports",{"_index":1530,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["cluster_viewmodule_providers",{"_index":1531,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["code",{"_index":1651,"title":{},"body":{"index.html":{}}}],["color",{"_index":765,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["colors",{"_index":1319,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["column",{"_index":779,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["combinelatest",{"_index":709,"title":{},"body":{"components/HomeComponent.html":{}}}],["command",{"_index":1671,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":28,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{}}}],["company",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{}}}],["comparetasks",{"_index":1585,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["comparetasks(t1",{"_index":1628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete",{"_index":582,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["complete?.title",{"_index":1248,"title":{},"body":{"components/TabComponent.html":{}}}],["completed",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent.html":{}}}],["completeduser",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{}}}],["compodoc/compodoc",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}},"body":{"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeRoutingModule.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerRoutingModule.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["components",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"overview.html":{}}}],["components/datetime",{"_index":968,"title":{},"body":{"modules/ManagerModule.html":{},"dependencies.html":{}}}],["config",{"_index":908,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{}}}],["config.ts",{"_index":1578,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirm",{"_index":591,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["confirmation",{"_index":1210,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["confirmpassword",{"_index":1001,"title":{},"body":{"injectables/MatchPassword.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["connect",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["const",{"_index":81,"title":{},"body":{"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"modules/EmployeeRoutingModule.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerRoutingModule.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{},"modules/ViewRoutingModule.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{}}}],["constructor(actions",{"_index":287,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(breakpointobserver",{"_index":1016,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(data",{"_index":1295,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["constructor(dialog",{"_index":1274,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/UpdateModalComponent.html":{}}}],["constructor(dialogref",{"_index":548,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/UpdateInfoComponent.html":{}}}],["constructor(employeetasksentityservice",{"_index":689,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(fb",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UserCredentialsComponent.html":{}}}],["constructor(http",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["constructor(private",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/NotAuthGuard.html":{},"guards/UsersResolver.html":{}}}],["constructor(serviceelementsfactory",{"_index":647,"title":{},"body":{"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskEntityService.html":{},"injectables/UserEntityService.html":{}}}],["constructor(store",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"guards/NotAuthGuard.html":{}}}],["constructor(taskentityservice",{"_index":653,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{}}}],["constructor(tasksentityservice",{"_index":1424,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["constructor(userentityservice",{"_index":881,"title":{},"body":{"components/ManagementTableComponent.html":{},"guards/UsersResolver.html":{}}}],["contain",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["container",{"_index":497,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["content",{"_index":744,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["content:not(:last",{"_index":1416,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["context",{"_index":1591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":787,"title":{},"body":{"components/InputComponent.html":{}}}],["course",{"_index":1441,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["coverage",{"_index":1560,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1189,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["createaction",{"_index":263,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["createaction('[logout",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":1199,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["createeffect",{"_index":294,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["createfeatureselector",{"_index":264,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["createfeatureselector(authfeaturekey",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":265,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":266,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["createselector(isloggedin",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["credentials.component",{"_index":1055,"title":{},"body":{"components/NavbarComponent.html":{},"modules/SharedModule.html":{}}}],["credentials.component.html",{"_index":1474,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.scss",{"_index":1473,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts",{"_index":1472,"title":{},"body":{"components/UserCredentialsComponent.html":{},"coverage.html":{}}}],["credentials.component.ts:151",{"_index":1479,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:153",{"_index":1478,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:24",{"_index":1488,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:26",{"_index":1482,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:28",{"_index":1483,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:30",{"_index":1487,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:32",{"_index":1476,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:86",{"_index":1485,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:87",{"_index":1486,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:88",{"_index":1484,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:90",{"_index":1477,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:94",{"_index":1480,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials.component.ts:98",{"_index":1481,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["credentials/user",{"_index":1054,"title":{},"body":{"components/NavbarComponent.html":{},"modules/SharedModule.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{}}}],["cssclass",{"_index":1263,"title":{},"body":{"interfaces/Task.html":{}}}],["current",{"_index":1499,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["currentpassword",{"_index":1491,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["cursor",{"_index":1138,"title":{},"body":{"components/NavbarComponent.html":{}}}],["d1e8ff",{"_index":1351,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["d9512c",{"_index":1258,"title":{},"body":{"components/TabComponent.html":{}}}],["data",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["data.dialogtitle",{"_index":568,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["data.event",{"_index":1303,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["data.filter",{"_index":1512,"title":{},"body":{"injectables/UserDataService.html":{}}}],["data.filter((task",{"_index":722,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.filter((user",{"_index":1516,"title":{},"body":{"injectables/UserDataService.html":{}}}],["data.mode",{"_index":572,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["data.newpassword",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.password",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.service",{"_index":612,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/ViewModule.html":{}}}],["data.service.ts",{"_index":615,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{},"coverage.html":{}}}],["data.service.ts:12",{"_index":1503,"title":{},"body":{"injectables/UserDataService.html":{}}}],["data.service.ts:16",{"_index":974,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["data.service.ts:24",{"_index":621,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{}}}],["data.service.ts:28",{"_index":1506,"title":{},"body":{"injectables/UserDataService.html":{}}}],["data.service.ts:30",{"_index":1505,"title":{},"body":{"injectables/UserDataService.html":{}}}],["data.service.ts:35",{"_index":984,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["data.service.ts:37",{"_index":982,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["data.service.ts:39",{"_index":981,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["data.service.ts:45",{"_index":983,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["data.service.ts:46",{"_index":626,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{}}}],["data.service.ts:48",{"_index":622,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{}}}],["data.service.ts:52",{"_index":976,"title":{},"body":{"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["data.service.ts:56",{"_index":979,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["data.service.ts:59",{"_index":1504,"title":{},"body":{"injectables/UserDataService.html":{}}}],["data.service.ts:63",{"_index":625,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["data.service.ts:70",{"_index":623,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{}}}],["data.user",{"_index":570,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["date",{"_index":465,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/RegisterUserComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"dependencies.html":{}}}],["date(end",{"_index":1287,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["date(end).gettime",{"_index":719,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(start",{"_index":1286,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["date(task.end",{"_index":1396,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["date(task.start",{"_index":1395,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dateadapter",{"_index":1231,"title":{},"body":{"modules/SharedModule.html":{}}}],["dateofbirth",{"_index":1194,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{}}}],["datepicker",{"_index":1410,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dates",{"_index":1417,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["day",{"_index":496,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dayclicked",{"_index":428,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dayclicked(undefined",{"_index":443,"title":{},"body":{"components/CalendarComponent.html":{}}}],["db_url",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{}}}],["decoration",{"_index":1137,"title":{},"body":{"components/NavbarComponent.html":{}}}],["decorators",{"_index":1342,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["deep",{"_index":1072,"title":{},"body":{"components/NavbarComponent.html":{}}}],["deeppurple",{"_index":1142,"title":{},"body":{"components/NavbarComponent.html":{}}}],["deeppurpleamber",{"_index":1007,"title":{},"body":{"components/NavbarComponent.html":{}}}],["default",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultdataservice",{"_index":617,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{}}}],["defaultdataserviceconfig",{"_index":1535,"title":{},"body":{"modules/ViewModule.html":{}}}],["defaultdialogconfig",{"_index":906,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{}}}],["delay",{"_index":905,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["delete",{"_index":64,"title":{},"body":{"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{}}}],["delete(key",{"_index":978,"title":{},"body":{"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["delete(task.id",{"_index":1404,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["delete(this.user",{"_index":574,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["deleteaccount",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccount(userid",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleted",{"_index":585,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["deletemodalcomponent",{"_index":7,"title":{"components/DeleteModalComponent.html":{}},"body":{"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deleteuser",{"_index":878,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["deleteuser(user",{"_index":885,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["deleting",{"_index":587,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1264,"title":{},"body":{"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["destroy",{"_index":423,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["dev",{"_index":1644,"title":{},"body":{"index.html":{}}}],["development",{"_index":1640,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dialog",{"_index":882,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dialog'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["dialog.component",{"_index":607,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["dialog.component.html",{"_index":1294,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["dialog.component.scss",{"_index":1293,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts",{"_index":1292,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"coverage.html":{}}}],["dialog.component.ts:13",{"_index":1300,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:133",{"_index":1338,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:14",{"_index":1301,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:140",{"_index":1337,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:144",{"_index":1339,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:148",{"_index":1340,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:15",{"_index":1296,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1298,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1299,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1344,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:40",{"_index":1297,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:46",{"_index":1355,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:60",{"_index":1360,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:62",{"_index":1356,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:64",{"_index":1371,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:66",{"_index":1364,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:68",{"_index":1361,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:70",{"_index":1373,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:72",{"_index":1374,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:74",{"_index":1357,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:75",{"_index":1367,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:76",{"_index":1366,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:77",{"_index":1372,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:78",{"_index":1359,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:79",{"_index":1363,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:80",{"_index":1362,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:81",{"_index":1368,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:82",{"_index":1369,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:83",{"_index":1370,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:84",{"_index":1346,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:85",{"_index":1358,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:86",{"_index":1365,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog.component.ts:87",{"_index":1336,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dialog/task",{"_index":606,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"coverage.html":{}}}],["dialogconfig",{"_index":926,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{}}}],["dialogconfig.data",{"_index":927,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{}}}],["dialogref",{"_index":552,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["dialogtitle",{"_index":544,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["diploma",{"_index":299,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["direction",{"_index":778,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["directive",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["directives",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1655,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1660,"title":{},"body":{"index.html":{}}}],["disableclose",{"_index":929,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{}}}],["disabled",{"_index":1320,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["disableminute",{"_index":1321,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["dispatch",{"_index":302,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["display",{"_index":757,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["displayedcolumns",{"_index":872,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["dist",{"_index":1659,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":628,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["docs",{"_index":754,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["document.getelementsbytagname('body')[0",{"_index":1071,"title":{},"body":{"components/NavbarComponent.html":{}}}],["documentation",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["draggable",{"_index":1265,"title":{},"body":{"interfaces/Task.html":{}}}],["duration",{"_index":322,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["dynamic",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":636,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{}}}],["e2e",{"_index":1668,"title":{},"body":{"index.html":{}}}],["e3bc08",{"_index":1353,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["e91e63",{"_index":1150,"title":{},"body":{"components/NavbarComponent.html":{}}}],["edit",{"_index":896,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{},"miscellaneous/variables.html":{}}}],["edited",{"_index":1440,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["edituser",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"components/UserCredentialsComponent.html":{}}}],["edituser(user",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["eds",{"_index":1542,"title":{},"body":{"modules/ViewModule.html":{}}}],["eds.registermetadatamap(entitymetadatamap",{"_index":1546,"title":{},"body":{"modules/ViewModule.html":{}}}],["effects/auth.effects",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["effectsmodule.forfeature([autheffects",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodule.forroot",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["element?._id",{"_index":935,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["element?.email",{"_index":936,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["element?.firstname",{"_index":937,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["element?.lastname",{"_index":938,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["element?.role",{"_index":939,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["email",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"interfaces/User.html":{}}}],["emitchildevent",{"_index":1272,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["emitchildevent(undefined",{"_index":1277,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["emitclickevent",{"_index":436,"title":{},"body":{"components/CalendarComponent.html":{}}}],["employee",{"_index":603,"title":{},"body":{"modules/EmployeeModule.html":{},"injectables/EmployeeTaskDataService.html":{},"guards/EmployeeTasksResolver.html":{},"components/HomeComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["employee.guard",{"_index":1552,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["employee.guard.ts",{"_index":528,"title":{},"body":{"guards/CanLoadEmployeeGuard.html":{},"coverage.html":{}}}],["employee.guard.ts:11",{"_index":529,"title":{},"body":{"guards/CanLoadEmployeeGuard.html":{}}}],["employee.guard.ts:14",{"_index":530,"title":{},"body":{"guards/CanLoadEmployeeGuard.html":{}}}],["employeemodule",{"_index":593,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["employeeroutingmodule",{"_index":598,"title":{"modules/EmployeeRoutingModule.html":{}},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["employeetaskdataservice",{"_index":599,"title":{"injectables/EmployeeTaskDataService.html":{}},"body":{"modules/EmployeeModule.html":{},"injectables/EmployeeTaskDataService.html":{},"modules/ViewModule.html":{},"coverage.html":{},"overview.html":{}}}],["employeetaskentityservice",{"_index":600,"title":{"injectables/EmployeeTaskEntityService.html":{}},"body":{"modules/EmployeeModule.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"components/HomeComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"modules/ViewModule.html":{},"coverage.html":{},"overview.html":{}}}],["employeetasksdataservice",{"_index":1545,"title":{},"body":{"modules/ViewModule.html":{}}}],["employeetasksentityservice",{"_index":692,"title":{},"body":{"components/HomeComponent.html":{}}}],["employeetasksentityservice.entities",{"_index":714,"title":{},"body":{"components/HomeComponent.html":{}}}],["employeetasksresolver",{"_index":608,"title":{"guards/EmployeeTasksResolver.html":{}},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"guards/EmployeeTasksResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{}}}],["enablemeridian",{"_index":1322,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["end",{"_index":485,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"index.html":{}}}],["enter",{"_index":798,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["entity",{"_index":977,"title":{},"body":{"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{},"modules/ViewModule.html":{}}}],["entity.service",{"_index":565,"title":{},"body":{"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"guards/EmployeeTasksResolver.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"guards/ManagerTasksResolver.html":{},"components/RegisterUserComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{}}}],["entity.service.ts",{"_index":645,"title":{},"body":{"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskEntityService.html":{},"injectables/UserEntityService.html":{},"coverage.html":{}}}],["entity.service.ts:10",{"_index":1520,"title":{},"body":{"injectables/UserEntityService.html":{}}}],["entity.service.ts:9",{"_index":649,"title":{},"body":{"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskEntityService.html":{}}}],["entitycache",{"_index":259,"title":{},"body":{"interfaces/AppState.html":{}}}],["entitycollectionservicebase",{"_index":646,"title":{},"body":{"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskEntityService.html":{},"injectables/UserEntityService.html":{}}}],["entitycollectionserviceelementsfactory",{"_index":648,"title":{},"body":{"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskEntityService.html":{},"injectables/UserEntityService.html":{}}}],["entitydatamodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["entitydatamodule.forroot",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["entitydataservice",{"_index":1536,"title":{},"body":{"modules/ViewModule.html":{}}}],["entitydataservice.registerservices",{"_index":1547,"title":{},"body":{"modules/ViewModule.html":{}}}],["entitydefinitionservice",{"_index":1537,"title":{},"body":{"modules/ViewModule.html":{}}}],["entitydispatcheroptions",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitymetadatamap",{"_index":1538,"title":{},"body":{"modules/ViewModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{}}}],["err",{"_index":577,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["error",{"_index":580,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["event",{"_index":450,"title":{},"body":{"components/CalendarComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["eventemitter",{"_index":440,"title":{},"body":{"components/CalendarComponent.html":{}}}],["events",{"_index":434,"title":{},"body":{"components/CalendarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["events.length",{"_index":478,"title":{},"body":{"components/CalendarComponent.html":{}}}],["eventtimeschanged",{"_index":429,"title":{},"body":{"components/CalendarComponent.html":{}}}],["eventtimeschanged(undefined",{"_index":446,"title":{},"body":{"components/CalendarComponent.html":{}}}],["example",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{}}}],["execute",{"_index":1665,"title":{},"body":{"index.html":{}}}],["export",{"_index":72,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["exports",{"_index":86,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ViewRoutingModule.html":{}}}],["extends",{"_index":616,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{}}}],["f29339",{"_index":1256,"title":{},"body":{"components/TabComponent.html":{}}}],["facecreate",{"_index":1094,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fae3e3",{"_index":1349,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["fafafa",{"_index":1145,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fail?.title",{"_index":1249,"title":{},"body":{"components/TabComponent.html":{}}}],["failed",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{},"components/TabComponent.html":{}}}],["faileduser",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{}}}],["false",{"_index":303,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CalendarComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["fb.group",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["fdf1ba",{"_index":1354,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["female",{"_index":1209,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["ffc107",{"_index":1146,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fff",{"_index":766,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["fi",{"_index":985,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["field",{"_index":46,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"components/InputComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"components/TaskDialogComponent-1.html":{},"modules/ViewModule.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{}}}],["files",{"_index":1650,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1144,"title":{},"body":{"components/NavbarComponent.html":{}}}],["filter",{"_index":658,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"components/ManagementTableComponent.html":{},"guards/ManagerTasksResolver.html":{},"guards/UsersResolver.html":{}}}],["filter((loaded",{"_index":664,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/UsersResolver.html":{}}}],["filter.pipe",{"_index":43,"title":{},"body":{"modules/AdminModule.html":{}}}],["filter.pipe.ts",{"_index":1216,"title":{},"body":{"pipes/SearchFilterPipe.html":{},"coverage.html":{}}}],["filter.pipe.ts:7",{"_index":1219,"title":{},"body":{"pipes/SearchFilterPipe.html":{}}}],["filterstate",{"_index":669,"title":{},"body":{"pipes/FilterStatePipe.html":{}}}],["filterstatepipe",{"_index":665,"title":{"pipes/FilterStatePipe.html":{}},"body":{"pipes/FilterStatePipe.html":{},"modules/ViewModule.html":{},"coverage.html":{},"overview.html":{}}}],["first",{"_index":659,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"components/ManagementTableComponent.html":{},"guards/ManagerTasksResolver.html":{},"guards/UsersResolver.html":{},"index.html":{}}}],["firstname",{"_index":1191,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{}}}],["fix",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["fixed",{"_index":1130,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flex",{"_index":758,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["fns",{"_index":472,"title":{},"body":{"components/CalendarComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["fns/locale",{"_index":986,"title":{},"body":{"injectables/ManagerTaskDataService.html":{},"components/TaskDialogComponent-1.html":{}}}],["font",{"_index":504,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["form",{"_index":803,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["format_color_fill",{"_index":1097,"title":{},"body":{"components/NavbarComponent.html":{}}}],["formbuilder",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["formcontrol",{"_index":792,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["formcontrols",{"_index":1385,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["formgroup",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["formgroup.value",{"_index":1002,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["formsmodule",{"_index":47,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":1167,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["found.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{}}}],["found.component.html",{"_index":1169,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1168,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1166,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1171,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1170,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["fromauth",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{}}}],["fromauth.authreducer",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{}}}],["full",{"_index":366,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["function",{"_index":270,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{}}}],["functions",{"_index":1624,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1675,"title":{},"body":{"index.html":{}}}],["gap",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["gender",{"_index":1193,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{}}}],["generate",{"_index":1653,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1636,"title":{},"body":{"index.html":{}}}],["getall",{"_index":618,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["getcontrol",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["getcontrol(value",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["getloggeduserdata",{"_index":630,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{},"injectables/UserDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":1632,"title":{"index.html":{}},"body":{}}],["getwithquery",{"_index":913,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["go",{"_index":1677,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1683,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1088,"title":{},"body":{"components/NavbarComponent.html":{}}}],["grey",{"_index":1083,"title":{},"body":{"components/NavbarComponent.html":{}}}],["group",{"_index":1250,"title":{},"body":{"components/TabComponent.html":{}}}],["guard",{"_index":324,"title":{"guards/AuthGuard.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/NotAuthGuard.html":{},"guards/UsersResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/NotAuthGuard.html":{},"guards/UsersResolver.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/not",{"_index":362,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["guards/users/admin/can",{"_index":1549,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["guards/users/can",{"_index":1551,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["h1",{"_index":768,"title":{},"body":{"components/HomeComponent.html":{}}}],["h2",{"_index":773,"title":{},"body":{"components/HomeComponent.html":{}}}],["h3",{"_index":503,"title":{},"body":{"components/CalendarComponent.html":{}}}],["handleevent",{"_index":430,"title":{},"body":{"components/CalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["handleevent(action",{"_index":449,"title":{},"body":{"components/CalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["header",{"_index":737,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{}}}],["header.docs",{"_index":736,"title":{},"body":{"components/HomeComponent.html":{}}}],["header:not(:last",{"_index":1415,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["headline",{"_index":763,"title":{},"body":{"components/HomeComponent.html":{}}}],["height",{"_index":741,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskManagementComponent.html":{}}}],["help",{"_index":1676,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":739,"title":{},"body":{"components/HomeComponent.html":{}}}],["hide",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["hideconfirm",{"_index":1177,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["hidecurrentpassword",{"_index":1475,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["hidepassword",{"_index":1178,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["hidetime",{"_index":1323,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["home",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"modules/ViewRoutingModule.html":{}}}],["home'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["home.component.html",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":1534,"title":{},"body":{"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["homecomponent",{"_index":157,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["homeemployee",{"_index":1095,"title":{},"body":{"components/NavbarComponent.html":{}}}],["homehome",{"_index":1091,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hometask",{"_index":1092,"title":{},"body":{"components/NavbarComponent.html":{}}}],["homeuser",{"_index":1093,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["http",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["http://localhost:3000/api",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserDataService.html":{}}}],["http://localhost:3000/api/task/${update.id",{"_index":643,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{}}}],["http://localhost:3000/api/tasks/employee/${this.user?.email",{"_index":639,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{}}}],["http://localhost:3000/api/tasks/manager/${this.uid",{"_index":990,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["http://localhost:3000/api/user/${update.id",{"_index":1517,"title":{},"body":{"injectables/UserDataService.html":{}}}],["http://localhost:3000/api/users/employee/${this.userdata?._id",{"_index":1510,"title":{},"body":{"injectables/UserDataService.html":{}}}],["http://localhost:4200",{"_index":1646,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["httpclientmodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["httpurlgenerator",{"_index":620,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["httpurlgenerator.entityresource('user",{"_index":1507,"title":{},"body":{"injectables/UserDataService.html":{}}}],["icon",{"_index":944,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{}}}],["icon.ng",{"_index":1411,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["icon.theme",{"_index":1141,"title":{},"body":{"components/NavbarComponent.html":{}}}],["iconname",{"_index":788,"title":{},"body":{"components/InputComponent.html":{}}}],["id",{"_index":893,"title":{},"body":{"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["identifier",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["ievent",{"_index":483,"title":{},"body":{"components/CalendarComponent.html":{}}}],["image",{"_index":745,"title":{},"body":{"components/HomeComponent.html":{},"components/TabComponent.html":{}}}],["image.assigned",{"_index":1255,"title":{},"body":{"components/TabComponent.html":{}}}],["image.completed",{"_index":1253,"title":{},"body":{"components/TabComponent.html":{}}}],["image.failed",{"_index":1257,"title":{},"body":{"components/TabComponent.html":{}}}],["image.svg",{"_index":747,"title":{},"body":{"components/HomeComponent.html":{},"components/TabComponent.html":{}}}],["image::before",{"_index":1259,"title":{},"body":{"components/TabComponent.html":{}}}],["implements",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"guards/UsersResolver.html":{},"index.html":{}}}],["import",{"_index":25,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["import('./admin/admin.module').then((m",{"_index":1554,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["import('./employee/employee.module').then((m",{"_index":1558,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["import('./manager/manager.module').then((m",{"_index":1556,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["import('./view/view.module').then((m",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1135,"title":{},"body":{"components/NavbarComponent.html":{}}}],["imports",{"_index":24,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["index",{"_index":102,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"guards/EmployeeTasksResolver.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"guards/UsersResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indigo",{"_index":1086,"title":{},"body":{"components/NavbarComponent.html":{}}}],["indigopink",{"_index":1008,"title":{},"body":{"components/NavbarComponent.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["info'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["info.component",{"_index":69,"title":{},"body":{"modules/AdminModule.html":{},"components/UpdateModalComponent.html":{}}}],["info.component.html",{"_index":1445,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.scss",{"_index":1444,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts",{"_index":1443,"title":{},"body":{"components/UpdateInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:122",{"_index":1450,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:21",{"_index":1453,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:23",{"_index":1456,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:24",{"_index":1457,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1455,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:27",{"_index":1454,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:29",{"_index":1452,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:31",{"_index":1447,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1449,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:76",{"_index":1448,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:80",{"_index":1451,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info/update",{"_index":68,"title":{},"body":{"modules/AdminModule.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"coverage.html":{}}}],["information",{"_index":1290,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{}}}],["inherit",{"_index":781,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["init",{"_index":267,"title":{},"body":{"interfaces/AppState.html":{}}}],["initialauthstate",{"_index":408,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":559,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["inject(mat_dialog_data",{"_index":566,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["injectable",{"_index":282,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"injectables/MatchPassword.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{}},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":284,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"injectables/MatchPassword.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"overview.html":{}}}],["input",{"_index":467,"title":{},"body":{"components/CalendarComponent.html":{},"components/InputComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{}}}],["input'},{'name",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["input.component.html",{"_index":786,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":785,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component",{"_index":1227,"title":{},"body":{"modules/SharedModule.html":{}}}],["inputcomponent",{"_index":159,"title":{"components/InputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":433,"title":{},"body":{"components/CalendarComponent.html":{},"components/InputComponent.html":{},"components/TabComponent.html":{}}}],["inputtype",{"_index":789,"title":{},"body":{"components/InputComponent.html":{}}}],["inserted",{"_index":1413,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["instanceof",{"_index":1068,"title":{},"body":{"components/NavbarComponent.html":{}}}],["interface",{"_index":255,"title":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":256,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/user.interface",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isadmin",{"_index":523,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemployee",{"_index":531,"title":{},"body":{"guards/CanLoadEmployeeGuard.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ishandset",{"_index":1009,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isloggedin",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isloggedout",{"_index":1010,"title":{},"body":{"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ismanager",{"_index":537,"title":{},"body":{"guards/CanLoadManagerGuard.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issameday",{"_index":471,"title":{},"body":{"components/CalendarComponent.html":{}}}],["issameday(this.viewdate",{"_index":476,"title":{},"body":{"components/CalendarComponent.html":{}}}],["issamemonth",{"_index":470,"title":{},"body":{"components/CalendarComponent.html":{}}}],["issamemonth(date",{"_index":474,"title":{},"body":{"components/CalendarComponent.html":{}}}],["item",{"_index":1116,"title":{},"body":{"components/NavbarComponent.html":{},"pipes/SearchFilterPipe.html":{}}}],["items",{"_index":760,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskManagementComponent.html":{}}}],["json.parse(user",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringify(action?.user",{"_index":300,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["json.stringify(item).tolowercase().includes(args",{"_index":1222,"title":{},"body":{"pipes/SearchFilterPipe.html":{}}}],["justify",{"_index":762,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["jwt",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["jwtmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["karma",{"_index":1667,"title":{},"body":{"index.html":{}}}],["key",{"_index":980,"title":{},"body":{"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["label",{"_index":790,"title":{},"body":{"components/InputComponent.html":{},"components/TaskManagementComponent.html":{}}}],["last",{"_index":894,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["lastname",{"_index":1192,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{}}}],["layoutmodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{}}}],["legend",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["letter",{"_index":509,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["link",{"_index":279,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":444,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":514,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/ManagementTableComponent.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{}}}],["loadchildren",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["loaded",{"_index":662,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/UsersResolver.html":{}}}],["loading",{"_index":873,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["loaduserspage",{"_index":879,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["localstorage.getitem('diploma",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["localstorage.removeitem('diploma",{"_index":306,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["localstorage.setitem",{"_index":298,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["localstorage.setitem('diploma",{"_index":1085,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lock",{"_index":1099,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loggedin",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["loggedout",{"_index":1163,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["login",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["login(this.loginform.value",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["login(undefined",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":161,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["logonly",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["logout",{"_index":278,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logoutfunction",{"_index":271,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logoutfunction(reducer",{"_index":1631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logoutlogout",{"_index":1101,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lowercase",{"_index":800,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["m.adminmodule",{"_index":1555,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["m.employeemodule",{"_index":1559,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["m.managermodule",{"_index":1557,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["m.viewmodule",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["male",{"_index":1208,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["management",{"_index":32,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["management'},{'name",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["management.component",{"_index":960,"title":{},"body":{"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{}}}],["management.component.html",{"_index":1422,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.scss",{"_index":1421,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts",{"_index":1420,"title":{},"body":{"components/TaskManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:101",{"_index":1428,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:129",{"_index":1426,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:141",{"_index":1429,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:16",{"_index":1438,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:18",{"_index":1437,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:35",{"_index":1425,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:42",{"_index":1431,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:82",{"_index":1430,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management.component.ts:86",{"_index":1427,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["management/task",{"_index":959,"title":{},"body":{"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"components/TaskManagementComponent.html":{},"coverage.html":{}}}],["managementtablecomponent",{"_index":9,"title":{"components/ManagementTableComponent.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":776,"title":{},"body":{"components/HomeComponent.html":{},"modules/ManagerModule.html":{},"guards/ManagerTasksResolver.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["manager.guard",{"_index":1553,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["manager.guard.ts",{"_index":534,"title":{},"body":{"guards/CanLoadManagerGuard.html":{},"coverage.html":{}}}],["manager.guard.ts:11",{"_index":535,"title":{},"body":{"guards/CanLoadManagerGuard.html":{}}}],["manager.guard.ts:14",{"_index":536,"title":{},"body":{"guards/CanLoadManagerGuard.html":{}}}],["managermodule",{"_index":951,"title":{"modules/ManagerModule.html":{}},"body":{"modules/ManagerModule.html":{},"modules.html":{},"overview.html":{}}}],["managerroutingmodule",{"_index":956,"title":{"modules/ManagerRoutingModule.html":{}},"body":{"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["managertaskdataservice",{"_index":957,"title":{"injectables/ManagerTaskDataService.html":{}},"body":{"modules/ManagerModule.html":{},"injectables/ManagerTaskDataService.html":{},"modules/ViewModule.html":{},"coverage.html":{},"overview.html":{}}}],["managertaskentityservice",{"_index":690,"title":{"injectables/ManagerTaskEntityService.html":{}},"body":{"components/HomeComponent.html":{},"modules/ManagerModule.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"modules/ViewModule.html":{},"coverage.html":{},"overview.html":{}}}],["managertasksdataservice",{"_index":1543,"title":{},"body":{"modules/ViewModule.html":{}}}],["managertasksresolver",{"_index":970,"title":{"guards/ManagerTasksResolver.html":{}},"body":{"modules/ManagerModule.html":{},"guards/ManagerTasksResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{}}}],["map",{"_index":629,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"injectables/UserDataService.html":{},"modules/ViewModule.html":{}}}],["map((data",{"_index":640,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"injectables/UserDataService.html":{}}}],["map((result",{"_index":1032,"title":{},"body":{"components/NavbarComponent.html":{}}}],["map((users",{"_index":917,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["map.ts",{"_index":1584,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":500,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["mark",{"_index":1316,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["mat",{"_index":767,"title":{},"body":{"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["mat_dialog_data",{"_index":560,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["matbuttonmodule",{"_index":40,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":37,"title":{},"body":{"modules/AdminModule.html":{},"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":57,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["match",{"_index":1212,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["matching",{"_index":75,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":993,"title":{"injectables/MatchPassword.html":{}},"body":{"injectables/MatchPassword.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{}}}],["matdatepickermodule",{"_index":70,"title":{},"body":{"modules/AdminModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["matdialog",{"_index":883,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{}}}],["matdialogmodule",{"_index":66,"title":{},"body":{"modules/AdminModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["matdialogref",{"_index":549,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["mateo1234",{"_index":1497,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["mateo12345",{"_index":1496,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["material",{"_index":967,"title":{},"body":{"modules/ManagerModule.html":{},"dependencies.html":{}}}],["matformfieldmodule",{"_index":44,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{}}}],["maticonmodule",{"_index":52,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":50,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":963,"title":{},"body":{"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["matprogressspinnermodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":59,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{}}}],["matsidenavmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":289,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["matsnackbarmodule",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["mattablemodule",{"_index":35,"title":{},"body":{"modules/AdminModule.html":{}}}],["mattabsmodule",{"_index":1228,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/ManagerModule.html":{}}}],["max",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["maxage",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["maxdate",{"_index":1324,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["media",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{}}}],["menu",{"_index":1090,"title":{},"body":{"components/NavbarComponent.html":{}}}],["message",{"_index":293,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["metadata",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"modules/ViewModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["metareducer",{"_index":268,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"guards/UsersResolver.html":{}}}],["middle",{"_index":1109,"title":{},"body":{"components/NavbarComponent.html":{}}}],["min",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{}}}],["mindate",{"_index":1325,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["miscellaneous",{"_index":1623,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm/dd/yyyy",{"_index":1207,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["modal",{"_index":541,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/UpdateModalComponent.html":{},"miscellaneous/variables.html":{}}}],["modal'},{'name",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["modal.component",{"_index":63,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagementTableComponent.html":{}}}],["modal.component.html",{"_index":543,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/UpdateModalComponent.html":{}}}],["modal.component.scss",{"_index":542,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/UpdateModalComponent.html":{}}}],["modal.component.ts",{"_index":540,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/UpdateModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:14",{"_index":556,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["modal.component.ts:16",{"_index":557,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["modal.component.ts:17",{"_index":558,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/UpdateModalComponent.html":{}}}],["modal.component.ts:18",{"_index":551,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["modal.component.ts:19",{"_index":1468,"title":{},"body":{"components/UpdateModalComponent.html":{}}}],["modal.component.ts:20",{"_index":1463,"title":{},"body":{"components/UpdateModalComponent.html":{}}}],["modal.component.ts:31",{"_index":555,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["modal.component.ts:32",{"_index":1467,"title":{},"body":{"components/UpdateModalComponent.html":{}}}],["modal.component.ts:46",{"_index":1466,"title":{},"body":{"components/UpdateModalComponent.html":{}}}],["modal.component.ts:52",{"_index":554,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["modal.component.ts:56",{"_index":553,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["modal.component.ts:60",{"_index":1465,"title":{},"body":{"components/UpdateModalComponent.html":{}}}],["modal.component.ts:64",{"_index":1464,"title":{},"body":{"components/UpdateModalComponent.html":{}}}],["modal/delete",{"_index":65,"title":{},"body":{"modules/AdminModule.html":{},"components/DeleteModalComponent.html":{},"components/ManagementTableComponent.html":{},"coverage.html":{}}}],["modal/update",{"_index":62,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagementTableComponent.html":{},"components/UpdateModalComponent.html":{},"coverage.html":{}}}],["modaldata",{"_index":424,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":545,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["module",{"_index":0,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}},"body":{}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":494,"title":{},"body":{"components/CalendarComponent.html":{}}}],["more",{"_index":940,"title":{},"body":{"components/ManagementTableComponent.html":{},"index.html":{}}}],["name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":1132,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":1004,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["navbar.component.html",{"_index":1006,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1005,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":164,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1645,"title":{},"body":{"index.html":{}}}],["navigatebyurl('/login",{"_index":308,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["navigationcancel",{"_index":1048,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigationend",{"_index":1049,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigationerror",{"_index":1050,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigationstart",{"_index":1051,"title":{},"body":{"components/NavbarComponent.html":{}}}],["need",{"_index":1672,"title":{},"body":{"index.html":{}}}],["new",{"_index":460,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"index.html":{}}}],["newend",{"_index":480,"title":{},"body":{"components/CalendarComponent.html":{}}}],["newpassword",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"components/UserCredentialsComponent.html":{}}}],["newstart",{"_index":479,"title":{},"body":{"components/CalendarComponent.html":{}}}],["next",{"_index":491,"title":{},"body":{"components/CalendarComponent.html":{}}}],["nextpage",{"_index":874,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["ng",{"_index":1607,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngmodule",{"_index":26,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["ngondestroy",{"_index":431,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskManagementComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["ngoninit",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["ngrx/data",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"modules/ViewModule.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":627,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["ngrx/router",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/TaskDialogComponent-1.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"dependencies.html":{}}}],["ngxmatdatetimepickermodule",{"_index":965,"title":{},"body":{"modules/ManagerModule.html":{}}}],["ngxmatnativedatemodule",{"_index":966,"title":{},"body":{"modules/ManagerModule.html":{}}}],["ngzone",{"_index":1335,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["none",{"_index":1114,"title":{},"body":{"components/NavbarComponent.html":{}}}],["noop",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UserCredentialsComponent.html":{}}}],["not(:last",{"_index":1418,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["notauthguard",{"_index":361,"title":{"guards/NotAuthGuard.html":{}},"body":{"modules/AuthRoutingModule.html":{},"guards/NotAuthGuard.html":{},"coverage.html":{}}}],["notfoundcomponent",{"_index":166,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["null",{"_index":276,"title":{},"body":{"interfaces/AppState.html":{},"injectables/MatchPassword.html":{},"pipes/SearchFilterPipe.html":{},"components/TabComponent.html":{}}}],["number",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["object",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/EmployeeTaskDataService.html":{},"guards/EmployeeTasksResolver.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"guards/ManagerTasksResolver.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"injectables/UserDataService.html":{},"guards/UsersResolver.html":{}}}],["observe(breakpoints.handset",{"_index":1031,"title":{},"body":{"components/NavbarComponent.html":{}}}],["oftype",{"_index":314,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authactions.login",{"_index":296,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(logout",{"_index":305,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["ok",{"_index":321,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["on(authactions.login",{"_index":411,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authactions.logout",{"_index":413,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authactions.updateaccount",{"_index":414,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["onclick",{"_index":1434,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["onclose",{"_index":546,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["ondestroy",{"_index":619,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{}}}],["oninfoupdate",{"_index":1446,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["oninit",{"_index":417,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["onpassword",{"_index":1461,"title":{},"body":{"components/UpdateModalComponent.html":{}}}],["onsave",{"_index":547,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UserCredentialsComponent.html":{}}}],["onsubmit",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["ontaskchanges",{"_index":1273,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["onupdate",{"_index":1462,"title":{},"body":{"components/UpdateModalComponent.html":{}}}],["opacity",{"_index":752,"title":{},"body":{"components/HomeComponent.html":{},"components/TabComponent.html":{}}}],["opensnackbar",{"_index":286,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["opensnackbar(message",{"_index":291,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["optimisticdelete",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimisticsaveentities",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimisticupdate",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":948,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["organizer",{"_index":732,"title":{},"body":{"components/HomeComponent.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":1113,"title":{},"body":{"components/NavbarComponent.html":{}}}],["output",{"_index":468,"title":{},"body":{"components/CalendarComponent.html":{}}}],["outputs",{"_index":435,"title":{},"body":{"components/CalendarComponent.html":{}}}],["overflow",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["override",{"_index":637,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["overview",{"_index":1679,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1594,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["page",{"_index":932,"title":{},"body":{"components/ManagementTableComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pagenumber",{"_index":914,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["pagesize",{"_index":875,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{}}}],["password.validator",{"_index":1188,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["password.validator.ts",{"_index":995,"title":{},"body":{"injectables/MatchPassword.html":{},"coverage.html":{}}}],["password.validator.ts:6",{"_index":998,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["password/${data._id",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwords",{"_index":1211,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["passwordsdontmatch",{"_index":999,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["path",{"_index":82,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["pathmatch",{"_index":365,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["picker",{"_index":969,"title":{},"body":{"modules/ManagerModule.html":{},"dependencies.html":{}}}],["pink",{"_index":1080,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pinkbluegrey",{"_index":1011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe",{"_index":575,"title":{"pipes/FilterStatePipe.html":{},"pipes/SearchFilterPipe.html":{}},"body":{"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"coverage.html":{}}}],["pipe(catcherror((err",{"_index":1405,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["pipe(select(getloggeduserdata",{"_index":1062,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe(take(1",{"_index":1383,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["pipe(tap",{"_index":1306,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["pipe(tap((user",{"_index":1063,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe(tap((userlist",{"_index":1390,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["pipe(tap((val",{"_index":1402,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["pipe(tap(console.log",{"_index":1498,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["pipes",{"_index":666,"title":{},"body":{"pipes/FilterStatePipe.html":{},"pipes/SearchFilterPipe.html":{},"overview.html":{}}}],["pipes/filter",{"_index":1540,"title":{},"body":{"modules/ViewModule.html":{}}}],["pipes/search",{"_index":42,"title":{},"body":{"modules/AdminModule.html":{}}}],["pipetransform",{"_index":673,"title":{},"body":{"pipes/FilterStatePipe.html":{},"pipes/SearchFilterPipe.html":{}}}],["platform",{"_index":1669,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1139,"title":{},"body":{"components/NavbarComponent.html":{}}}],["popperjs/core",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{}}}],["previous",{"_index":489,"title":{},"body":{"components/CalendarComponent.html":{}}}],["primary",{"_index":1129,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent-1.html":{}}}],["private",{"_index":319,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/RegisterUserComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"modules/ViewModule.html":{}}}],["production",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1635,"title":{},"body":{"index.html":{}}}],["promise",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/NotAuthGuard.html":{},"guards/UsersResolver.html":{}}}],["properties",{"_index":103,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"properties.html":{}}}],["props",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":1238,"title":{},"body":{"modules/SharedModule.html":{}}}],["providedin",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{}}}],["providers",{"_index":602,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/ViewModule.html":{}}}],["purple",{"_index":1073,"title":{},"body":{"components/NavbarComponent.html":{}}}],["purplegreen",{"_index":1012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["radio_button_checked",{"_index":1102,"title":{},"body":{"components/NavbarComponent.html":{}}}],["radio_button_unchecked",{"_index":1103,"title":{},"body":{"components/NavbarComponent.html":{}}}],["radius",{"_index":1111,"title":{},"body":{"components/NavbarComponent.html":{},"components/TabComponent.html":{},"components/TaskManagementComponent.html":{}}}],["raised",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskManagementComponent.html":{}}}],["reactiveformsmodule",{"_index":48,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{}}}],["red",{"_index":1347,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["redirectto",{"_index":364,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["reducer",{"_index":272,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":281,"title":{},"body":{"interfaces/AppState.html":{}}}],["reducer(undefined",{"_index":280,"title":{},"body":{"interfaces/AppState.html":{}}}],["reducers",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":1680,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":425,"title":{},"body":{"components/CalendarComponent.html":{}}}],["register",{"_index":54,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["registerusercomponent",{"_index":10,"title":{"components/RegisterUserComponent.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["relative",{"_index":740,"title":{},"body":{"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{}}}],["reload",{"_index":1649,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":749,"title":{},"body":{"components/HomeComponent.html":{},"components/TabComponent.html":{}}}],["require",{"_index":1592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":797,"title":{},"body":{"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["resizable",{"_index":1266,"title":{},"body":{"interfaces/Task.html":{}}}],["resize",{"_index":1381,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["resolve",{"_index":652,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/UsersResolver.html":{},"modules/ViewRoutingModule.html":{}}}],["resolve(route",{"_index":656,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/UsersResolver.html":{}}}],["result.matches",{"_index":1033,"title":{},"body":{"components/NavbarComponent.html":{}}}],["results",{"_index":74,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":273,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/EmployeeTaskDataService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/LoginComponent.html":{},"injectables/ManagerTaskDataService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"guards/UsersResolver.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"guards/UsersResolver.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TabComponent.html":{}}}],["role",{"_index":895,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{}}}],["root",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/MatchPassword.html":{},"guards/NotAuthGuard.html":{}}}],["root'},{'name",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["route",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/NotAuthGuard.html":{},"guards/UsersResolver.html":{}}}],["router",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{}}}],["routermodule",{"_index":78,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":85,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstate",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstate.minimal",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{},"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/NotAuthGuard.html":{},"guards/UsersResolver.html":{}}}],["routes",{"_index":79,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/ViewRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":31,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/ViewModule.html":{}}}],["routing.module.ts",{"_index":77,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerRoutingModule.html":{},"modules/ViewRoutingModule.html":{}}}],["row",{"_index":1117,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["run",{"_index":1642,"title":{},"body":{"index.html":{}}}],["running",{"_index":1661,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":316,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"guards/EmployeeTasksResolver.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"guards/ManagerTasksResolver.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"guards/UsersResolver.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1046,"title":{},"body":{"components/NavbarComponent.html":{}}}],["save",{"_index":1408,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["scaffolding",{"_index":1652,"title":{},"body":{"index.html":{}}}],["scale(1.3",{"_index":1414,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["scale(1.5",{"_index":946,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["screen",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["scroll",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["search",{"_index":931,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["searchfilter",{"_index":1217,"title":{},"body":{"pipes/SearchFilterPipe.html":{}}}],["searchfilterpipe",{"_index":11,"title":{"pipes/SearchFilterPipe.html":{}},"body":{"modules/AdminModule.html":{},"pipes/SearchFilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["searchtext",{"_index":876,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["secondary",{"_index":1267,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialogComponent-1.html":{}}}],["section",{"_index":755,"title":{},"body":{"components/HomeComponent.html":{}}}],["segments",{"_index":519,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{}}}],["select",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{}}}],["select(getloggeduserdata",{"_index":634,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/TaskDialogComponent-1.html":{},"injectables/UserDataService.html":{}}}],["select(isloggedin",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select(isloggedout",{"_index":1161,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["select(userid",{"_index":910,"title":{},"body":{"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{}}}],["selectauthstate",{"_index":1572,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1326,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["selectedemail",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectemail",{"_index":631,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectid",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selector",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["selectuserinitials",{"_index":1047,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":1643,"title":{},"body":{"index.html":{}}}],["server",{"_index":1641,"title":{},"body":{"index.html":{}}}],["serviceelementsfactory",{"_index":650,"title":{},"body":{"injectables/EmployeeTaskEntityService.html":{},"injectables/ManagerTaskEntityService.html":{},"injectables/UserEntityService.html":{}}}],["services/employee/employee",{"_index":609,"title":{},"body":{"modules/EmployeeModule.html":{},"components/HomeComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["services/manager/manager",{"_index":711,"title":{},"body":{"components/HomeComponent.html":{},"modules/ManagerModule.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["services/user/user",{"_index":564,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"modules/ViewModule.html":{}}}],["services/user/users.resolver",{"_index":1539,"title":{},"body":{"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["settings",{"_index":1107,"title":{},"body":{"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["setview",{"_index":432,"title":{},"body":{"components/CalendarComponent.html":{}}}],["setview(view",{"_index":454,"title":{},"body":{"components/CalendarComponent.html":{}}}],["shadow",{"_index":1119,"title":{},"body":{"components/NavbarComponent.html":{}}}],["shared/default",{"_index":1052,"title":{},"body":{"components/NavbarComponent.html":{}}}],["shared/shared.module",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{},"modules/ViewModule.html":{}}}],["shared/user",{"_index":1053,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sharedmodule",{"_index":15,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["sharereplay",{"_index":710,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["showseconds",{"_index":1327,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["showspinners",{"_index":1328,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["sidenav",{"_index":1104,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sign",{"_index":1204,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["signup",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(this.signupform.value",{"_index":1200,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["signup(user",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupform",{"_index":1179,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["size",{"_index":505,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["solution",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{}}}],["sortcomparer",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"index.html":{}}}],["space",{"_index":949,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["spacing",{"_index":510,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["span",{"_index":1140,"title":{},"body":{"components/NavbarComponent.html":{}}}],["spec\\.ts",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/ManagerModule.html":{},"components/NavbarComponent.html":{},"modules/SharedModule.html":{}}}],["src/.../auth",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.selectors.ts",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":1626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../entity",{"_index":1625,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1627,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/actions/auth",{"_index":1490,"title":{},"body":{"components/UserCredentialsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth",{"_index":360,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/effects/auth.effects.ts",{"_index":285,"title":{},"body":{"injectables/AuthEffects.html":{},"coverage.html":{}}}],["src/app/auth/effects/auth.effects.ts:10",{"_index":290,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:17",{"_index":304,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:34",{"_index":292,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:37",{"_index":311,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:34",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:35",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:36",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:82",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:86",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:88",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/reducers",{"_index":522,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/TaskDialogComponent-1.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{}}}],["src/app/auth/reducers/index.ts",{"_index":405,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/selectors/auth.selectors",{"_index":524,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/TaskDialogComponent-1.html":{},"injectables/UserDataService.html":{}}}],["src/app/auth/selectors/auth.selectors.ts",{"_index":1571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:17",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:20",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/not",{"_index":1157,"title":{},"body":{"guards/NotAuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/users/admin/can",{"_index":513,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"coverage.html":{}}}],["src/app/guards/users/can",{"_index":527,"title":{},"body":{"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"coverage.html":{}}}],["src/app/interfaces/task.interface",{"_index":632,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["src/app/interfaces/task.interface.ts",{"_index":1261,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/interfaces/user.interface",{"_index":406,"title":{},"body":{"interfaces/AuthState.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{}}}],["src/app/interfaces/user.interface.ts",{"_index":1470,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1003,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:118",{"_index":1036,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:119",{"_index":1038,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:120",{"_index":1029,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:121",{"_index":1039,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:122",{"_index":1028,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:124",{"_index":1022,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:175",{"_index":1024,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:36",{"_index":1040,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:38",{"_index":1027,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:39",{"_index":1026,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:40",{"_index":1041,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:41",{"_index":1042,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:43",{"_index":1034,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:48",{"_index":1018,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:65",{"_index":1043,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:67",{"_index":1044,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:69",{"_index":1019,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:83",{"_index":1020,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:98",{"_index":1025,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/not",{"_index":1165,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/reducers",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{}}}],["src/app/reducers/index.ts",{"_index":257,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:12",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:22",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:29",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:33",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:9",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/calendar/calendar.component.ts",{"_index":416,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/shared/calendar/calendar.component.ts:16",{"_index":461,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:18",{"_index":464,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:20",{"_index":458,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:22",{"_index":466,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:24",{"_index":462,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:30",{"_index":441,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:33",{"_index":439,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:35",{"_index":457,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:37",{"_index":437,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:41",{"_index":453,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:43",{"_index":451,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:47",{"_index":445,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:61",{"_index":448,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:78",{"_index":455,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:82",{"_index":442,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/calendar/calendar.component.ts:86",{"_index":452,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/shared/default",{"_index":907,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateModalComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/input/input.component.ts",{"_index":784,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/shared/input/input.component.ts:10",{"_index":795,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:11",{"_index":794,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:12",{"_index":793,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:13",{"_index":791,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:17",{"_index":796,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/shared.module",{"_index":41,"title":{},"body":{"modules/AdminModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1226,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/tab/tab.component.ts",{"_index":1240,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["src/app/shared/tab/tab.component.ts:12",{"_index":1244,"title":{},"body":{"components/TabComponent.html":{}}}],["src/app/shared/tab/tab.component.ts:15",{"_index":1245,"title":{},"body":{"components/TabComponent.html":{}}}],["src/app/shared/tab/tab.component.ts:18",{"_index":1243,"title":{},"body":{"components/TabComponent.html":{}}}],["src/app/shared/tab/tab.component.ts:22",{"_index":1246,"title":{},"body":{"components/TabComponent.html":{}}}],["src/app/shared/user",{"_index":1471,"title":{},"body":{"components/UserCredentialsComponent.html":{},"coverage.html":{}}}],["src/app/validators/match",{"_index":994,"title":{},"body":{"injectables/MatchPassword.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{}}}],["src/app/view/admin/admin",{"_index":76,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/view/admin/admin.module.ts",{"_index":22,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/view/admin/delete",{"_index":539,"title":{},"body":{"components/DeleteModalComponent.html":{},"coverage.html":{}}}],["src/app/view/admin/management",{"_index":867,"title":{},"body":{"components/ManagementTableComponent.html":{},"coverage.html":{}}}],["src/app/view/admin/pipes/search",{"_index":1215,"title":{},"body":{"pipes/SearchFilterPipe.html":{},"coverage.html":{}}}],["src/app/view/admin/register",{"_index":1173,"title":{},"body":{"components/RegisterUserComponent.html":{},"coverage.html":{}}}],["src/app/view/admin/update",{"_index":1442,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"coverage.html":{}}}],["src/app/view/employee/employee",{"_index":613,"title":{},"body":{"modules/EmployeeRoutingModule.html":{}}}],["src/app/view/employee/employee.module.ts",{"_index":601,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/app/view/employee/task",{"_index":1270,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"coverage.html":{}}}],["src/app/view/entity",{"_index":1583,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/view/home/home.component.ts",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/view/home/home.component.ts:100",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:101",{"_index":698,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:102",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:103",{"_index":694,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:135",{"_index":693,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:27",{"_index":691,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:87",{"_index":699,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:89",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:91",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:93",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:94",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:96",{"_index":695,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:97",{"_index":697,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/home/home.component.ts:98",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/view/manager/manager",{"_index":971,"title":{},"body":{"modules/ManagerRoutingModule.html":{}}}],["src/app/view/manager/manager.module.ts",{"_index":958,"title":{},"body":{"modules/ManagerModule.html":{}}}],["src/app/view/manager/task",{"_index":1317,"title":{},"body":{"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"coverage.html":{}}}],["src/app/view/pipes/filter",{"_index":667,"title":{},"body":{"pipes/FilterStatePipe.html":{},"coverage.html":{}}}],["src/app/view/services/employee/employee",{"_index":614,"title":{},"body":{"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"coverage.html":{}}}],["src/app/view/services/manager/manager",{"_index":972,"title":{},"body":{"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"coverage.html":{}}}],["src/app/view/services/user/user",{"_index":1501,"title":{},"body":{"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"coverage.html":{}}}],["src/app/view/services/user/users.resolver.ts",{"_index":1522,"title":{},"body":{"guards/UsersResolver.html":{},"coverage.html":{}}}],["src/app/view/services/user/users.resolver.ts:11",{"_index":1523,"title":{},"body":{"guards/UsersResolver.html":{}}}],["src/app/view/services/user/users.resolver.ts:14",{"_index":1524,"title":{},"body":{"guards/UsersResolver.html":{}}}],["src/app/view/view",{"_index":1548,"title":{},"body":{"modules/ViewRoutingModule.html":{}}}],["src/app/view/view.module.ts",{"_index":1533,"title":{},"body":{"modules/ViewModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1589,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["star",{"_index":1412,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["start",{"_index":484,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["started",{"_index":1633,"title":{"index.html":{}},"body":{}}],["state",{"_index":274,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"guards/ManagerTasksResolver.html":{},"guards/NotAuthGuard.html":{},"guards/UsersResolver.html":{},"miscellaneous/variables.html":{}}}],["state.pipe",{"_index":1541,"title":{},"body":{"modules/ViewModule.html":{}}}],["state.pipe.ts",{"_index":668,"title":{},"body":{"pipes/FilterStatePipe.html":{},"coverage.html":{}}}],["state.pipe.ts:8",{"_index":672,"title":{},"body":{"pipes/FilterStatePipe.html":{}}}],["state.user",{"_index":415,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statekey",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["statements",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["statesubject",{"_index":687,"title":{},"body":{"components/HomeComponent.html":{}}}],["status",{"_index":718,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskManagementComponent.html":{}}}],["stephour",{"_index":1329,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["stepminute",{"_index":1330,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["stepsecond",{"_index":1331,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["store",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"dependencies.html":{}}}],["stored",{"_index":1658,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["storemodule.forfeature(fromauth.authfeaturekey",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forroot",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot(reducers",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["styleurls",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["subject",{"_index":459,"title":{},"body":{"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["submit",{"_index":1213,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["subscribe",{"_index":579,"title":{},"body":{"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{}}}],["subscribe(noop",{"_index":1307,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["successfully",{"_index":310,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["super('employee",{"_index":633,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{}}}],["super('manager",{"_index":987,"title":{},"body":{"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{}}}],["super('user",{"_index":1508,"title":{},"body":{"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{}}}],["supervisor_accountchange",{"_index":1098,"title":{},"body":{"components/NavbarComponent.html":{}}}],["support",{"_index":1681,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1143,"title":{},"body":{"components/NavbarComponent.html":{},"modules.html":{}}}],["svg.mat",{"_index":1409,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["switch",{"_index":1066,"title":{},"body":{"components/NavbarComponent.html":{}}}],["symbol",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["t1",{"_index":1630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["t2",{"_index":1629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tab",{"_index":782,"title":{},"body":{"components/HomeComponent.html":{},"components/TabComponent.html":{}}}],["tab'},{'name",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["tab.component.html",{"_index":1242,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.component.scss",{"_index":1241,"title":{},"body":{"components/TabComponent.html":{}}}],["tab/tab.component",{"_index":1236,"title":{},"body":{"modules/SharedModule.html":{}}}],["tabcomponent",{"_index":169,"title":{"components/TabComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":869,"title":{},"body":{"components/ManagementTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["table.component",{"_index":34,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["table.component.html",{"_index":871,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.scss",{"_index":870,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts",{"_index":868,"title":{},"body":{"components/ManagementTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:100",{"_index":886,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:114",{"_index":888,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:19",{"_index":884,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:37",{"_index":901,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:39",{"_index":903,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:41",{"_index":892,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:43",{"_index":897,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:53",{"_index":899,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:55",{"_index":904,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:56",{"_index":887,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:71",{"_index":898,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:73",{"_index":902,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:74",{"_index":889,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table.component.ts:86",{"_index":891,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["table/management",{"_index":33,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/ManagementTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":777,"title":{},"body":{"components/HomeComponent.html":{}}}],["take",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["takelast",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{}}}],["takeuntil",{"_index":562,"title":{},"body":{"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["takeuntil(this.destroy",{"_index":578,"title":{},"body":{"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["tap",{"_index":315,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EmployeeTaskDataService.html":{},"guards/EmployeeTasksResolver.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"guards/ManagerTasksResolver.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"guards/UsersResolver.html":{}}}],["tap((action",{"_index":297,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["tap((e",{"_index":635,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{}}}],["tap((id",{"_index":988,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["tap((loaded",{"_index":661,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"guards/UsersResolver.html":{}}}],["tap((loggedin",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap((loggedout",{"_index":1162,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["tap((tasks",{"_index":715,"title":{},"body":{"components/HomeComponent.html":{}}}],["tap((u",{"_index":712,"title":{},"body":{"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/UserDataService.html":{}}}],["tap((user",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UserCredentialsComponent.html":{}}}],["tap((val",{"_index":1283,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["task",{"_index":122,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"modules/ViewModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["task._id",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task.color",{"_index":1398,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["task.description",{"_index":1399,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["task.from",{"_index":1400,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["task.id",{"_index":1394,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["task.status",{"_index":723,"title":{},"body":{"components/HomeComponent.html":{}}}],["task.title",{"_index":1397,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["task.to",{"_index":675,"title":{},"body":{"pipes/FilterStatePipe.html":{},"components/TaskDialogComponent-1.html":{}}}],["task?._id",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task?.description",{"_index":1309,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["task?.end",{"_index":1311,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["task?.from",{"_index":1313,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["task?.start",{"_index":1310,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["task?.status",{"_index":1314,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["task?.title",{"_index":1308,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["task?.to",{"_index":1312,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["taskcalendarcomponent",{"_index":171,"title":{"components/TaskCalendarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskconnect",{"_index":1634,"title":{},"body":{"index.html":{}}}],["taskdialogcomponent",{"_index":172,"title":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"modules/EmployeeModule.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskentityservice",{"_index":655,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["taskmanagementcomponent",{"_index":174,"title":{"components/TaskManagementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"modules/ManagerModule.html":{},"modules/ManagerRoutingModule.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasks",{"_index":611,"title":{},"body":{"modules/EmployeeModule.html":{},"injectables/EmployeeTaskDataService.html":{},"modules/ManagerModule.html":{},"injectables/ManagerTaskDataService.html":{},"modules/ViewModule.html":{},"coverage.html":{}}}],["tasks.foreach",{"_index":716,"title":{},"body":{"components/HomeComponent.html":{}}}],["tasks.resolver",{"_index":610,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/ManagerModule.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{}}}],["tasks.resolver.ts",{"_index":651,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{},"coverage.html":{}}}],["tasks.resolver.ts:11",{"_index":654,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{}}}],["tasks.resolver.ts:13",{"_index":657,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{}}}],["tasksentityservice",{"_index":1275,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["template",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["templateurl",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["test",{"_index":1664,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1673,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1663,"title":{},"body":{"index.html":{}}}],["text",{"_index":764,"title":{},"body":{"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{}}}],["textarea",{"_index":1380,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["textfieldmodule",{"_index":961,"title":{},"body":{"modules/ManagerModule.html":{}}}],["theme",{"_index":1056,"title":{},"body":{"components/NavbarComponent.html":{}}}],["themename",{"_index":1023,"title":{},"body":{"components/NavbarComponent.html":{}}}],["themepalette",{"_index":1345,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["thesis.theme",{"_index":1057,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thesis.user",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{}}}],["this._ngzone.onstable",{"_index":1382,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["this._snackbar.open",{"_index":583,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["this._snackbar.open('logged",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._snackbar.open('signed",{"_index":1202,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["this._snackbar.open('task",{"_index":1407,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["this._snackbar.open('user",{"_index":1198,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this._snackbar.open(`user",{"_index":1459,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["this._snackbar.open(err.error.message",{"_index":1406,"title":{},"body":{"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{}}}],["this._snackbar.open(error.error.message",{"_index":581,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/RegisterUserComponent.html":{}}}],["this._snackbar.open(error.message",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this._snackbar.open(message",{"_index":320,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.actions",{"_index":1439,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["this.actions$.pipe",{"_index":295,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.activedayisopen",{"_index":477,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.assigned",{"_index":720,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.assigneduser",{"_index":728,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.autosize.resizetofitcontent(true",{"_index":1384,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["this.breakpointobserver",{"_index":1030,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.changetheme(theme",{"_index":1058,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.completed",{"_index":724,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.completeduser",{"_index":730,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.db_url}/user/${userid",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.deeppurpleamber",{"_index":1075,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.destroy$.next(true",{"_index":487,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskManagementComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":488,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskManagementComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.dialog.open(deletemodalcomponent",{"_index":930,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["this.dialog.open(taskdialogcomponent",{"_index":1291,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["this.dialog.open(updateinfocomponent",{"_index":1469,"title":{},"body":{"components/UpdateModalComponent.html":{}}}],["this.dialog.open(updatemodalcomponent",{"_index":928,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["this.dialog.open(usercredentialscomponent",{"_index":1064,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.dialogref.close",{"_index":586,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.dialogref.close(val",{"_index":1403,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["this.dialogtitle",{"_index":567,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.emitclickevent.emit",{"_index":473,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.employeetasksentityservice.entities$.pipe",{"_index":721,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.events",{"_index":481,"title":{},"body":{"components/CalendarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["this.events.map((ievent",{"_index":482,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.events.push",{"_index":1285,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["this.failed",{"_index":725,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.faileduser",{"_index":731,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fb.group",{"_index":1386,"title":{},"body":{"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.form",{"_index":1388,"title":{},"body":{"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.form.get(value",{"_index":1392,"title":{},"body":{"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.form.patchvalue",{"_index":1389,"title":{},"body":{"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.form.value",{"_index":1458,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.form.value.currentpassword",{"_index":1493,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["this.form.value.password",{"_index":1494,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["this.form?.value",{"_index":1393,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["this.handleevent('deleted",{"_index":1436,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["this.handleevent('edited",{"_index":1435,"title":{},"body":{"components/TaskManagementComponent.html":{}}}],["this.http",{"_index":638,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["this.http.delete",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`http://localhost:3000/api/task/${key",{"_index":992,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["this.http.delete(`http://localhost:3000/api/user/${key",{"_index":1519,"title":{},"body":{"injectables/UserDataService.html":{}}}],["this.http.get",{"_index":989,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["this.http.patch",{"_index":642,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["this.http.patch(`${this.db_url}/user/${user._id",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('http://localhost:3000/api/task",{"_index":991,"title":{},"body":{"injectables/ManagerTaskDataService.html":{}}}],["this.http.post('http://localhost:3000/api/user",{"_index":1518,"title":{},"body":{"injectables/UserDataService.html":{}}}],["this.http.post(`${this.db_url}/change",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.db_url}/login",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.db_url}/signup",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.indigopink",{"_index":1076,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loading",{"_index":922,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{}}}],["this.loaduserspage",{"_index":925,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["this.loginform",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(value",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.managertaskentityservice.entities$.pipe",{"_index":729,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.matchpassword.validate",{"_index":1195,"title":{},"body":{"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.mode",{"_index":571,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.nextpage",{"_index":920,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["this.nextpage.tostring",{"_index":915,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["this.ontaskchanges",{"_index":1288,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["this.opensnackbar('logged",{"_index":309,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.pagesize.tostring",{"_index":916,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["this.pinkbluegrey",{"_index":1077,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.purplegreen",{"_index":1078,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router",{"_index":307,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.router.events.subscribe((event",{"_index":1065,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl('/view/home').then",{"_index":301,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.router.navigatebyurl('view/home",{"_index":1164,"title":{},"body":{"guards/NotAuthGuard.html":{}}}],["this.signupform",{"_index":1190,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["this.signupform.get(value",{"_index":1196,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["this.store",{"_index":1061,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["this.store.dispatch(login",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.store.dispatch(logout",{"_index":1089,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.dispatch(signup",{"_index":1201,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["this.store.dispatch(updateaccount",{"_index":1492,"title":{},"body":{"components/UserCredentialsComponent.html":{}}}],["this.store.pipe",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NotAuthGuard.html":{}}}],["this.store.pipe(select(isadmin",{"_index":525,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"components/NavbarComponent.html":{}}}],["this.store.pipe(select(isemployee",{"_index":532,"title":{},"body":{"guards/CanLoadEmployeeGuard.html":{},"components/NavbarComponent.html":{}}}],["this.store.pipe(select(isloggedin",{"_index":1035,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.pipe(select(isloggedout",{"_index":1037,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.pipe(select(ismanager",{"_index":538,"title":{},"body":{"guards/CanLoadManagerGuard.html":{},"components/NavbarComponent.html":{}}}],["this.store.pipe(select(selectuserinitials",{"_index":1060,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.task",{"_index":1302,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["this.task.id",{"_index":1305,"title":{},"body":{"components/TaskDialogComponent.html":{}}}],["this.taskentityservice",{"_index":1304,"title":{},"body":{"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["this.taskentityservice.getall",{"_index":663,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{}}}],["this.taskentityservice.loaded$.pipe",{"_index":660,"title":{},"body":{"guards/EmployeeTasksResolver.html":{},"guards/ManagerTasksResolver.html":{}}}],["this.tasksentityservice.entities",{"_index":1282,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["this.uid",{"_index":911,"title":{},"body":{"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{}}}],["this.user",{"_index":569,"title":{},"body":{"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.user._id",{"_index":1401,"title":{},"body":{"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["this.user.email",{"_index":584,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["this.user.role",{"_index":641,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{}}}],["this.user?.email",{"_index":1387,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["this.userdata",{"_index":1509,"title":{},"body":{"injectables/UserDataService.html":{}}}],["this.userdata?._id",{"_index":1514,"title":{},"body":{"injectables/UserDataService.html":{}}}],["this.userdata?.role",{"_index":1511,"title":{},"body":{"injectables/UserDataService.html":{}}}],["this.userentityservice",{"_index":573,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{}}}],["this.userentityservice.entities",{"_index":727,"title":{},"body":{"components/HomeComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["this.userentityservice.entities$.pipe",{"_index":924,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["this.userentityservice.getall",{"_index":1526,"title":{},"body":{"guards/UsersResolver.html":{}}}],["this.userentityservice.loaded$.pipe",{"_index":1525,"title":{},"body":{"guards/UsersResolver.html":{}}}],["this.userentityservice.loading$.pipe(delay(0",{"_index":923,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["this.userinitials",{"_index":1059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.users",{"_index":726,"title":{},"body":{"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["this.view",{"_index":486,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.viewdate",{"_index":475,"title":{},"body":{"components/CalendarComponent.html":{}}}],["throwerror",{"_index":563,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["title",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{}}}],["title.settitle('admin",{"_index":909,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{}}}],["title.settitle('login",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["today",{"_index":490,"title":{},"body":{"components/CalendarComponent.html":{}}}],["toggle",{"_index":39,"title":{},"body":{"modules/AdminModule.html":{},"modules/SharedModule.html":{},"components/TaskDialogComponent-1.html":{}}}],["toolbar",{"_index":1106,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toolbar.mat",{"_index":1128,"title":{},"body":{"components/NavbarComponent.html":{}}}],["top",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{}}}],["touchui",{"_index":1332,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["transform",{"_index":670,"title":{},"body":{"pipes/FilterStatePipe.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TaskDialogComponent-1.html":{}}}],["transform(value",{"_index":671,"title":{},"body":{"pipes/FilterStatePipe.html":{},"pipes/SearchFilterPipe.html":{}}}],["translatex",{"_index":1136,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tree",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["trigger",{"_index":1379,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["triggerresize",{"_index":1333,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["true",{"_index":456,"title":{},"body":{"components/CalendarComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"injectables/EmployeeTaskEntityService.html":{},"guards/EmployeeTasksResolver.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/ManagerTaskEntityService.html":{},"guards/ManagerTasksResolver.html":{},"injectables/MatchPassword.html":{},"components/NavbarComponent.html":{},"guards/NotAuthGuard.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TabComponent.html":{},"interfaces/Task.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":713,"title":{},"body":{"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/UserDataService.html":{}}}],["u._id",{"_index":919,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["u?.email",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["uid",{"_index":877,"title":{},"body":{"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{}}}],["undefined",{"_index":409,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1662,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":912,"title":{},"body":{"components/ManagementTableComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["up",{"_index":1203,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["update",{"_index":61,"title":{},"body":{"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{}}}],["update(update",{"_index":624,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["update.changes",{"_index":644,"title":{},"body":{"injectables/EmployeeTaskDataService.html":{},"injectables/ManagerTaskDataService.html":{},"injectables/UserDataService.html":{}}}],["updateaccount",{"_index":1489,"title":{},"body":{"components/UserCredentialsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updated",{"_index":1460,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["updateinfocomponent",{"_index":12,"title":{"components/UpdateInfoComponent.html":{}},"body":{"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updatemodalcomponent",{"_index":13,"title":{"components/UpdateModalComponent.html":{}},"body":{"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateuser",{"_index":880,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["updateuser(user",{"_index":890,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["uppercase",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["url(\"../../../assets/images/svg/angular",{"_index":746,"title":{},"body":{"components/HomeComponent.html":{}}}],["url(\"../../../assets/images/svg/task",{"_index":1260,"title":{},"body":{"components/TabComponent.html":{}}}],["urlsegment",{"_index":520,"title":{},"body":{"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{}}}],["urltree",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CanLoadAdminGuard.html":{},"guards/CanLoadEmployeeGuard.html":{},"guards/CanLoadManagerGuard.html":{},"guards/NotAuthGuard.html":{}}}],["use",{"_index":1654,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":1239,"title":{},"body":{"modules/SharedModule.html":{}}}],["user",{"_index":83,"title":{"interfaces/User.html":{}},"body":{"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"interfaces/User.html":{},"components/UserCredentialsComponent.html":{},"injectables/UserDataService.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user'},{'name",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["user.component",{"_index":56,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["user.component.html",{"_index":1176,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.component.scss",{"_index":1175,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.component.ts",{"_index":1174,"title":{},"body":{"components/RegisterUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:20",{"_index":1187,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.component.ts:22",{"_index":1186,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.component.ts:23",{"_index":1185,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.component.ts:25",{"_index":1180,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.component.ts:61",{"_index":1181,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.component.ts:65",{"_index":1184,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.component.ts:91",{"_index":1183,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.component.ts:93",{"_index":1182,"title":{},"body":{"components/RegisterUserComponent.html":{}}}],["user.email",{"_index":588,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["user/register",{"_index":55,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/RegisterUserComponent.html":{},"coverage.html":{}}}],["user?._id",{"_index":1513,"title":{},"body":{"injectables/UserDataService.html":{},"miscellaneous/variables.html":{}}}],["user?.email",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.firstname[0].touppercase",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.lastname[0].touppercase",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.role",{"_index":1515,"title":{},"body":{"injectables/UserDataService.html":{},"miscellaneous/variables.html":{}}}],["usercredentialscomponent",{"_index":177,"title":{"components/UserCredentialsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"modules/SharedModule.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userdata",{"_index":1502,"title":{},"body":{"injectables/UserDataService.html":{},"miscellaneous/variables.html":{}}}],["userdata?._id",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdataservice",{"_index":1500,"title":{"injectables/UserDataService.html":{}},"body":{"injectables/UserDataService.html":{},"modules/ViewModule.html":{},"coverage.html":{},"overview.html":{}}}],["userentityservice",{"_index":550,"title":{"injectables/UserEntityService.html":{}},"body":{"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"injectables/UserEntityService.html":{},"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"interfaces/Task.html":{},"components/TaskDialogComponent-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinitials",{"_index":1013,"title":{},"body":{"components/NavbarComponent.html":{}}}],["userlist",{"_index":1391,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["users",{"_index":688,"title":{},"body":{"components/HomeComponent.html":{},"components/ManagementTableComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["users.filter((u",{"_index":918,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["usersdataservice",{"_index":1544,"title":{},"body":{"modules/ViewModule.html":{}}}],["usersresolver",{"_index":1521,"title":{"guards/UsersResolver.html":{}},"body":{"guards/UsersResolver.html":{},"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"coverage.html":{}}}],["val.foreach",{"_index":1284,"title":{},"body":{"components/TaskCalendarComponent.html":{},"components/TaskManagementComponent.html":{}}}],["valid",{"_index":799,"title":{},"body":{"components/InputComponent.html":{}}}],["validate",{"_index":996,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validate(formgroup",{"_index":997,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validator",{"_index":1000,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validators",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["validators.email",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["validators.minlength(10",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["validators.pattern",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["validators.required",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["value",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"pipes/FilterStatePipe.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"pipes/SearchFilterPipe.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{},"miscellaneous/variables.html":{}}}],["value.filter((task",{"_index":674,"title":{},"body":{"pipes/FilterStatePipe.html":{}}}],["value.filter(function",{"_index":1221,"title":{},"body":{"pipes/SearchFilterPipe.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["variable",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1692,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1638,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1108,"title":{},"body":{"components/NavbarComponent.html":{}}}],["via",{"_index":1666,"title":{},"body":{"index.html":{}}}],["view",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CalendarComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"modules/ViewModule.html":{}}}],["viewchild",{"_index":1375,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["viewchild('autosize",{"_index":1343,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["viewdate",{"_index":426,"title":{},"body":{"components/CalendarComponent.html":{}}}],["viewmodule",{"_index":1527,"title":{"modules/ViewModule.html":{}},"body":{"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["viewroutingmodule",{"_index":1532,"title":{"modules/ViewRoutingModule.html":{}},"body":{"modules/ViewModule.html":{},"modules/ViewRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["viewtitle\":\"en",{"_index":493,"title":{},"body":{"components/CalendarComponent.html":{}}}],["visibility",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["visibility_off",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["void",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/CalendarComponent.html":{},"components/DeleteModalComponent.html":{},"injectables/EmployeeTaskDataService.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"injectables/ManagerTaskDataService.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskCalendarComponent.html":{},"components/TaskDialogComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UpdateModalComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["wait",{"_index":1376,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["webkit",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{}}}],["week",{"_index":495,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weight",{"_index":507,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/TaskDialogComponent-1.html":{}}}],["width",{"_index":498,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/ManagementTableComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterUserComponent.html":{},"components/TabComponent.html":{},"components/TaskDialogComponent-1.html":{},"components/TaskManagementComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["works",{"_index":1172,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["wrapper",{"_index":947,"title":{},"body":{"components/ManagementTableComponent.html":{}}}],["y",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["yellow",{"_index":1352,"title":{},"body":{"components/TaskDialogComponent-1.html":{}}}],["yes",{"_index":590,"title":{},"body":{"components/DeleteModalComponent.html":{},"pipes/SearchFilterPipe.html":{}}}],["z",{"_index":1126,"title":{},"body":{"components/NavbarComponent.html":{}}}],["z])(?=.*?[0",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["z])(?=.*?[a",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterUserComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserCredentialsComponent.html":{}}}],["zone.js",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmployeeModule.html":{},"modules/ManagerModule.html":{},"modules/SharedModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nDeleteModalComponent\n\nDeleteModalComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nDeleteModalComponent->AdminModule\n\n\n\n\n\nManagementTableComponent\n\nManagementTableComponent\n\nAdminModule -->\n\nManagementTableComponent->AdminModule\n\n\n\n\n\nRegisterUserComponent\n\nRegisterUserComponent\n\nAdminModule -->\n\nRegisterUserComponent->AdminModule\n\n\n\n\n\nSearchFilterPipe\n\nSearchFilterPipe\n\nAdminModule -->\n\nSearchFilterPipe->AdminModule\n\n\n\n\n\nUpdateInfoComponent\n\nUpdateInfoComponent\n\nAdminModule -->\n\nUpdateInfoComponent->AdminModule\n\n\n\n\n\nUpdateModalComponent\n\nUpdateModalComponent\n\nAdminModule -->\n\nUpdateModalComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DeleteModalComponent\n                        \n                        \n                            ManagementTableComponent\n                        \n                        \n                            RegisterUserComponent\n                        \n                        \n                            SearchFilterPipe\n                        \n                        \n                            UpdateInfoComponent\n                        \n                        \n                            UpdateModalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { ManagementTableComponent } from './management-table/management-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { SearchFilterPipe } from './pipes/search-filter.pipe';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { UpdateModalComponent } from './update-modal/update-modal.component';\nimport { DeleteModalComponent } from './delete-modal/delete-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { UpdateInfoComponent } from './update-info/update-info.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\n@NgModule({\n  declarations: [\n    ManagementTableComponent,\n    SearchFilterPipe,\n    RegisterUserComponent,\n    UpdateModalComponent,\n    DeleteModalComponent,\n    UpdateInfoComponent,\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatCardModule,\n    SharedModule,\n    MatSelectModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n  ],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/admin/admin-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ManagementTableComponent } from './management-table/management-table.component';\nimport { RegisterUserComponent } from './register-user/register-user.component';\n\nconst routes: Routes = [\n  { path: 'user-management', component: ManagementTableComponent },\n  { path: 'register-user', component: RegisterUserComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'task-connect'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { login } from './auth/actions/auth-actions';\nimport { AppState } from './reducers';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'task-connect';\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    const user = localStorage.getItem('diploma-thesis.user');\n    if (user) {\n      this.store.dispatch(login({ user: JSON.parse(user) }));\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .scroll-fix {\n  position: absolute;\n  top: 60px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RouterState, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { EntityDataModule } from '@ngrx/data';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { reducers, metaReducers } from './reducers';\nimport { AuthModule } from './auth/auth.module';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { JwtModule } from '@auth0/angular-jwt';\n\n@NgModule({\n  declarations: [AppComponent, NavbarComponent, NotFoundComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    StoreModule.forRoot({}, {}),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    EffectsModule.forRoot([]),\n    StoreRouterConnectingModule.forRoot({\n      stateKey: 'router',\n      routerState: RouterState.Minimal,\n    }),\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AuthModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatMenuModule,\n    MatListModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    EntityDataModule.forRoot({}),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'view',\n    loadChildren: () => \"import('./view/view.module').then((m) => m.ViewModule)\",\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            auth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityCache\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityCache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityCache:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducer,\n  ActionReducerMap,\n  createAction,\n  createFeatureSelector,\n  createReducer,\n  createSelector,\n  INIT,\n  MetaReducer,\n  on,\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { AuthState } from '../auth/reducers';\n\nexport interface AppState {\n  auth?: AuthState;\n  entityCache?: any;\n}\n\nexport const reducers: ActionReducerMap = {};\n\nexport function logoutFunction(\n  reducer: ActionReducer\n): ActionReducer {\n  return (state, action) => {\n    if (action != null && action.type === '[Logout Link] User Logout') {\n      return reducer(undefined, { type: INIT });\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer[] = !environment.production\n  ? [logoutFunction]\n  : [logoutFunction];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/effects/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login$\n                            \n                            \n                                logout$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, router: Router, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/effects/auth.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \nopenSnackBar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/effects/auth.effects.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.login),\n        tap((action) => {\n          localStorage.setItem(\n            'diploma-thesis.user',\n            JSON.stringify(action?.user)\n          );\n          this.router.navigateByUrl('/view/home').then();\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/effects/auth.effects.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(logout),\n        tap((action) => {\n          localStorage.removeItem('diploma-thesis.user');\n          this.router\n            .navigateByUrl('/login')\n            .then(() => this.openSnackBar('Logged Out Successfully!'));\n        })\n      ),\n    { dispatch: false }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/effects/auth.effects.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { tap } from 'rxjs';\nimport { AuthActions } from '../actions';\nimport { logout } from '../actions/auth-actions';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private router: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  login$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.login),\n        tap((action) => {\n          localStorage.setItem(\n            'diploma-thesis.user',\n            JSON.stringify(action?.user)\n          );\n          this.router.navigateByUrl('/view/home').then();\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, 'OK', { duration: 2000 });\n  }\n  logout$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(logout),\n        tap((action) => {\n          localStorage.removeItem('diploma-thesis.user');\n          this.router\n            .navigateByUrl('/login')\n            .then(() => this.openSnackBar('Logged Out Successfully!'));\n        })\n      ),\n    { dispatch: false }\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { isLoggedIn } from '../auth/selectors/auth.selectors';\nimport { AppState } from '../reducers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.store.pipe(\n      select(isLoggedIn),\n      tap((loggedIn) => {\n        if (!loggedIn) this.router.navigateByUrl('/login');\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromAuth from './reducers';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './effects/auth.effects';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatCardModule,\n    SharedModule,\n    StoreModule.forFeature(fromAuth.authFeatureKey, fromAuth.authReducer),\n    EffectsModule.forFeature([AuthEffects]),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotAuthGuard } from '../guards/not-auth.guard';\nimport { NotFoundComponent } from '../not-found/not-found.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent, canActivate: [NotAuthGuard] },\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DB_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                deleteAccount\n                            \n                            \n                                editUser\n                            \n                            \n                                login\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \ndeleteAccount(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(undefined: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DB_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs';\nimport { User } from '../interfaces/user.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  DB_URL = 'http://localhost:3000/api';\n\n  login({ email, password }: User) {\n    return this.http.post(`${this.DB_URL}/login`, { email, password });\n  }\n\n  signup(user: User) {\n    return this.http.post(`${this.DB_URL}/signup`, user);\n  }\n\n  changePassword(data: any) {\n    return this.http.post(`${this.DB_URL}/change-password/${data._id}`, {\n      password: data.password,\n      newPassword: data.newPassword,\n    });\n  }\n\n  editUser(user: any) {\n    return this.http.patch(`${this.DB_URL}/user/${user._id}`, user);\n  }\n\n  deleteAccount(userId: string) {\n    return this.http.delete(\n      `${this.DB_URL}/user/${userId}`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createReducer,\n  createSelector,\n  MetaReducer,\n  on,\n} from '@ngrx/store';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { AuthActions } from '../actions';\n\nexport const authFeatureKey = 'auth';\n\nexport interface AuthState {\n  user?: User;\n}\n\nconst initialAuthState: AuthState = {\n  user: undefined,\n};\n\nexport const authReducer = createReducer(\n  initialAuthState,\n  on(AuthActions.login, (state, action) => {\n    return { user: action.user };\n  }),\n\n  on(AuthActions.logout, (state, action) => {\n    return { user: undefined };\n  }),\n  on(AuthActions.updateAccount, (state, action) => {\n    return { user: { ...state.user, ...action.user } };\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/calendar/calendar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n            \n                styleUrls\n                ./calendar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeDayIsOpen\n                            \n                            \n                                CalendarView\n                            \n                            \n                                destroy$\n                            \n                            \n                                modalData\n                            \n                            \n                                refresh\n                            \n                            \n                                view\n                            \n                            \n                                viewDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeOpenMonthViewDay\n                            \n                            \n                                dayClicked\n                            \n                            \n                                eventTimesChanged\n                            \n                            \n                                handleEvent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emitClickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/calendar/calendar.component.ts:37\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :     CalendarEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/calendar/calendar.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emitClickEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/calendar/calendar.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeOpenMonthViewDay\n                        \n                    \n                \n            \n            \n                \ncloseOpenMonthViewDay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dayClicked\n                        \n                    \n                \n            \n            \n                \ndayClicked(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventTimesChanged\n                        \n                    \n                \n            \n            \n                \neventTimesChanged(undefined: CalendarEventTimesChangedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            CalendarEventTimesChangedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEvent\n                        \n                    \n                \n            \n            \n                \nhandleEvent(action: string, event: CalendarEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            CalendarEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setView\n                        \n                    \n                \n            \n            \n                \nsetView(view: CalendarView)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/calendar/calendar.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                            CalendarView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeDayIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CalendarView\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CalendarView\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CalendarView\n\n                    \n                \n                \n                    \n                        Default value : CalendarView.Month\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/calendar/calendar.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  CalendarView,\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n} from 'angular-calendar';\nimport { isSameMonth, isSameDay } from 'date-fns';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n})\nexport class CalendarComponent implements OnInit {\n  destroy$: Subject = new Subject();\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData!: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  @Output()\n  emitClickEvent = new EventEmitter();\n\n  @Input()\n  events: CalendarEvent[] = [];\n\n  activeDayIsOpen: boolean = true;\n\n  refresh = new Subject();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.emitClickEvent.emit({ action, event });\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n      this.viewDate = date;\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd,\n  }: CalendarEventTimesChangedEvent): void {\n    this.events = this.events.map((iEvent) => {\n      if (iEvent === event) {\n        return {\n          ...event,\n          start: newStart,\n          end: newEnd,\n        };\n      }\n      return iEvent;\n    });\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Previous\n        Today\n        Next\n      \n    \n    \n      {{ viewDate | calendarDate: view + \"ViewTitle\":\"en\" }}\n    \n    \n      \n        \n          Month\n        \n        Week\n        Day\n      \n    \n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./calendar.component.scss\n                \n                .calendar-container {\n  width: 90%;\n  margin: 0 auto;\n  margin-top: 50px;\n}\n\nh3 {\n  font-size: 1.5rem;\n  font-weight: 700;\n  letter-spacing: 1px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Previous        Today        Next                    {{ viewDate | calendarDate: view + \"ViewTitle\":\"en\" }}                                Month                Week        Day                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanLoadAdminGuard.html":{"url":"guards/CanLoadAdminGuard.html","title":"guard - CanLoadAdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanLoadAdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/users/admin/can-load-admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/users/admin/can-load-admin.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route, segments: UrlSegment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/users/admin/can-load-admin.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                            UrlSegment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, UrlTree } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { isAdmin } from 'src/app/auth/selectors/auth.selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CanLoadAdminGuard implements CanLoad {\n  constructor(private store: Store) {}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.store.pipe(select(isAdmin));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanLoadEmployeeGuard.html":{"url":"guards/CanLoadEmployeeGuard.html","title":"guard - CanLoadEmployeeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanLoadEmployeeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/users/can-load-employee.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/users/can-load-employee.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route, segments: UrlSegment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/users/can-load-employee.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                            UrlSegment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, UrlTree } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { isEmployee } from 'src/app/auth/selectors/auth.selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CanLoadEmployeeGuard implements CanLoad {\n  constructor(private store: Store) {}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.store.pipe(select(isEmployee));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanLoadManagerGuard.html":{"url":"guards/CanLoadManagerGuard.html","title":"guard - CanLoadManagerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanLoadManagerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/users/can-load-manager.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/users/can-load-manager.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route, segments: UrlSegment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/users/can-load-manager.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                            UrlSegment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, UrlTree } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { isManager } from 'src/app/auth/selectors/auth.selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CanLoadManagerGuard implements CanLoad {\n  constructor(private store: Store) {}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.store.pipe(select(isManager));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteModalComponent.html":{"url":"components/DeleteModalComponent.html","title":"component - DeleteModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/admin/delete-modal/delete-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-modal\n            \n\n            \n                styleUrls\n                ./delete-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./delete-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                dialogTitle\n                            \n                            \n                                mode\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userEntityService: UserEntityService, _snackBar: MatSnackBar, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/admin/delete-modal/delete-modal.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userEntityService\n                                                  \n                                                        \n                                                                        UserEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/delete-modal/delete-modal.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/delete-modal/delete-modal.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSave\n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/delete-modal/delete-modal.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/delete-modal/delete-modal.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/delete-modal/delete-modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/view/admin/delete-modal/delete-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/delete-modal/delete-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { catchError, Subject, takeUntil, throwError } from 'rxjs';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { UserEntityService } from '../../services/user/user-entity.service';\n\n@Component({\n  selector: 'app-delete-modal',\n  templateUrl: './delete-modal.component.html',\n  styleUrls: ['./delete-modal.component.scss'],\n})\nexport class DeleteModalComponent implements OnInit {\n  dialogTitle!: string;\n\n  mode!: 'delete';\n  user!: User;\n  destroy$: Subject = new Subject();\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    private userEntityService: UserEntityService,\n    private _snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) data: any\n  ) {\n    this.dialogTitle = data.dialogTitle;\n    this.user = data.user;\n    this.mode = data.mode;\n  }\n\n  onSave() {\n    this.userEntityService\n      .delete(this.user)\n      .pipe(\n        catchError((err) => throwError(() => err)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        error: ({ error }) =>\n          this._snackBar.open(error.error.message, 'OK', { duration: 2000 }),\n        complete: () => {\n          this._snackBar.open(\n            `User with email '${this.user.email}' was deleted successfully!`,\n            'OK',\n            { duration: 2000 }\n          );\n          this.dialogRef.close();\n        },\n      });\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ dialogTitle }}\n\n  \n    You are deleting '{{ user.email }}'. Click 'Yes' to confirm or 'No' to\n    cancel.\n  \n\n\n\n  No\n\n  Yes\n\n\n    \n\n    \n                \n                    ./delete-modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ dialogTitle }}      You are deleting \\'{{ user.email }}\\'. Click \\'Yes\\' to confirm or \\'No\\' to    cancel.    No  Yes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeleteModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_imports\n\n\n\ncluster_EmployeeModule_providers\n\n\n\ncluster_EmployeeModule_declarations\n\n\n\n\nTaskCalendarComponent\n\nTaskCalendarComponent\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nTaskCalendarComponent->EmployeeModule\n\n\n\n\n\nTaskDialogComponent\n\nTaskDialogComponent\n\nEmployeeModule -->\n\nTaskDialogComponent->EmployeeModule\n\n\n\n\n\nEmployeeRoutingModule\n\nEmployeeRoutingModule\n\nEmployeeModule -->\n\nEmployeeRoutingModule->EmployeeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEmployeeModule -->\n\nSharedModule->EmployeeModule\n\n\n\n\n\nEmployeeTaskDataService\n\nEmployeeTaskDataService\n\nEmployeeModule -->\n\nEmployeeTaskDataService->EmployeeModule\n\n\n\n\n\nEmployeeTaskEntityService\n\nEmployeeTaskEntityService\n\nEmployeeModule -->\n\nEmployeeTaskEntityService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/employee/employee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TaskCalendarComponent\n                        \n                        \n                            TaskDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EmployeeTaskDataService\n                        \n                        \n                            EmployeeTaskEntityService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmployeeRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { TaskCalendarComponent } from './task-calendar/task-calendar.component';\nimport { TaskDialogComponent } from './task-dialog/task-dialog.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { EmployeeTasksResolver } from '../services/employee/employee-tasks.resolver';\nimport { EmployeeTaskDataService } from '../services/employee/employee-tasks-data.service';\nimport { EmployeeTaskEntityService } from '../services/employee/employee-task-entity.service';\n\n@NgModule({\n  declarations: [TaskCalendarComponent, TaskDialogComponent],\n  imports: [\n    CommonModule,\n    EmployeeRoutingModule,\n    SharedModule,\n    MatCardModule,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n  providers: [\n    EmployeeTasksResolver,\n    EmployeeTaskDataService,\n    EmployeeTaskEntityService,\n  ],\n})\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeRoutingModule.html":{"url":"modules/EmployeeRoutingModule.html","title":"module - EmployeeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/employee/employee-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployeeTasksResolver } from 'src/app/view/services/employee/employee-tasks.resolver';\nimport { TaskCalendarComponent } from './task-calendar/task-calendar.component';\n\nconst routes: Routes = [\n  {\n    path: 'task',\n    component: TaskCalendarComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmployeeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeTaskDataService.html":{"url":"injectables/EmployeeTaskDataService.html","title":"injectable - EmployeeTaskDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeTaskDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/view/services/employee/employee-tasks-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    DefaultDataService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAll\n                            \n                            \n                                onDestroy\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/services/employee/employee-tasks-data.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpUrlGenerator\n                                                  \n                                                        \n                                                                    HttpUrlGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/employee/employee-tasks-data.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDestroy\n                        \n                    \n                \n            \n            \n                \nonDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/employee/employee-tasks-data.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(update: Update)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/employee/employee-tasks-data.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Update\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/view/services/employee/employee-tasks-data.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/services/employee/employee-tasks-data.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DefaultDataService, HttpUrlGenerator } from '@ngrx/data';\nimport { Update } from '@ngrx/entity';\nimport { select, Store } from '@ngrx/store';\nimport {\n  distinctUntilChanged,\n  map,\n  Observable,\n  Subject,\n  takeUntil,\n  tap,\n} from 'rxjs';\nimport { AuthState } from 'src/app/auth/reducers';\nimport {\n  getLoggedUserData,\n  selectEmail,\n} from 'src/app/auth/selectors/auth.selectors';\nimport { Task } from 'src/app/interfaces/task.interface';\nimport { User } from 'src/app/interfaces/user.interface';\n\n@Injectable()\nexport class EmployeeTaskDataService extends DefaultDataService {\n  destroy$: Subject = new Subject();\n\n  constructor(\n    http: HttpClient,\n    httpUrlGenerator: HttpUrlGenerator,\n    private store: Store\n  ) {\n    super('Employee', http, httpUrlGenerator);\n    store\n      .pipe(\n        select(getLoggedUserData),\n        tap((e) => {\n          if (e) {\n            this.user = e;\n          }\n        }),\n        takeUntil(this.destroy$),\n        distinctUntilChanged()\n      )\n      .subscribe();\n  }\n\n  user!: User;\n\n  override getAll(): Observable {\n    return this.http\n      .get(\n        `http://localhost:3000/api/tasks/employee/${this.user?.email}`\n      )\n      .pipe(\n        map((data) => {\n          if (this.user.role === 'Employee') {\n            return data;\n          }\n          return [];\n        })\n      );\n  }\n\n  override update(update: Update): Observable {\n    return this.http.patch(\n      `http://localhost:3000/api/task/${update.id}`,\n      update.changes\n    );\n  }\n\n  onDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeTaskEntityService.html":{"url":"injectables/EmployeeTaskEntityService.html","title":"injectable - EmployeeTaskEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeTaskEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/view/services/employee/employee-task-entity.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityCollectionServiceBase\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceElementsFactory: EntityCollectionServiceElementsFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/services/employee/employee-task-entity.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceElementsFactory\n                                                  \n                                                        \n                                                                    EntityCollectionServiceElementsFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory,\n} from '@ngrx/data';\nimport { Task } from 'src/app/interfaces/task.interface';\n\n@Injectable()\nexport class EmployeeTaskEntityService extends EntityCollectionServiceBase {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('Employee', serviceElementsFactory);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EmployeeTasksResolver.html":{"url":"guards/EmployeeTasksResolver.html","title":"guard - EmployeeTasksResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EmployeeTasksResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/view/services/employee/employee-tasks.resolver.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(taskEntityService: EmployeeTaskEntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/services/employee/employee-tasks.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskEntityService\n                                                  \n                                                        \n                                                                        EmployeeTaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/employee/employee-tasks.resolver.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { filter, first, Observable, tap } from 'rxjs';\nimport { EmployeeTaskEntityService } from './employee-task-entity.service';\n\n@Injectable()\nexport class EmployeeTasksResolver implements Resolve {\n  constructor(private taskEntityService: EmployeeTaskEntityService) {}\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable | Promise {\n    return this.taskEntityService.loaded$.pipe(\n      tap((loaded) => {\n        if (!loaded) {\n          this.taskEntityService.getAll();\n        }\n      }),\n      filter((loaded) => !!loaded),\n      first()\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterStatePipe.html":{"url":"pipes/FilterStatePipe.html","title":"pipe - FilterStatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterStatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/pipes/filter-state.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filterState\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, state: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/pipes/filter-state.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Task } from 'src/app/interfaces/task.interface';\n\n@Pipe({\n  name: 'filterState',\n})\nexport class FilterStatePipe implements PipeTransform {\n  transform(value: any, state: any) {\n    return value.filter((task: Task) => task.to === state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assigned$\n                            \n                            \n                                assignedUser$\n                            \n                            \n                                completed$\n                            \n                            \n                                completedUser$\n                            \n                            \n                                destroy$\n                            \n                            \n                                failed$\n                            \n                            \n                                failedUser$\n                            \n                            \n                                selectedEmail\n                            \n                            \n                                stateSubject\n                            \n                            \n                                user\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeTasksEntityService: EmployeeTaskEntityService, managerTaskEntityService: ManagerTaskEntityService, userEntityService: UserEntityService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/home/home.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeTasksEntityService\n                                                  \n                                                        \n                                                                        EmployeeTaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        managerTaskEntityService\n                                                  \n                                                        \n                                                                        ManagerTaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userEntityService\n                                                  \n                                                        \n                                                                        UserEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/home/home.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/home/home.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        assigned$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignedUser$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completedUser$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        failed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        failedUser$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.selectedEmail)\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/home/home.component.ts:91\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  distinctUntilChanged,\n  map,\n  Observable,\n  shareReplay,\n  Subject,\n  takeUntil,\n  tap,\n} from 'rxjs';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { getLoggedUserData } from 'src/app/auth/selectors/auth.selectors';\nimport { Task } from 'src/app/interfaces/task.interface';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { EmployeeTaskEntityService } from '../services/employee/employee-task-entity.service';\nimport { ManagerTaskEntityService } from '../services/manager/manager-task-entity.service';\nimport { UserEntityService } from '../services/user/user-entity.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(\n    private employeeTasksEntityService: EmployeeTaskEntityService,\n    private managerTaskEntityService: ManagerTaskEntityService,\n    private userEntityService: UserEntityService,\n    private store: Store\n  ) {\n    store\n      .pipe(\n        select(getLoggedUserData),\n        tap((u) => (this.user = u)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    employeeTasksEntityService.entities$\n      .pipe(\n        tap((tasks) =>\n          tasks.forEach(({ end, _id, status }) => {\n            if (\n              new Date(end).getTime() \n          tasks.forEach(({ end, _id, status }) => {\n            if (\n              new Date(end).getTime()  = new Subject();\n\n  user!: User;\n\n  users$!: Observable;\n\n  selectedEmail!: string;\n  stateSubject = new BehaviorSubject(this.selectedEmail);\n\n  assigned$!: Observable;\n  completed$!: Observable;\n  failed$!: Observable;\n\n  assignedUser$!: Observable;\n  completedUser$!: Observable;\n  failedUser$!: Observable;\n  ngOnInit(): void {\n    this.assigned$ = this.employeeTasksEntityService.entities$.pipe(\n      map((data) => data.filter((task) => task.status === 'Assigned')),\n      takeUntil(this.destroy$)\n    );\n\n    this.completed$ = this.employeeTasksEntityService.entities$.pipe(\n      map((data) => data.filter((task) => task.status === 'Completed')),\n      takeUntil(this.destroy$)\n    );\n\n    this.failed$ = this.employeeTasksEntityService.entities$.pipe(\n      map((data) => data.filter((task) => task.status === 'Failed')),\n      takeUntil(this.destroy$)\n    );\n\n    this.users$ = this.userEntityService.entities$;\n\n    this.assignedUser$ = this.managerTaskEntityService.entities$.pipe(\n      map((data) => data.filter((task) => task.status === 'Assigned')),\n      takeUntil(this.destroy$)\n    );\n    this.completedUser$ = this.managerTaskEntityService.entities$.pipe(\n      map((data) => data.filter((task) => task.status === 'Completed')),\n      takeUntil(this.destroy$)\n    );\n    this.failedUser$ = this.managerTaskEntityService.entities$.pipe(\n      map((data) => data.filter((task) => task.status === 'Failed')),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Task Organizer\n      A solution for every company\n    \n  \n\n\n\n  \n\n\n\n  \n    Select a user\n    \n      \n        \n          {{ u?.email }}\n        \n      \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                header.docs-header-background {\n  overflow: hidden;\n  position: relative;\n  height: 420px;\n}\n\nheader.docs-header-background::before {\n  content: \"\";\n  position: absolute;\n  background-image: url(\"../../../assets/images/svg/angular-background-image.svg\");\n  background-size: 600px;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-repeat: no-repeat;\n  background-position: 80% 20px;\n  opacity: 0.2;\n}\n\n.docs-header-section {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.docs-header-headline {\n  text-align: center;\n  color: #fff;\n}\n\n.mat-h1 {\n  font-size: 3.5rem;\n  letter-spacing: 2px;\n  font-weight: 900;\n  margin-bottom: 30px;\n}\n\nh2 {\n  font-size: 1.2rem;\n  font-weight: 400;\n}\n\n.manager-tabs-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 40px;\n  width: inherit;\n}\n\n.employee-tab {\n  width: 40%;\n  margin: 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Task Organizer      A solution for every company              Select a user                            {{ u?.email }}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/input/input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                iconName\n                            \n                            \n                                inputType\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/input/input.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/input/input.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent implements OnInit {\n  @Input() label = '';\n  @Input() inputType = 'text';\n  @Input() control!: FormControl;\n  @Input() iconName = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n  {{ iconName }}\n  \n    {{ label }} is required\n  \n    Enter a valid {{ label | lowercase }} address.\n\n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                .full-width {\n  margin-top: 10px;\n  width: 100%;\n}\n.mat-form-field {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}    {{ iconName }}      {{ label }} is required      Enter a valid {{ label | lowercase }} address.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                hide\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControl\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, title: Title, store: Store, authService: AuthService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport {\n  catchError,\n  map,\n  noop,\n  of,\n  Subject,\n  take,\n  takeLast,\n  takeUntil,\n  tap,\n  throwError,\n} from 'rxjs';\nimport { AppState } from 'src/app/reducers';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { login } from '../actions/auth-actions';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  hide = true;\n  destroy$: Subject = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    private title: Title,\n    private store: Store,\n    private authService: AuthService,\n    private _snackBar: MatSnackBar\n  ) {\n    title.setTitle('Login');\n\n    this.loginForm = fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.pattern(\n            /^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?\\W).*$/\n          ),\n        ],\n      ],\n    });\n  }\n\n  onSubmit() {\n    this.authService\n      .login(this.loginForm.value)\n      .pipe(\n        catchError((err) => {\n          return throwError(() => err);\n        }),\n        tap((user) => this.store.dispatch(login({ user }))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        error: ({ error }) =>\n          this._snackBar.open(error.message, 'OK', { duration: 2000 }),\n        complete: () =>\n          this._snackBar.open('Logged in successfully!', 'OK', {\n            duration: 2000,\n          }),\n      });\n  }\n\n  getControl(value: string) {\n    return this.loginForm.get(value) as FormControl;\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Login\n    \n    \n      \n\n      \n        Enter your password\n        \n        \n          {{\n            hide ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password is required\n        \n        \n          Password should be with at least 10 characters\n        \n        \n          Password must contain a symbol,\n          number, uppercase letter and\n          lowercase letter.\n        \n      \n\n      \n        Login\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                form {\n  width: 100%;\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n}\n\n.actions {\n  margin-top: 15px;\n}\n\n.example-card {\n  padding: 20px;\n  max-width: 400px;\n}\n.center-content {\n  text-align: -webkit-center;\n}\n.example-form {\n  min-width: 150px;\n  width: 100%;\n}\n\n.full-width {\n  margin-top: 10px;\n  width: 100%;\n}\n\n.mat-card-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-size: 1.5rem;\n}\n\n.mat-raised-button {\n  margin-top: 10px;\n  width: 100%;\n  height: 40px;\n}\n\n@media screen and (max-width: 600px) {\n  .example-card {\n    margin: 0 15px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login                            Enter your password                          {{            hide ? \"visibility_off\" : \"visibility\"          }}                          Password is required                          Password should be with at least 10 characters                          Password must contain a symbol,          number, uppercase letter and          lowercase letter.                            Login            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagementTableComponent.html":{"url":"components/ManagementTableComponent.html","title":"component - ManagementTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManagementTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/admin/management-table/management-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-management-table\n            \n\n            \n                styleUrls\n                ./management-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./management-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                loading$\n                            \n                            \n                                nextPage\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchText\n                            \n                            \n                                uId\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                loadUsersPage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntityService: UserEntityService, store: Store, dialog: MatDialog, title: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/admin/management-table/management-table.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntityService\n                                                  \n                                                        \n                                                                        UserEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/management-table/management-table.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsersPage\n                        \n                    \n                \n            \n            \n                \nloadUsersPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/management-table/management-table.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/management-table/management-table.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/management-table/management-table.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/management-table/management-table.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/management-table/management-table.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'id',\n    'email',\n    'first-name',\n    'last-name',\n    'role',\n    'edit',\n    'delete',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/management-table/management-table.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/management-table/management-table.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/management-table/management-table.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '5'\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/management-table/management-table.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/management-table/management-table.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/management-table/management-table.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/management-table/management-table.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Title } from '@angular/platform-browser';\nimport { select, Store } from '@ngrx/store';\nimport { delay, map, Observable, Subject, takeUntil, tap } from 'rxjs';\nimport { userId } from 'src/app/auth/selectors/auth.selectors';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { AppState } from 'src/app/reducers';\nimport { defaultDialogConfig } from 'src/app/shared/default-dialog-config';\nimport { UserEntityService } from '../../services/user/user-entity.service';\nimport { DeleteModalComponent } from '../delete-modal/delete-modal.component';\nimport { UpdateModalComponent } from '../update-modal/update-modal.component';\n\n@Component({\n  selector: 'app-management-table',\n  templateUrl: './management-table.component.html',\n  styleUrls: ['./management-table.component.scss'],\n})\nexport class ManagementTableComponent implements OnInit {\n  constructor(\n    private userEntityService: UserEntityService,\n    private store: Store,\n    private dialog: MatDialog,\n    private title: Title\n  ) {\n    title.setTitle('Admin - User Management');\n\n    store\n      .pipe(\n        select(userId),\n        tap((u) => (this.uId = u))\n      )\n      .subscribe()\n      .unsubscribe();\n  }\n\n  pageSize: string = '5';\n\n  uId!: string;\n\n  destroy$: Subject = new Subject();\n\n  displayedColumns: string[] = [\n    'id',\n    'email',\n    'first-name',\n    'last-name',\n    'role',\n    'edit',\n    'delete',\n  ];\n\n  nextPage = 0;\n\n  users$!: Observable;\n  loadUsersPage() {\n    this.userEntityService\n      .getWithQuery({\n        pageNumber: this.nextPage.toString(),\n        pageSize: this.pageSize.toString(),\n        _id: this.uId,\n      })\n      .pipe(\n        map((users) => users.filter((u) => u._id !== this.uId)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n    this.nextPage += 1;\n  }\n\n  loading$!: Observable;\n\n  searchText!: string;\n  ngOnInit(): void {\n    this.loading$ = this.userEntityService.loading$.pipe(delay(0));\n\n    this.users$ = this.userEntityService.entities$.pipe(\n      tap(() => {\n        if (this.nextPage == 0) {\n          this.loadUsersPage();\n        }\n      })\n    );\n  }\n\n  updateUser(user: User) {\n    const dialogConfig = defaultDialogConfig();\n    dialogConfig.data = {\n      dialogTitle: 'Update User',\n      user,\n      mode: 'update',\n    };\n\n    this.dialog.open(UpdateModalComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n\n  deleteUser(user: User) {\n    const dialogConfig = defaultDialogConfig();\n    dialogConfig.data = {\n      dialogTitle: 'Delete User',\n      user,\n      mode: 'delete',\n    };\n\n    this.dialog.open(DeleteModalComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Filter the table\n      \n      search\n    \n  \n\n  \n    \n      Select page size\n      \n        5\n        10\n        15\n        25\n        50\n      \n    \n  \n\n\n\n  \n\n  \n  \n    ID\n    {{ element?._id }}\n  \n\n  \n  \n    Email\n    {{ element?.email }}\n  \n\n  \n  \n    First Name\n    {{ element?.firstName }}\n  \n\n  \n  \n    Last Name\n    {{ element?.lastName }}\n  \n\n  \n  \n    Role\n    {{ element?.role }}\n  \n\n  \n  \n    Edit\n    \n      \n        Update User\n      \n    \n  \n\n  \n  \n    Delete\n    \n      \n        Delete User\n      \n    \n  \n\n  \n  \n\n\n\n  \n    Load more Users\n  \n\n\n    \n\n    \n                \n                    ./management-table.component.scss\n                \n                table {\n  margin: 50px auto;\n  width: 90%;\n}\n\n.search-bar-container {\n  width: 30%;\n  min-width: 180px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & .mat-form-field {\n    position: relative;\n    width: 100%;\n    height: 40px;\n\n    font-size: 1rem;\n\n    & .mat-icon {\n      position: absolute;\n      right: 5px;\n      bottom: 15px;\n      transform: scale(1.5);\n    }\n  }\n}\n\n.button-wrapper {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.table-options-container {\n  width: 90%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 50px auto 0 auto;\n}\n\n.selector-container {\n  display: flex;\n  width: 15%;\n\n  & .mat-form-field {\n    width: 100%;\n    height: 40px;\n    font-size: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Filter the table            search                  Select page size              5        10        15        25        50                      ID    {{ element?._id }}          Email    {{ element?.email }}          First Name    {{ element?.firstName }}          Last Name    {{ element?.lastName }}          Role    {{ element?.role }}          Edit                  Update User                    Delete                  Delete User                      Load more Users  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagementTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagerModule.html":{"url":"modules/ManagerModule.html","title":"module - ManagerModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagerModule\n\n\n\ncluster_ManagerModule_providers\n\n\n\ncluster_ManagerModule_declarations\n\n\n\ncluster_ManagerModule_imports\n\n\n\n\nTaskManagementComponent\n\nTaskManagementComponent\n\n\n\nManagerModule\n\nManagerModule\n\nManagerModule -->\n\nTaskManagementComponent->ManagerModule\n\n\n\n\n\nManagerRoutingModule\n\nManagerRoutingModule\n\nManagerModule -->\n\nManagerRoutingModule->ManagerModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nManagerModule -->\n\nSharedModule->ManagerModule\n\n\n\n\n\nManagerTaskDataService\n\nManagerTaskDataService\n\nManagerModule -->\n\nManagerTaskDataService->ManagerModule\n\n\n\n\n\nManagerTaskEntityService\n\nManagerTaskEntityService\n\nManagerModule -->\n\nManagerTaskEntityService->ManagerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/manager/manager.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TaskManagementComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ManagerTaskDataService\n                        \n                        \n                            ManagerTaskEntityService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ManagerRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManagerRoutingModule } from './manager-routing.module';\nimport { TaskManagementComponent } from './task-management/task-management.component';\nimport { TaskDialogComponent } from './task-dialog/task-dialog.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\nimport {\n  NgxMatDatetimePickerModule,\n  NgxMatNativeDateModule,\n} from '@angular-material-components/datetime-picker';\nimport { ManagerTaskEntityService } from '../services/manager/manager-task-entity.service';\nimport { ManagerTaskDataService } from '../services/manager/manager-tasks-data.service';\nimport { ManagerTasksResolver } from '../services/manager/manager-tasks.resolver';\n\n@NgModule({\n  declarations: [TaskManagementComponent, TaskDialogComponent],\n  imports: [\n    CommonModule,\n    ManagerRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatButtonModule,\n    SharedModule,\n    TextFieldModule,\n    MatCardModule,\n    MatSelectModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    NgxMatDatetimePickerModule,\n    NgxMatNativeDateModule,\n  ],\n  providers: [\n    ManagerTasksResolver,\n    ManagerTaskDataService,\n    ManagerTaskEntityService,\n  ],\n})\nexport class ManagerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagerRoutingModule.html":{"url":"modules/ManagerRoutingModule.html","title":"module - ManagerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/manager/manager-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TaskManagementComponent } from './task-management/task-management.component';\n\nconst routes: Routes = [\n  {\n    path: 'task',\n    component: TaskManagementComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManagerRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagerTaskDataService.html":{"url":"injectables/ManagerTaskDataService.html","title":"injectable - ManagerTaskDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagerTaskDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/view/services/manager/manager-tasks-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    DefaultDataService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                uId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/services/manager/manager-tasks-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpUrlGenerator\n                                                  \n                                                        \n                                                                    HttpUrlGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(entity: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/manager/manager-tasks-data.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/manager/manager-tasks-data.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/manager/manager-tasks-data.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/manager/manager-tasks-data.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(update: Update)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/manager/manager-tasks-data.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Update\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        uId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/services/manager/manager-tasks-data.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { DefaultDataService, HttpUrlGenerator } from '@ngrx/data';\nimport { Update } from '@ngrx/entity';\nimport { select, Store } from '@ngrx/store';\nimport { fi } from 'date-fns/locale';\nimport { map, Observable, tap } from 'rxjs';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { userId } from 'src/app/auth/selectors/auth.selectors';\nimport { Task } from 'src/app/interfaces/task.interface';\n\n@Injectable()\nexport class ManagerTaskDataService\n  extends DefaultDataService\n  implements OnInit\n{\n  constructor(\n    http: HttpClient,\n    httpUrlGenerator: HttpUrlGenerator,\n    private store: Store\n  ) {\n    super('Manager', http, httpUrlGenerator);\n    store\n      .pipe(\n        select(userId),\n        tap((id) => {\n          if (id) {\n            this.uId = id;\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  uId!: string;\n\n  ngOnInit() {}\n\n  override getAll(): Observable {\n    return this.http.get(\n      `http://localhost:3000/api/tasks/manager/${this.uId}`\n    );\n  }\n\n  override update(update: Update): Observable {\n    return this.http.patch(\n      `http://localhost:3000/api/task/${update.id}`,\n      update.changes\n    );\n  }\n\n  override add(entity: Task): Observable {\n    return this.http.post('http://localhost:3000/api/task', entity);\n  }\n\n  override delete(key: string): Observable {\n    return this.http.delete(`http://localhost:3000/api/task/${key}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagerTaskEntityService.html":{"url":"injectables/ManagerTaskEntityService.html","title":"injectable - ManagerTaskEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagerTaskEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/view/services/manager/manager-task-entity.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityCollectionServiceBase\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceElementsFactory: EntityCollectionServiceElementsFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/services/manager/manager-task-entity.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceElementsFactory\n                                                  \n                                                        \n                                                                    EntityCollectionServiceElementsFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory,\n} from '@ngrx/data';\nimport { Task } from 'src/app/interfaces/task.interface';\n\n@Injectable()\nexport class ManagerTaskEntityService extends EntityCollectionServiceBase {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('Manager', serviceElementsFactory);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ManagerTasksResolver.html":{"url":"guards/ManagerTasksResolver.html","title":"guard - ManagerTasksResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ManagerTasksResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/view/services/manager/manager-tasks.resolver.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(taskEntityService: ManagerTaskEntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/services/manager/manager-tasks.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskEntityService\n                                                  \n                                                        \n                                                                        ManagerTaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/manager/manager-tasks.resolver.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { filter, first, Observable, tap } from 'rxjs';\nimport { ManagerTaskEntityService } from './manager-task-entity.service';\n\n@Injectable()\nexport class ManagerTasksResolver implements Resolve {\n  constructor(private taskEntityService: ManagerTaskEntityService) {}\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable | Promise {\n    return this.taskEntityService.loaded$.pipe(\n      tap((loaded) => {\n        if (!loaded) {\n          this.taskEntityService.getAll();\n        }\n      }),\n      filter((loaded) => !!loaded),\n      first()\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPassword.html":{"url":"injectables/MatchPassword.html","title":"injectable - MatchPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatchPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/validators/match-password.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(formGroup: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/validators/match-password.validator.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { passwordsDontMatch: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup, Validator } from '@angular/forms';\n\n@Injectable({ providedIn: 'root' })\nexport class MatchPassword implements Validator {\n  validate(formGroup: FormGroup) {\n    const { password, confirmPassword } = formGroup.value;\n\n    if (password !== confirmPassword) {\n      return { passwordsDontMatch: true };\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deepPurpleAmber\n                            \n                            \n                                indigoPink\n                            \n                            \n                                isAdmin$\n                            \n                            \n                                isEmployee$\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                            \n                                isLoggedOut$\n                            \n                            \n                                isManager$\n                            \n                            \n                                loading\n                            \n                            \n                                pinkBlueGrey\n                            \n                            \n                                purpleGreen\n                            \n                            \n                                user\n                            \n                            \n                                userInitials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeCredentials\n                            \n                            \n                                changePassword\n                            \n                            \n                                changeTheme\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, store: Store, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeCredentials\n                        \n                    \n                \n            \n            \n                \nchangeCredentials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(themeName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    themeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deepPurpleAmber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indigoPink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(isAdmin))\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmployee$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(isEmployee))\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(isLoggedIn))\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(isLoggedOut))\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isManager$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(isManager))\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pinkBlueGrey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purpleGreen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInitials$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { noop, Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { select, Store } from '@ngrx/store';\nimport { AppState } from '../reducers';\nimport {\n  getLoggedUserData,\n  isAdmin,\n  isEmployee,\n  isLoggedIn,\n  isLoggedOut,\n  isManager,\n  selectUserInitials,\n} from '../auth/selectors/auth.selectors';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n} from '@angular/router';\nimport { logout } from '../auth/actions/auth-actions';\nimport { AuthState } from '../auth/reducers';\nimport { User } from '../interfaces/user.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { defaultDialogConfig } from '../shared/default-dialog-config';\nimport { UserCredentialsComponent } from '../shared/user-credentials/user-credentials.component';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  loading = true;\n\n  indigoPink = false;\n  deepPurpleAmber = false;\n  pinkBlueGrey = false;\n  purpleGreen = true;\n\n  isHandset$: Observable = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private store: Store,\n    private router: Router,\n    private dialog: MatDialog\n  ) {\n    const theme = localStorage.getItem('diploma-thesis.theme');\n    if (theme) this.changeTheme(theme);\n    this.userInitials$ = this.store.pipe(select(selectUserInitials));\n    this.store\n      .pipe(select(getLoggedUserData))\n      .pipe(tap((user) => (this.user = user)))\n      .subscribe();\n  }\n\n  user!: User;\n\n  userInitials$!: Observable;\n\n  changeCredentials() {\n    const dialogConfig = defaultDialogConfig();\n\n    dialogConfig.data = {\n      dialogTitle: 'Update User Credentials',\n      user: this.user,\n      mode: 'update-credentials',\n    };\n\n    this.dialog.open(UserCredentialsComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n  changePassword() {\n    const dialogConfig = defaultDialogConfig();\n\n    dialogConfig.data = {\n      dialogTitle: 'Update User Password',\n      user: this.user,\n      mode: 'update-password',\n    };\n\n    this.dialog.open(UserCredentialsComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n\n  ngOnInit(): void {\n    this.router.events.subscribe((event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n  }\n  isLoggedIn$ = this.store.pipe(select(isLoggedIn));\n  isLoggedOut$ = this.store.pipe(select(isLoggedOut));\n  isEmployee$ = this.store.pipe(select(isEmployee));\n  isManager$ = this.store.pipe(select(isManager));\n  isAdmin$ = this.store.pipe(select(isAdmin));\n\n  changeTheme(themeName: string) {\n    const body = document.getElementsByTagName('body')[0];\n    switch (themeName) {\n      case 'deep-purple-amber-theme': {\n        this.deepPurpleAmber = true;\n        this.indigoPink = false;\n        this.pinkBlueGrey = false;\n        this.purpleGreen = false;\n        body.classList.remove('indigo-pink-theme');\n        body.classList.remove('pink-blue-grey-theme');\n        body.classList.add(themeName);\n        localStorage.setItem('diploma-thesis.theme', themeName);\n        break;\n      }\n      case 'indigo-pink-theme': {\n        this.deepPurpleAmber = false;\n        this.indigoPink = true;\n        this.pinkBlueGrey = false;\n        this.purpleGreen = false;\n        body.classList.remove('pink-blue-grey-theme');\n        body.classList.remove('deep-purple-amber-theme');\n        body.classList.add(themeName);\n        localStorage.setItem('diploma-thesis.theme', themeName);\n        break;\n      }\n      case 'pink-blue-grey-theme': {\n        this.deepPurpleAmber = false;\n        this.indigoPink = false;\n        this.pinkBlueGrey = true;\n        this.purpleGreen = false;\n        body.classList.remove('indigo-pink-theme');\n        body.classList.remove('pink-blue-grey-theme');\n        body.classList.add(themeName);\n        localStorage.setItem('diploma-thesis.theme', themeName);\n        break;\n      }\n      case 'purple-green-theme': {\n        this.deepPurpleAmber = false;\n        this.indigoPink = false;\n        this.pinkBlueGrey = false;\n        this.purpleGreen = true;\n        body.classList.remove('indigo-pink-theme');\n        body.classList.remove('pink-blue-grey-theme');\n        body.classList.remove('deep-purple-amber-theme');\n        body.classList.add(themeName);\n        localStorage.setItem('diploma-thesis.theme', themeName);\n        break;\n      }\n    }\n  }\n\n  logout() {\n    this.store.dispatch(logout());\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      Login\n      Home\n    \n  \n  \n    \n      \n        \n          menu\n        \n        task-connect\n      \n      \n        \n          input Login\n          homeHome\n          homeTask\n          homeUser Management\n          faceCreate a User\n\n          homeEmployee Task\n        \n\n        \n          {{ userInitials$ | async }}\n        \n\n        \n           format_color_fill\n        \n      \n    \n\n    \n      \n        supervisor_accountChange Credentials\n      \n      \n        lock Change Password\n      \n      \n        logoutLogout\n      \n    \n\n    \n      \n        {{\n          deepPurpleAmber ? \"radio_button_checked\" : \"radio_button_unchecked\"\n        }}\n        Deep Purple & Amber\n        \n            \n              \n              \n              \n            \n            \n            \n            \n      \n      \n        {{\n          indigoPink ? \"radio_button_checked\" : \"radio_button_unchecked\"\n        }}\n        Indigo & Pink\n        \n            \n              \n              \n              \n            \n            \n            \n            \n      \n      \n        {{\n          pinkBlueGrey ? \"radio_button_checked\" : \"radio_button_unchecked\"\n        }}\n        Pink & Blue-grey\n        \n            \n              \n              \n              \n            \n            \n            \n            \n      \n      \n        {{\n          purpleGreen ? \"radio_button_checked\" : \"radio_button_unchecked\"\n        }}\n        Purple & Green\n        \n            \n              \n              \n              \n            \n            \n            \n            \n      \n    \n\n    \n      \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.user-settings-button {\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  vertical-align: middle;\n  letter-spacing: 1px;\n  border-radius: 50%;\n  margin-left: 30px;\n  background-color: #303030;\n  outline: none;\n  color: inherit;\n  border: none;\n}\n.settings-button.mat-menu-item {\n  text-align: center;\n  vertical-align: middle;\n  font-size: 1rem;\n  & .mat-icon {\n    margin-right: 5px;\n  }\n}\n\n.mat-toolbar {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  box-shadow: 0 3px 5px -1px #0003, 0 6px 10px #00000024, 0 1px 18px #0000001f;\n  position: relative;\n  height: 60px;\n  z-index: 1000;\n}\n\n.mat-toolbar.mat-primary {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 2;\n}\n\n.nav-fixed-fix {\n  margin-top: 55px;\n}\n\n@media (min-width: 960px) {\n  .mat-sidenav-content {\n    margin-left: 0 !important;\n  }\n\n  .mat-sidenav {\n    transform: translateX(-100%) !important;\n  }\n}\n\n.toolbar-nav {\n  display: flex;\n  flex-direction: row;\n}\n\n.toolbar-nav a {\n  text-decoration: none;\n  color: #fff;\n  font-size: 1.5rem;\n  letter-spacing: 1px;\n  padding: 5px 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.toolbar-menu-button {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &.mat-menu-item .mat-icon {\n    margin-right: 0;\n  }\n\n  & span {\n    margin: 0 20px;\n  }\n}\n\n.mat-menu-button-theme {\n  margin-left: 20px;\n}\n\n.mat-menu-item .mat-icon.theme-example-icon {\n  &.deeppurple-amber svg {\n    & .docs-theme-icon-background {\n      fill: #fafafa;\n    }\n\n    & .docs-theme-icon-button {\n      fill: #ffc107;\n    }\n\n    & .docs-theme-icon-toolbar {\n      fill: #673ab7;\n    }\n  }\n\n  &.pink-bluegrey svg {\n    & .docs-theme-icon-background {\n      fill: #303030;\n    }\n\n    & .docs-theme-icon-button {\n      fill: #607d8b;\n    }\n\n    & .docs-theme-icon-toolbar {\n      fill: #e91e63;\n    }\n  }\n\n  &.purple-green svg {\n    & .docs-theme-icon-background {\n      fill: #303030;\n    }\n    & .docs-theme-icon-toolbar {\n      fill: #9c27b0;\n    }\n\n    & .docs-theme-icon-button {\n      fill: #4caf50;\n    }\n  }\n}\n\n.toolbar-nav {\n  & a .mat-icon {\n    margin-right: 5px;\n  }\n\n  & a.active {\n    background-color: #303030;\n  }\n\n  & a:hover {\n    background-color: #303030;\n  }\n\n  a:not(:last-child) {\n    margin-right: 20px;\n  }\n}\n\n.spinner-container {\n  width: 100%;\n  height: 80%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.toolbar-right {\n  display: flex;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu          Login      Home                                    menu                task-connect                              input Login          homeHome          homeTask          homeUser Management          faceCreate a User          homeEmployee Task                          {{ userInitials$ | async }}                           format_color_fill                                    supervisor_accountChange Credentials                    lock Change Password                    logoutLogout                            {{          deepPurpleAmber ? \"radio_button_checked\" : \"radio_button_unchecked\"        }}        Deep Purple & Amber                                                                                                                                  {{          indigoPink ? \"radio_button_checked\" : \"radio_button_unchecked\"        }}        Indigo & Pink                                                                                                                                  {{          pinkBlueGrey ? \"radio_button_checked\" : \"radio_button_unchecked\"        }}        Pink & Blue-grey                                                                                                                                  {{          purpleGreen ? \"radio_button_checked\" : \"radio_button_unchecked\"        }}        Purple & Green                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/NotAuthGuard.html":{"url":"guards/NotAuthGuard.html","title":"guard - NotAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    NotAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/not-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/not-auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/not-auth.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { isLoggedOut } from '../auth/selectors/auth.selectors';\nimport { AppState } from '../reducers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotAuthGuard implements CanActivate {\n  constructor(private store: Store, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.store.pipe(\n      select(isLoggedOut),\n      tap((loggedOut) => {\n        if (!loggedOut) {\n          this.router.navigateByUrl('view/home');\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        not-found works!\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'not-found works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterUserComponent.html":{"url":"components/RegisterUserComponent.html","title":"component - RegisterUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/admin/register-user/register-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-user\n            \n\n            \n                styleUrls\n                ./register-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                hideConfirm\n                            \n                            \n                                hidePassword\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControl\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, title: Title, matchPassword: MatchPassword, userEntityService: UserEntityService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/admin/register-user/register-user.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPassword\n                                                  \n                                                        \n                                                                        MatchPassword\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userEntityService\n                                                  \n                                                        \n                                                                        UserEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/register-user/register-user.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/register-user/register-user.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/register-user/register-user.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/register-user/register-user.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/register-user/register-user.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/register-user/register-user.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/register-user/register-user.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signupForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/register-user/register-user.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Title } from '@angular/platform-browser';\nimport { catchError, Subject, takeUntil, throwError } from 'rxjs';\nimport { MatchPassword } from 'src/app/validators/match-password.validator';\nimport { UserEntityService } from '../../services/user/user-entity.service';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.scss'],\n})\nexport class RegisterUserComponent implements OnInit {\n  signupForm: FormGroup;\n\n  hidePassword = true;\n  hideConfirm = true;\n\n  destroy$: Subject = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    // private store: Store,\n    private title: Title,\n    private matchPassword: MatchPassword,\n    private userEntityService: UserEntityService,\n    // private authService: AuthService,\n    private _snackBar: MatSnackBar\n  ) {\n    title.setTitle('Admin - Create User');\n    this.signupForm = fb.group(\n      {\n        firstName: ['', [Validators.required]],\n        lastName: ['', [Validators.required]],\n        email: ['', [Validators.email, Validators.required]],\n        gender: ['', Validators.required],\n        dateOfBirth: ['', Validators.required],\n        role: ['', [Validators.required]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(10),\n            Validators.pattern(\n              /^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?\\W).*$/\n            ),\n          ],\n        ],\n        confirmPassword: ['', [Validators.required]],\n      },\n      { validators: [this.matchPassword.validate] }\n    );\n  }\n\n  getControl(value: string) {\n    return this.signupForm.get(value) as FormControl;\n  }\n\n  onSubmit() {\n    this.userEntityService\n      .add(this.signupForm.value)\n      .pipe(\n        catchError((err) => throwError(() => err)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        error: ({ error }) => this._snackBar.open(error.error.message, 'OK'),\n        complete: () => this._snackBar.open('User created successfully!', 'OK'),\n      });\n    // this.authService\n    //   .signup(this.signupForm.value)\n    //   .pipe(\n    //     catchError((err) => {\n    //       return throwError(() => err);\n    //     }),\n    //     // tap((user) => this.store.dispatch(signup({ user }))),\n    //     takeUntil(this.destroy$)\n    //   )\n    //   .subscribe({\n    // error: ({ error }) => this._snackBar.open(error.message, 'OK'),\n    // complete: () => this._snackBar.open('Signed up successfully!', 'OK'),\n    //   });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Sign up\n    \n    \n      \n      \n\n      \n\n      \n        Choose your date of birth\n        \n        MM/DD/YYYY\n        \n        \n        \n          Date of birth is required\n        \n      \n\n      \n        Select a gender\n        \n          Male\n          Female\n          Other\n        \n        \n          Gender is required\n        \n      \n\n      \n        Select a user role\n        \n          Admin\n          Manager\n          Employee\n        \n        \n          User role is required\n        \n      \n\n      \n        Enter your password\n        \n        \n          {{\n            hidePassword ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password is required\n        \n        \n          Password should be with\n          at least 10 characters \n          Password must contain a symbol,\n          number, uppercase letter and\n          lowercase letter.\n        \n      \n\n      \n        Confirm your password\n        \n        \n          {{\n            hideConfirm ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password confirmation is required\n        \n        \n          Password confirmation should be with\n          at least 10 characters\n        \n      \n\n      \n        \n          Passwords do not match\n        \n      \n\n      \n        Submit\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register-user.component.scss\n                \n                form {\n  margin: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n}\n\n.actions {\n  margin-top: 15px;\n}\n\n.example-card {\n  max-width: 400px;\n}\n.center-content {\n  text-align: -webkit-center;\n}\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.full-width {\n  margin-top: 10px;\n  width: 100%;\n}\n\n.mat-card-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-size: 1.5rem;\n}\n\n.mat-raised-button {\n  margin-top: 10px;\n  width: 100%;\n  height: 40px;\n}\n\n@media screen and (max-width: 600px) {\n  .example-card {\n    margin: 0 15px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sign up                                        Choose your date of birth                MM/DD/YYYY                                  Date of birth is required                            Select a gender                  Male          Female          Other                          Gender is required                            Select a user role                  Admin          Manager          Employee                          User role is required                            Enter your password                          {{            hidePassword ? \"visibility_off\" : \"visibility\"          }}                          Password is required                          Password should be with          at least 10 characters           Password must contain a symbol,          number, uppercase letter and          lowercase letter.                            Confirm your password                          {{            hideConfirm ? \"visibility_off\" : \"visibility\"          }}                          Password confirmation is required                          Password confirmation should be with          at least 10 characters                                      Passwords do not match                            Submit            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchFilterPipe.html":{"url":"pipes/SearchFilterPipe.html","title":"pipe - SearchFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/admin/pipes/search-filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        searchFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/pipes/search-filter.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchFilter',\n})\nexport class SearchFilterPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (!value) return null;\n    if (!args) return value;\n\n    args = args.toLowerCase();\n\n    return value.filter(function (item: any) {\n      return JSON.stringify(item).toLowerCase().includes(args);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCalendarComponent->SharedModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nSharedModule -->\n\nInputComponent->SharedModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nSharedModule -->\n\nTabComponent->SharedModule\n\n\n\n\n\nUserCredentialsComponent\n\nUserCredentialsComponent\n\nSharedModule -->\n\nUserCredentialsComponent->SharedModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nSharedModule->CalendarComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nSharedModule->InputComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nSharedModule->TabComponent \n\n\n\n\n\nUserCredentialsComponent \n\nUserCredentialsComponent \n\nUserCredentialsComponent  -->\n\nSharedModule->UserCredentialsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            UserCredentialsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            UserCredentialsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputComponent } from './input/input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { TabComponent } from './tab/tab.component';\nimport { UserCredentialsComponent } from './user-credentials/user-credentials.component';\nimport { MatSelectModule } from '@angular/material/select';\n@NgModule({\n  declarations: [\n    InputComponent,\n    CalendarComponent,\n    TabComponent,\n    UserCredentialsComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatButtonToggleModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    MatInputModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSelectModule,\n  ],\n  exports: [\n    InputComponent,\n    CalendarComponent,\n    TabComponent,\n    UserCredentialsComponent,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/tab/tab.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tab\n            \n\n            \n                styleUrls\n                ./tab.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assigned$\n                            \n                            \n                                completed$\n                            \n                            \n                                failed$\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/tab/tab.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assigned$\n                    \n                \n                \n                    \n                        Type :         Task[] | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/tab/tab.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        completed$\n                    \n                \n                \n                    \n                        Type :         Task[] | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/tab/tab.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        failed$\n                    \n                \n                \n                    \n                        Type :         Task[] | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/tab/tab.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/tab/tab.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Task } from 'src/app/interfaces/task.interface';\n\n@Component({\n  selector: 'app-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss'],\n})\nexport class TabComponent implements OnInit {\n  @Input()\n  assigned$!: Task[] | null;\n\n  @Input()\n  completed$!: Task[] | null;\n\n  @Input()\n  failed$!: Task[] | null;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ assign?.title }}\n          \n        \n        \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{ complete?.title }}\n          \n        \n        \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{ fail?.title }}\n          \n        \n        \n          \n        \n       \n\n\n    \n\n    \n                \n                    ./tab.component.scss\n                \n                .mat-tab-group {\n  margin: 40px auto;\n  min-height: 200px;\n}\n\n.mat-card {\n  width: 60%;\n  margin: 20px auto;\n}\n\n.mat-card-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.card-image {\n  position: relative;\n  width: 80%;\n  height: 160px;\n  border-radius: 30px;\n  margin: 0 auto;\n}\n\n.card-image.completed {\n  background-color: #077e8c;\n}\n\n.card-image.assigned {\n  background-color: #f29339;\n}\n\n.card-image.failed {\n  background-color: #d9512c;\n}\n\n.card-image::before {\n  content: \"\";\n  position: absolute;\n  background-image: url(\"../../../assets/images/svg/task-background-image.svg\");\n  background-size: 50%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ assign?.title }}                                                                                                  {{ complete?.title }}                                                                                                  {{ fail?.title }}                                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/task.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            allDay\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cssClass\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            draggable\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resizable\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allDay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allDay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cssClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cssClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resizable:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  _id?: string;\n  userId?: string;\n  start: Date;\n  end: Date;\n  from: string;\n  title: string;\n  color: {\n    primary: string;\n    secondary: string;\n  };\n  allDay?: boolean;\n  cssClass?: string;\n  resizable?: {\n    beforeStart?: boolean;\n    afterEnd?: boolean;\n  };\n  status?: string;\n  draggable?: boolean;\n  description: string;\n  to: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskCalendarComponent.html":{"url":"components/TaskCalendarComponent.html","title":"component - TaskCalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskCalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/employee/task-calendar/task-calendar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-calendar\n            \n\n            \n                styleUrls\n                ./task-calendar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-calendar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitChildEvent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTaskChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, tasksEntityService: EmployeeTaskEntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/employee/task-calendar/task-calendar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tasksEntityService\n                                                  \n                                                        \n                                                                        EmployeeTaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitChildEvent\n                        \n                    \n                \n            \n            \n                \nemitChildEvent(undefined: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/employee/task-calendar/task-calendar.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/employee/task-calendar/task-calendar.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskChanges\n                        \n                    \n                \n            \n            \n                \nonTaskChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/employee/task-calendar/task-calendar.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/view/employee/task-calendar/task-calendar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalendarEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/view/employee/task-calendar/task-calendar.component.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CalendarEvent } from 'angular-calendar';\nimport { distinctUntilChanged, Subject, takeUntil, tap } from 'rxjs';\nimport { Task } from 'src/app/interfaces/task.interface';\nimport { defaultDialogConfig } from 'src/app/shared/default-dialog-config';\nimport { EmployeeTaskEntityService } from '../../services/employee/employee-task-entity.service';\nimport { TaskDialogComponent } from '../task-dialog/task-dialog.component';\n\n@Component({\n  selector: 'app-task-calendar',\n  templateUrl: './task-calendar.component.html',\n  styleUrls: ['./task-calendar.component.scss'],\n})\nexport class TaskCalendarComponent implements OnInit {\n  destroy$: Subject = new Subject();\n\n  constructor(\n    private dialog: MatDialog,\n    private tasksEntityService: EmployeeTaskEntityService\n  ) {}\n\n  onTaskChanges() {\n    this.tasksEntityService.entities$\n      .pipe(\n        takeUntil(this.destroy$),\n        tap((val) => {\n          this.events = [];\n          val.forEach(\n            ({\n              start,\n              end,\n              title,\n              color,\n              _id,\n              description,\n              to,\n              from,\n              status,\n            }) => {\n              this.events.push({\n                start: new Date(start),\n                title,\n                end: new Date(end as Date),\n                color: {\n                  ...color,\n                },\n                description: description,\n                id: _id,\n                to,\n                from,\n                status,\n              });\n            }\n          );\n        }),\n        distinctUntilChanged()\n      )\n      .subscribe();\n  }\n\n  ngOnInit(): void {\n    this.onTaskChanges();\n  }\n\n  events: CalendarEvent[] = [];\n\n  emitChildEvent({ event, action }: any) {\n    const dialogConfig = defaultDialogConfig();\n    if (action === 'Clicked') {\n      dialogConfig.data = {\n        dialogTitle: 'Task Information',\n        event,\n        mode: 'view',\n      };\n    }\n    this.dialog.open(TaskDialogComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./task-calendar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskCalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDialogComponent.html":{"url":"components/TaskDialogComponent.html","title":"component - TaskDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/employee/task-dialog/task-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-dialog\n            \n\n            \n                styleUrls\n                ./task-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogTitle\n                            \n                            \n                                mode\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, taskEntityService: EmployeeTaskEntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/employee/task-dialog/task-dialog.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskEntityService\n                                                  \n                                                        \n                                                                        EmployeeTaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/employee/task-dialog/task-dialog.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/employee/task-dialog/task-dialog.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSave\n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/employee/task-dialog/task-dialog.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dialogTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/employee/task-dialog/task-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/view/employee/task-dialog/task-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/employee/task-dialog/task-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { noop, Observable, tap } from 'rxjs';\nimport { Task } from 'src/app/interfaces/task.interface';\nimport { EmployeeTaskEntityService } from '../../services/employee/employee-task-entity.service';\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task-dialog.component.html',\n  styleUrls: ['./task-dialog.component.scss'],\n})\nexport class TaskDialogComponent implements OnInit {\n  dialogTitle!: string;\n  mode!: 'view';\n  task!: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data: any,\n    private dialogRef: MatDialogRef,\n    private taskEntityService: EmployeeTaskEntityService\n  ) {\n    this.dialogTitle = data.dialogTitle;\n    this.task = data.event;\n    this.mode = data.mode;\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onSave() {\n    if (this.mode === 'view') {\n      this.taskEntityService\n        .update({ _id: this.task.id, status: 'Completed' })\n        .pipe(tap(() => this.dialogRef.close()))\n        .subscribe(noop);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ dialogTitle }}\n        {{\n          task?.title\n        }}\n      \n        \n          Description\n          {{ task?.description }}\n        \n        \n          \n            From: {{ task?.start | date }}\n          \n          \n            To: {{ task?.end | date }}\n          \n        \n        {{ task?.to }}\n        {{ task?.from }}\n        {{ task?.status }}\n      \n    \n  \n\n\n\n  Close\n\n  \n    Mark as Completed\n  \n\n\n    \n\n    \n                \n                    ./task-dialog.component.scss\n                \n                .mat-dialog-actions {\n  margin: 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ dialogTitle }}        {{          task?.title        }}                        Description          {{ task?.description }}                                      From: {{ task?.start | date }}                                To: {{ task?.end | date }}                          {{ task?.to }}        {{ task?.from }}        {{ task?.status }}              Close      Mark as Completed  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDialogComponent-1.html":{"url":"components/TaskDialogComponent-1.html","title":"component - TaskDialogComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/manager/task-dialog/task-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-dialog\n            \n\n            \n                styleUrls\n                ./task-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autosize\n                            \n                            \n                                color\n                            \n                            \n                                colors\n                            \n                            \n                                dialogTitle\n                            \n                            \n                                disabled\n                            \n                            \n                                disableMinute\n                            \n                            \n                                enableMeridian\n                            \n                            \n                                form\n                            \n                            \n                                hideTime\n                            \n                            \n                                loading$\n                            \n                            \n                                maxDate\n                            \n                            \n                                minDate\n                            \n                            \n                                mode\n                            \n                            \n                                selected\n                            \n                            \n                                showSeconds\n                            \n                            \n                                showSpinners\n                            \n                            \n                                stepHour\n                            \n                            \n                                stepMinute\n                            \n                            \n                                stepSecond\n                            \n                            \n                                task\n                            \n                            \n                                touchUi\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                            \n                                triggerResize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialogRef: MatDialogRef, store: Store, data: any, _snackBar: MatSnackBar, taskEntityService: ManagerTaskEntityService, userEntityService: UserEntityService, _ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskEntityService\n                                                  \n                                                        \n                                                                        ManagerTaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userEntityService\n                                                  \n                                                        \n                                                                        UserEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSave\n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerResize\n                        \n                    \n                \n            \n            \n                \ntriggerResize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autosize\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkTextareaAutosize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('autosize')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ThemePalette\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    red: {\n      primary: '#ad2121',\n      secondary: '#FAE3E3',\n    },\n    blue: {\n      primary: '#1e90ff',\n      secondary: '#D1E8FF',\n    },\n    yellow: {\n      primary: '#e3bc08',\n      secondary: '#FDF1BA',\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disableMinute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableMeridian\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"create\" | \"update\" | \"view\" | \"delete\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSpinners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepMinute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepSecond\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touchUi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-dialog/task-dialog.component.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { Component, Inject, NgZone, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Store, select } from '@ngrx/store';\nimport { id } from 'date-fns/locale';\nimport {\n  take,\n  Observable,\n  tap,\n  noop,\n  takeUntil,\n  catchError,\n  throwError,\n} from 'rxjs';\nimport { AuthState } from 'src/app/auth/reducers';\nimport {\n  getLoggedUserData,\n  userId,\n} from 'src/app/auth/selectors/auth.selectors';\nimport { Task } from 'src/app/interfaces/task.interface';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { ManagerTaskEntityService } from '../../services/manager/manager-task-entity.service';\nimport { UserEntityService } from '../../services/user/user-entity.service';\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task-dialog.component.html',\n  styleUrls: ['./task-dialog.component.scss'],\n})\nexport class TaskDialogComponent implements OnInit {\n  @ViewChild('autosize') autosize!: CdkTextareaAutosize;\n  triggerResize() {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n  colors: any = {\n    red: {\n      primary: '#ad2121',\n      secondary: '#FAE3E3',\n    },\n    blue: {\n      primary: '#1e90ff',\n      secondary: '#D1E8FF',\n    },\n    yellow: {\n      primary: '#e3bc08',\n      secondary: '#FDF1BA',\n    },\n  };\n  form!: FormGroup;\n\n  dialogTitle!: string;\n\n  task!: Task;\n\n  mode!: 'create' | 'update' | 'view' | 'delete';\n\n  loading$!: Observable;\n\n  user!: User;\n\n  users!: User[];\n\n  disabled = false;\n  showSpinners = true;\n  showSeconds = false;\n  touchUi = false;\n  enableMeridian = false;\n  minDate!: Date;\n  maxDate!: Date;\n  stepHour = 1;\n  stepMinute = 1;\n  stepSecond = 1;\n  color: ThemePalette = 'primary';\n  disableMinute = false;\n  selected!: any;\n  hideTime = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) data: any,\n    private _snackBar: MatSnackBar,\n    private taskEntityService: ManagerTaskEntityService,\n    private userEntityService: UserEntityService,\n    private _ngZone: NgZone\n  ) {\n    this.store\n      .pipe(\n        select(getLoggedUserData),\n        tap((user) => (this.user = user))\n      )\n      .subscribe();\n\n    this.dialogTitle = data.dialogTitle;\n    this.task = data.event;\n    this.mode = data.mode;\n\n    const formControls = {\n      title: ['', Validators.required],\n      start: ['', Validators.required],\n      end: ['', Validators.required],\n      color: this.fb.group({\n        primary: ['', Validators.required],\n        secondary: ['', Validators.required],\n      }),\n      description: ['', Validators.required],\n      from: [this.user?.email, Validators.required],\n      to: ['', Validators.required],\n    };\n\n    if (this.mode == 'update') {\n      this.form = this.fb.group({ ...formControls });\n      this.form.patchValue({ ...data.event });\n    } else if (this.mode == 'create') {\n      this.form = this.fb.group({\n        ...formControls,\n        userId: [id, Validators.required],\n      });\n    }\n  }\n  ngOnInit(): void {\n    this.userEntityService.entities$\n      .pipe(tap((userList) => (this.users = userList)))\n      .subscribe(noop)\n      .unsubscribe();\n  }\n\n  getControl(value: string) {\n    return this.form.get(value) as FormControl;\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onSave() {\n    const task: any = {\n      ...this.task,\n      ...this.form?.value,\n    };\n\n    if (this.mode == 'update') {\n      this.taskEntityService\n        .update({\n          _id: task.id,\n          start: new Date(task.start),\n          end: new Date(task.end as Date),\n          title: task.title,\n          color: task.color,\n          description: task.description,\n          to: task.to,\n          from: task.from,\n        })\n        .pipe(tap(() => this.dialogRef.close()))\n        .subscribe(noop);\n    } else if (this.mode == 'create') {\n      this.taskEntityService\n        .add({\n          title: task.title,\n          userId: this.user._id,\n          start: new Date(task.start),\n          end: new Date(task.end as Date),\n          color: task.color,\n          description: task.description,\n          to: task.to,\n          from: task.from,\n        })\n        .pipe(tap((val) => this.dialogRef.close(val)))\n        .subscribe(noop);\n    } else if (this.mode == 'delete') {\n      this.taskEntityService\n        .delete(task.id as string)\n        .pipe(catchError((err) => throwError(() => err)))\n        .subscribe({\n          error: (err) =>\n            this._snackBar.open(err.error.message, 'OK', { duration: 2000 }),\n          complete: () => {\n            this._snackBar.open('Task deleted successfully!', 'OK', {\n              duration: 2000,\n            });\n            this.dialogRef.close();\n          },\n        });\n    }\n  }\n}\n\n    \n\n    \n        {{ dialogTitle }}\n\n  \n    \n      \n    \n\n    \n      \n\n      \n        \n        \n        \n        \n      \n\n      \n        \n        \n        \n        \n      \n\n      \n        \n          Choose a primary color\n          \n        \n        \n          Choose a secondary color\n          \n        \n      \n      \n        Description\n        \n      \n      \n        Select a user\n        \n          \n            \n              {{ u?.email }}\n            \n          \n        \n      \n    \n  \n  \n    \n      \n        {{ dialogTitle }}\n        {{\n          task?.title\n        }}\n      \n        \n          Description\n          {{ task?.description }}\n        \n        \n          \n            From: {{ task?.start | date }}\n          \n          \n            To: {{ task?.end | date }}\n          \n        \n        {{ task?.to }}\n        {{ task?.from }}\n      \n    \n  \n\n  \n\n\n\n  Close\n\n  \n    Save\n  \n\n  \n    Delete\n  \n\n\n    \n\n    \n                \n                    ./task-dialog.component.scss\n                \n                .mat-form-field {\n  width: 100%;\n}\n\nsvg.mat-datepicker-toggle-default-icon.ng-star-inserted {\n  transform: scale(1.3);\n}\n\n.mat-card-header:not(:last-child),\n.mat-card-content:not(:last-child) {\n  margin-bottom: 10px;\n}\n.card {\n  &-dates {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    &:not(:last-child) {\n      margin-bottom: 10px;\n    }\n  }\n\n  &-description {\n    &-title {\n      font-size: 1.2rem;\n      margin-bottom: 5px;\n      letter-spacing: 1px;\n      font-weight: bold;\n    }\n    &:not(:last-child) {\n      margin-bottom: 10px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ dialogTitle }}                                                                                                                                          Choose a primary color                                    Choose a secondary color                                      Description                            Select a user                                            {{ u?.email }}                                                              {{ dialogTitle }}        {{          task?.title        }}                        Description          {{ task?.description }}                                      From: {{ task?.start | date }}                                To: {{ task?.end | date }}                          {{ task?.to }}        {{ task?.from }}                Close      Save        Delete  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskDialogComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskManagementComponent.html":{"url":"components/TaskManagementComponent.html","title":"component - TaskManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/manager/task-management/task-management.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-management\n            \n\n            \n                styleUrls\n                ./task-management.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                destroy$\n                            \n                            \n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                emitChildEvent\n                            \n                            \n                                handleEvent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTaskChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksEntityService: ManagerTaskEntityService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/manager/task-management/task-management.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksEntityService\n                                                  \n                                                        \n                                                                        ManagerTaskEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEvent\n                        \n                    \n                \n            \n            \n                \naddEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-management/task-management.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitChildEvent\n                        \n                    \n                \n            \n            \n                \nemitChildEvent(undefined: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-management/task-management.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEvent\n                        \n                    \n                \n            \n            \n                \nhandleEvent(action: string, event: CalendarEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-management/task-management.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            CalendarEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-management/task-management.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-management/task-management.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskChanges\n                        \n                    \n                \n            \n            \n                \nonTaskChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/manager/task-management/task-management.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CalendarEventAction[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      label: '',\n      a11yLabel: 'Edit',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      },\n    },\n    {\n      label: ``,\n      a11yLabel: 'Delete',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Deleted', event);\n      },\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-management/task-management.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-management/task-management.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalendarEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/view/manager/task-management/task-management.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CalendarEventAction, CalendarEvent } from 'angular-calendar';\nimport { Subject, takeUntil, tap, distinctUntilChanged } from 'rxjs';\nimport { Task } from 'src/app/interfaces/task.interface';\nimport { defaultDialogConfig } from 'src/app/shared/default-dialog-config';\nimport { ManagerTaskEntityService } from '../../services/manager/manager-task-entity.service';\nimport { TaskDialogComponent } from '../task-dialog/task-dialog.component';\n\n@Component({\n  selector: 'app-task-management',\n  templateUrl: './task-management.component.html',\n  styleUrls: ['./task-management.component.scss'],\n})\nexport class TaskManagementComponent implements OnInit {\n  destroy$: Subject = new Subject();\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '',\n      a11yLabel: 'Edit',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      },\n    },\n    {\n      label: ``,\n      a11yLabel: 'Delete',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Deleted', event);\n      },\n    },\n  ];\n\n  events: CalendarEvent[] = [];\n\n  constructor(\n    private tasksEntityService: ManagerTaskEntityService,\n    private dialog: MatDialog\n  ) {}\n\n  onTaskChanges() {\n    this.tasksEntityService.entities$\n      .pipe(\n        takeUntil(this.destroy$),\n        tap((val) => {\n          this.events = [];\n          val.forEach(\n            ({\n              start,\n              end,\n              title,\n              color,\n              _id,\n              description,\n              to,\n              from,\n              status,\n            }) => {\n              this.events.push({\n                start: new Date(start),\n                title,\n                actions: this.actions,\n                end: new Date(end as Date),\n                color: {\n                  ...color,\n                },\n                description: description,\n                id: _id,\n                to,\n                from,\n                status,\n              });\n            }\n          );\n        }),\n        distinctUntilChanged()\n      )\n      .subscribe();\n  }\n\n  ngOnInit(): void {\n    this.onTaskChanges();\n  }\n\n  emitChildEvent({ event, action }: any) {\n    const dialogConfig = defaultDialogConfig();\n    if (action === 'Clicked') {\n      dialogConfig.data = {\n        dialogTitle: 'Task Information',\n        event,\n        mode: 'view',\n      };\n    }\n    this.dialog.open(TaskDialogComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    const dialogConfig = defaultDialogConfig();\n\n    if (action === 'Edited') {\n      dialogConfig.data = {\n        dialogTitle: 'Edit Task',\n        event,\n        mode: 'update',\n      };\n\n      this.dialog.open(TaskDialogComponent, {\n        ...dialogConfig,\n        disableClose: false,\n      });\n    } else if (action === 'Deleted') {\n      dialogConfig.data = {\n        dialogTitle: 'Delete Task',\n        event,\n        mode: 'delete',\n      };\n\n      this.dialog.open(TaskDialogComponent, {\n        ...dialogConfig,\n        disableClose: false,\n      });\n    }\n  }\n\n  addEvent(): void {\n    const dialogConfig = defaultDialogConfig();\n    dialogConfig.data = {\n      dialogTitle: 'Create Course',\n      mode: 'create',\n    };\n    this.dialog.open(TaskDialogComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    add\n  \n\n\n    \n\n    \n                \n                    ./task-management.component.scss\n                \n                .mat-add-button-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & .mat-raised-button {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    margin: 30px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      add  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateInfoComponent.html":{"url":"components/UpdateInfoComponent.html","title":"component - UpdateInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/admin/update-info/update-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-info\n            \n\n            \n                styleUrls\n                ./update-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                dialogTitle\n                            \n                            \n                                form\n                            \n                            \n                                hideConfirm\n                            \n                            \n                                hidePassword\n                            \n                            \n                                mode\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onInfoUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, matchPassword: MatchPassword, _snackBar: MatSnackBar, userEntityService: UserEntityService, fb: FormBuilder, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/admin/update-info/update-info.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPassword\n                                                  \n                                                        \n                                                                        MatchPassword\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userEntityService\n                                                  \n                                                        \n                                                                        UserEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/update-info/update-info.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/update-info/update-info.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/update-info/update-info.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInfoUpdate\n                        \n                    \n                \n            \n            \n                \nonInfoUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/update-info/update-info.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/update-info/update-info.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/update-info/update-info.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/update-info/update-info.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/update-info/update-info.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/update-info/update-info.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"update\" | \"password\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/update-info/update-info.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/update-info/update-info.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { catchError, Subject, takeUntil, throwError } from 'rxjs';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { MatchPassword } from 'src/app/validators/match-password.validator';\nimport { UserEntityService } from '../../services/user/user-entity.service';\n\n@Component({\n  selector: 'app-update-info',\n  templateUrl: './update-info.component.html',\n  styleUrls: ['./update-info.component.scss'],\n})\nexport class UpdateInfoComponent implements OnInit {\n  dialogTitle!: string;\n\n  mode!: 'update' | 'password';\n  user!: User;\n\n  hidePassword = true;\n  hideConfirm = true;\n\n  destroy$: Subject = new Subject();\n\n  form!: FormGroup;\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    private matchPassword: MatchPassword,\n    private _snackBar: MatSnackBar,\n    private userEntityService: UserEntityService,\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) data: any\n  ) {\n    this.dialogTitle = data.dialogTitle;\n    this.user = data.user;\n    this.mode = data.mode;\n  }\n\n  ngOnInit(): void {\n    if (this.mode === 'update') {\n      this.form = this.fb.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        role: ['', Validators.required],\n        gender: ['', Validators.required],\n        dateOfBirth: ['', Validators.required],\n      });\n      this.form.patchValue({ ...this.user });\n    } else if (this.mode === 'password') {\n      this.form = this.fb.group(\n        {\n          password: [\n            '',\n            [\n              Validators.required,\n              Validators.minLength(10),\n              Validators.pattern(\n                /^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?\\W).*$/\n              ),\n            ],\n          ],\n          confirmPassword: ['', Validators.required],\n        },\n        { validators: [this.matchPassword.validate] }\n      );\n    }\n  }\n\n  getControl(value: string) {\n    return this.form.get(value) as FormControl;\n  }\n\n  onInfoUpdate() {\n    if (this.mode === 'update') {\n      this.userEntityService\n        .update({ _id: this.user._id, ...this.form.value })\n        .pipe(\n          takeUntil(this.destroy$),\n          catchError((err) => throwError(() => err))\n        )\n        .subscribe({\n          error: (err) =>\n            this._snackBar.open(err.error.message, 'OK', {\n              duration: 2000,\n            }),\n          complete: () => {\n            this._snackBar.open(`User info updated successfully!`, 'OK', {\n              duration: 2000,\n            });\n            this.dialogRef.close();\n          },\n        });\n    } else if (this.mode === 'password') {\n      this.userEntityService\n        .update({ _id: this.user._id, ...this.form.value })\n        .pipe(\n          takeUntil(this.destroy$),\n          catchError((err) => throwError(() => err))\n        )\n        .subscribe({\n          error: (err) =>\n            this._snackBar.open(err.error.message, 'OK', {\n              duration: 2000,\n            }),\n          complete: () => {\n            this._snackBar.open(`User password updated successfully!`, 'OK', {\n              duration: 2000,\n            });\n            this.dialogRef.close();\n          },\n        });\n    }\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        {{ dialogTitle }}\n\n  \n    \n      \n      \n\n      \n        Choose your date of birth\n        \n        MM/DD/YYYY\n        \n        \n        \n          Date of birth is required\n        \n      \n\n      \n        Select a gender\n        \n          Male\n          Female\n          Other\n        \n        \n          gender is required\n        \n      \n      \n        Select a user role\n        \n          Admin\n          Manager\n          Employee\n        \n        \n          User role is required\n        \n      \n    \n  \n\n  \n    \n      \n        Enter your password\n        \n        \n          {{\n            hidePassword ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password is required\n        \n        \n          Password should be with\n          at least 10 characters \n          Password must contain a symbol,\n          number, uppercase letter and\n          lowercase letter.\n        \n      \n\n      \n        Confirm your password\n        \n        \n          {{\n            hideConfirm ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password confirmation is required\n        \n        \n          Password confirmation should be with\n          at least 10 characters\n        \n      \n\n      \n        \n          Passwords do not match\n        \n      \n    \n  \n\n\n\n  Close\n  \n    Update\n  \n\n\n    \n\n    \n                \n                    ./update-info.component.scss\n                \n                .full-width {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ dialogTitle }}                                Choose your date of birth                MM/DD/YYYY                                  Date of birth is required                            Select a gender                  Male          Female          Other                          gender is required                            Select a user role                  Admin          Manager          Employee                          User role is required                                        Enter your password                          {{            hidePassword ? \"visibility_off\" : \"visibility\"          }}                          Password is required                          Password should be with          at least 10 characters           Password must contain a symbol,          number, uppercase letter and          lowercase letter.                            Confirm your password                          {{            hideConfirm ? \"visibility_off\" : \"visibility\"          }}                          Password confirmation is required                          Password confirmation should be with          at least 10 characters                                      Passwords do not match                      Close      Update  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateModalComponent.html":{"url":"components/UpdateModalComponent.html","title":"component - UpdateModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/admin/update-modal/update-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-modal\n            \n\n            \n                styleUrls\n                ./update-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogTitle\n                            \n                            \n                                mode\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onPassword\n                            \n                            \n                                onUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/admin/update-modal/update-modal.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/update-modal/update-modal.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/update-modal/update-modal.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPassword\n                        \n                    \n                \n            \n            \n                \nonPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/update-modal/update-modal.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdate\n                        \n                    \n                \n            \n            \n                \nonUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/admin/update-modal/update-modal.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dialogTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/update-modal/update-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/view/admin/update-modal/update-modal.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/admin/update-modal/update-modal.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { defaultDialogConfig } from 'src/app/shared/default-dialog-config';\nimport { UpdateInfoComponent } from '../update-info/update-info.component';\n\n@Component({\n  selector: 'app-update-modal',\n  templateUrl: './update-modal.component.html',\n  styleUrls: ['./update-modal.component.scss'],\n})\nexport class UpdateModalComponent implements OnInit {\n  dialogTitle!: string;\n\n  mode!: 'update';\n  user!: User;\n\n  constructor(\n    private dialog: MatDialog,\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) data: any\n  ) {\n    this.dialogTitle = data.dialogTitle;\n    this.user = data.user;\n    this.mode = data.mode;\n  }\n\n  onUpdate() {\n    const dialogConfig = defaultDialogConfig();\n    dialogConfig.data = {\n      dialogTitle: 'Update User Information',\n      user: this.user,\n      mode: 'update',\n    };\n\n    this.dialog.open(UpdateInfoComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n\n  onPassword() {\n    const dialogConfig = defaultDialogConfig();\n    dialogConfig.data = {\n      dialogTitle: 'Update User Password',\n      user: this.user,\n      mode: 'password',\n    };\n\n    this.dialog.open(UpdateInfoComponent, {\n      ...dialogConfig,\n      disableClose: false,\n    });\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ dialogTitle }}\n\n  \n    Edit User\n  \n  \n    Change Password\n  \n\n\n\n  Close\n\n\n    \n\n    \n                \n                    ./update-modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ dialogTitle }}      Edit User        Change Password    Close'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  _id: string;\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  gender: string;\n  dateOfBirth: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCredentialsComponent.html":{"url":"components/UserCredentialsComponent.html","title":"component - UserCredentialsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCredentialsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/user-credentials/user-credentials.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-credentials\n            \n\n            \n                styleUrls\n                ./user-credentials.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-credentials.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                dialogTitle\n                            \n                            \n                                form\n                            \n                            \n                                hideConfirm\n                            \n                            \n                                hideCurrentPassword\n                            \n                            \n                                hidePassword\n                            \n                            \n                                mode\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControl\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialogRef: MatDialogRef, store: Store, authService: AuthService, matchPassword: MatchPassword, data: any, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/user-credentials/user-credentials.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPassword\n                                                  \n                                                        \n                                                                        MatchPassword\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/user-credentials/user-credentials.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/user-credentials/user-credentials.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/user-credentials/user-credentials.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/user-credentials/user-credentials.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSave\n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/user-credentials/user-credentials.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user-credentials/user-credentials.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user-credentials/user-credentials.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user-credentials/user-credentials.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user-credentials/user-credentials.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideCurrentPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user-credentials/user-credentials.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user-credentials/user-credentials.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"update-credentials\" | \"update-password\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user-credentials/user-credentials.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user-credentials/user-credentials.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Store } from '@ngrx/store';\nimport { catchError, noop, Subject, takeUntil, tap, throwError } from 'rxjs';\nimport { updateAccount } from 'src/app/auth/actions/auth-actions';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { User } from 'src/app/interfaces/user.interface';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatchPassword } from 'src/app/validators/match-password.validator';\n\n@Component({\n  selector: 'app-user-credentials',\n  templateUrl: './user-credentials.component.html',\n  styleUrls: ['./user-credentials.component.scss'],\n})\nexport class UserCredentialsComponent implements OnInit {\n  user!: User;\n\n  dialogTitle!: string;\n\n  form!: FormGroup;\n\n  mode!: 'update-credentials' | 'update-password';\n\n  destroy$: Subject = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private store: Store,\n    private authService: AuthService,\n    private matchPassword: MatchPassword,\n    @Inject(MAT_DIALOG_DATA) data: any,\n    private _snackBar: MatSnackBar\n  ) {\n    this.dialogTitle = data.dialogTitle;\n    this.user = data.user;\n    this.mode = data.mode;\n\n    if (this.mode === 'update-credentials') {\n      this.form = this.fb.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        dateOfBirth: ['', Validators.required],\n        gender: ['', Validators.required],\n        role: ['', Validators.required],\n      });\n\n      this.form.patchValue({ ...this.user });\n    } else if (this.mode === 'update-password') {\n      this.form = this.fb.group(\n        {\n          currentPassword: [\n            '',\n            [\n              Validators.required,\n              Validators.minLength(10),\n              Validators.pattern(\n                /^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?\\W).*$/\n              ),\n            ],\n          ],\n          password: [\n            '',\n            [\n              Validators.required,\n              Validators.minLength(10),\n              Validators.pattern(\n                /^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?\\W).*$/\n              ),\n            ],\n          ],\n          confirmPassword: ['', Validators.required],\n        },\n        { validators: [this.matchPassword.validate] }\n      );\n    }\n  }\n  hideCurrentPassword = true;\n  hidePassword = true;\n  hideConfirm = true;\n\n  getControl(value: string) {\n    return this.form.get(value) as FormControl;\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onSave() {\n    if (this.mode === 'update-credentials') {\n      this.authService\n        .editUser({ _id: this.user._id, ...this.form.value })\n        .pipe(\n          takeUntil(this.destroy$),\n          catchError((err) => throwError(() => err)),\n          tap((user) => this.store.dispatch(updateAccount({ user })))\n        )\n        .subscribe({\n          error: ({ error }) =>\n            this._snackBar.open(error.message, 'OK', { duration: 2000 }),\n          complete: () => {\n            this._snackBar.open('User updated successfully!', 'OK', {\n              duration: 2000,\n            });\n            this.dialogRef.close();\n          },\n        });\n    } else if (this.mode === 'update-password') {\n      this.authService\n        .changePassword({\n          _id: this.user._id,\n          password: this.form.value.currentPassword,\n          newPassword: this.form.value.password,\n        })\n        .pipe(\n          takeUntil(this.destroy$),\n          catchError((err) => throwError(() => err)),\n          tap((user) => this.store.dispatch(updateAccount({ user })))\n        )\n        .subscribe({\n          error: ({ error }) =>\n            this._snackBar.open(error.message, 'OK', { duration: 2000 }),\n          complete: () => {\n            this._snackBar.open('User password updated successfully!', 'OK', {\n              duration: 2000,\n            });\n            this.dialogRef.close();\n          },\n        });\n    }\n\n    // this.authService\n    //   .changePassword({\n    //     _id: '62c4535ce7fcd8b34b2bd89a',\n    //     password: 'Mateo12345@',\n    //     newPassword: 'Mateo1234@',\n    //   })\n    //   .pipe(tap(console.log))\n    //   .subscribe();\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{ dialogTitle }}\n\n\n  \n    \n      \n      \n\n      \n        Choose your date of birth\n        \n        MM/DD/YYYY\n        \n        \n        \n          Date of birth is required\n        \n      \n\n      \n        Select a gender\n        \n          Male\n          Female\n          Other\n        \n        \n          Gender is required\n        \n      \n\n      \n        Select a user role\n        \n          Admin\n          Manager\n          Employee\n        \n        \n          User role is required\n        \n      \n    \n  \n  \n    \n      \n        Enter your current password\n        \n        \n          {{\n            hideCurrentPassword ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Current password is required\n        \n        \n          Current password should be with\n          at least 10 characters \n          Current password must contain a symbol,\n          number, uppercase letter and\n          lowercase letter.\n        \n      \n\n      \n        Enter your password\n        \n        \n          {{\n            hidePassword ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password is required\n        \n        \n          Password should be with\n          at least 10 characters \n          Password must contain a symbol,\n          number, uppercase letter and\n          lowercase letter.\n        \n      \n\n      \n        Confirm your password\n        \n        \n          {{\n            hideConfirm ? \"visibility_off\" : \"visibility\"\n          }}\n        \n        \n          Password confirmation is required\n        \n        \n          Password confirmation should be with\n          at least 10 characters\n        \n      \n\n      \n        \n          Passwords do not match\n        \n      \n    \n  \n\n\n  Close\n  \n    Update\n  \n\n\n    \n\n    \n                \n                    ./user-credentials.component.scss\n                \n                .full-width {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ dialogTitle }}                                Choose your date of birth                MM/DD/YYYY                                  Date of birth is required                            Select a gender                  Male          Female          Other                          Gender is required                            Select a user role                  Admin          Manager          Employee                          User role is required                                        Enter your current password                          {{            hideCurrentPassword ? \"visibility_off\" : \"visibility\"          }}                          Current password is required                          Current password should be with          at least 10 characters           Current password must contain a symbol,          number, uppercase letter and          lowercase letter.                            Enter your password                          {{            hidePassword ? \"visibility_off\" : \"visibility\"          }}                          Password is required                          Password should be with          at least 10 characters           Password must contain a symbol,          number, uppercase letter and          lowercase letter.                            Confirm your password                          {{            hideConfirm ? \"visibility_off\" : \"visibility\"          }}                          Password confirmation is required                          Password confirmation should be with          at least 10 characters                                      Passwords do not match                      Close      Update  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementTableComponent', 'selector': 'app-management-table'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterUserComponent', 'selector': 'app-register-user'},{'name': 'TabComponent', 'selector': 'app-tab'},{'name': 'TaskCalendarComponent', 'selector': 'app-task-calendar'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskDialogComponent', 'selector': 'app-task-dialog'},{'name': 'TaskManagementComponent', 'selector': 'app-task-management'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UpdateModalComponent', 'selector': 'app-update-modal'},{'name': 'UserCredentialsComponent', 'selector': 'app-user-credentials'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCredentialsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserDataService.html":{"url":"injectables/UserDataService.html","title":"injectable - UserDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/view/services/user/user-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    DefaultDataService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/services/user/user-data.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpUrlGenerator\n                                                  \n                                                        \n                                                                    HttpUrlGenerator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(entity: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/user/user-data.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/user/user-data.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/user/user-data.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(update: Update)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/user/user-data.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Update\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/view/services/user/user-data.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DefaultDataService, HttpUrlGenerator } from '@ngrx/data';\nimport { Update } from '@ngrx/entity';\nimport { select, Store } from '@ngrx/store';\nimport { map, Observable, tap } from 'rxjs';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { getLoggedUserData } from 'src/app/auth/selectors/auth.selectors';\nimport { User } from 'src/app/interfaces/user.interface';\n\n@Injectable()\nexport class UserDataService extends DefaultDataService {\n  constructor(\n    http: HttpClient,\n    httpUrlGenerator: HttpUrlGenerator,\n    private store: Store\n  ) {\n    httpUrlGenerator.entityResource('User', 'http://localhost:3000/api', true);\n    super('User', http, httpUrlGenerator);\n    store\n      .pipe(\n        select(getLoggedUserData),\n        tap((u) => (this.userData = u))\n      )\n      .subscribe();\n  }\n\n  userData!: User;\n\n  override getAll(): Observable {\n    return this.http\n      .get(\n        `http://localhost:3000/api/users/employee/${this.userData?._id}`\n      )\n      .pipe(\n        map((data) => {\n          if (this.userData?.role === 'Employee') {\n            return [];\n          } else if (this.userData?.role === 'Manager') {\n            return data.filter(\n              (user) =>\n                user?._id !== this.userData?._id && user?.role === 'Employee'\n            );\n          } else {\n            return [];\n            // return data.filter((user) => user?._id !== this.userData?._id);\n          }\n        })\n      );\n  }\n\n  override update(update: Update): Observable {\n    return this.http.patch(\n      `http://localhost:3000/api/user/${update.id}`,\n      update.changes\n    );\n  }\n\n  override add(entity: User): Observable {\n    return this.http.post('http://localhost:3000/api/user', entity);\n  }\n\n  override delete(key: string): Observable {\n    return this.http.delete(`http://localhost:3000/api/user/${key}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEntityService.html":{"url":"injectables/UserEntityService.html","title":"injectable - UserEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/view/services/user/user-entity.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityCollectionServiceBase\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceElementsFactory: EntityCollectionServiceElementsFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/services/user/user-entity.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceElementsFactory\n                                                  \n                                                        \n                                                                    EntityCollectionServiceElementsFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  DefaultDataService,\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory,\n} from '@ngrx/data';\nimport { User } from 'src/app/interfaces/user.interface';\n\n@Injectable()\nexport class UserEntityService extends EntityCollectionServiceBase {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('User', serviceElementsFactory);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UsersResolver.html":{"url":"guards/UsersResolver.html","title":"guard - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/view/services/user/users.resolver.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntityService: UserEntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/services/user/users.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntityService\n                                                  \n                                                        \n                                                                        UserEntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/services/user/users.resolver.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { filter, first, Observable, tap } from 'rxjs';\nimport { UserEntityService } from './user-entity.service';\n\n@Injectable()\nexport class UsersResolver implements Resolve {\n  constructor(private userEntityService: UserEntityService) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable | Promise {\n    return this.userEntityService.loaded$.pipe(\n      tap((loaded) => {\n        if (!loaded) {\n          this.userEntityService.getAll();\n        }\n      }),\n      filter((loaded) => !!loaded),\n      first()\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewModule.html":{"url":"modules/ViewModule.html","title":"module - ViewModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_declarations\n\n\n\ncluster_ViewModule_imports\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nFilterStatePipe\n\nFilterStatePipe\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nFilterStatePipe->ViewModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nViewModule -->\n\nHomeComponent->ViewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nViewModule -->\n\nSharedModule->ViewModule\n\n\n\n\n\nViewRoutingModule\n\nViewRoutingModule\n\nViewModule -->\n\nViewRoutingModule->ViewModule\n\n\n\n\n\nEmployeeTaskDataService\n\nEmployeeTaskDataService\n\nViewModule -->\n\nEmployeeTaskDataService->ViewModule\n\n\n\n\n\nEmployeeTaskEntityService\n\nEmployeeTaskEntityService\n\nViewModule -->\n\nEmployeeTaskEntityService->ViewModule\n\n\n\n\n\nManagerTaskDataService\n\nManagerTaskDataService\n\nViewModule -->\n\nManagerTaskDataService->ViewModule\n\n\n\n\n\nManagerTaskEntityService\n\nManagerTaskEntityService\n\nViewModule -->\n\nManagerTaskEntityService->ViewModule\n\n\n\n\n\nUserDataService\n\nUserDataService\n\nViewModule -->\n\nUserDataService->ViewModule\n\n\n\n\n\nUserEntityService\n\nUserEntityService\n\nViewModule -->\n\nUserEntityService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/view.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FilterStatePipe\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EmployeeTaskDataService\n                        \n                        \n                            EmployeeTaskEntityService\n                        \n                        \n                            ManagerTaskDataService\n                        \n                        \n                            ManagerTaskEntityService\n                        \n                        \n                            UserDataService\n                        \n                        \n                            UserEntityService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            ViewRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ViewRoutingModule } from './view-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport {\n  DefaultDataServiceConfig,\n  EntityDataService,\n  EntityDefinitionService,\n} from '@ngrx/data';\nimport { entityMetadataMap } from './entity-metadata-map';\nimport { EmployeeTaskDataService } from './services/employee/employee-tasks-data.service';\nimport { UserDataService } from './services/user/user-data.service';\nimport { ManagerTaskDataService } from './services/manager/manager-tasks-data.service';\nimport { UserEntityService } from './services/user/user-entity.service';\nimport { UsersResolver } from './services/user/users.resolver';\nimport { EmployeeTasksResolver } from './services/employee/employee-tasks.resolver';\nimport { ManagerTasksResolver } from './services/manager/manager-tasks.resolver';\nimport { ManagerTaskEntityService } from './services/manager/manager-task-entity.service';\nimport { EmployeeTaskEntityService } from './services/employee/employee-task-entity.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FilterStatePipe } from './pipes/filter-state.pipe';\n@NgModule({\n  declarations: [HomeComponent, FilterStatePipe],\n  imports: [\n    CommonModule,\n    ViewRoutingModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    SharedModule,\n  ],\n  providers: [\n    UsersResolver,\n    EmployeeTasksResolver,\n    ManagerTasksResolver,\n    UserEntityService,\n    UserDataService,\n    ManagerTaskDataService,\n    EmployeeTaskDataService,\n    ManagerTaskEntityService,\n    EmployeeTaskEntityService,\n  ],\n})\nexport class ViewModule {\n  constructor(\n    private eds: EntityDefinitionService,\n    private entityDataService: EntityDataService,\n    private managerTasksDataService: ManagerTaskDataService,\n    private usersDataService: UserDataService,\n    private employeeTasksDataService: EmployeeTaskDataService\n  ) {\n    eds.registerMetadataMap(entityMetadataMap);\n    entityDataService.registerServices({\n      Manager: managerTasksDataService,\n      User: usersDataService,\n      Employee: employeeTasksDataService,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewRoutingModule.html":{"url":"modules/ViewRoutingModule.html","title":"module - ViewRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/view/view-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanLoadAdminGuard } from '../guards/users/admin/can-load-admin.guard';\nimport { CanLoadEmployeeGuard } from '../guards/users/can-load-employee.guard';\nimport { CanLoadManagerGuard } from '../guards/users/can-load-manager.guard';\nimport { HomeComponent } from './home/home.component';\nimport { EmployeeTasksResolver } from './services/employee/employee-tasks.resolver';\nimport { ManagerTasksResolver } from './services/manager/manager-tasks.resolver';\nimport { UsersResolver } from './services/user/users.resolver';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: HomeComponent,\n    resolve: {\n      User: UsersResolver,\n      Manager: ManagerTasksResolver,\n      Employee: EmployeeTasksResolver,\n    },\n  },\n\n  {\n    path: 'admin',\n    loadChildren: () =>\n      \"import('./admin/admin.module').then((m) => m.AdminModule)\",\n    canLoad: [CanLoadAdminGuard],\n  },\n\n  {\n    path: 'manager',\n    loadChildren: () =>\n      \"import('./manager/manager.module').then((m) => m.ManagerModule)\",\n    canLoad: [CanLoadManagerGuard],\n  },\n\n  {\n    path: 'employee',\n    loadChildren: () =>\n      \"import('./employee/employee.module').then((m) => m.EmployeeModule)\",\n    canLoad: [CanLoadEmployeeGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ViewRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/actions/auth-actions.ts\n            \n            variable\n            login\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/actions/auth-actions.ts\n            \n            variable\n            logout\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/actions/auth-actions.ts\n            \n            variable\n            updateAccount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/effects/auth.effects.ts\n            \n            injectable\n            AuthEffects\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/reducers/index.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/reducers/index.ts\n            \n            variable\n            authFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/reducers/index.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/reducers/index.ts\n            \n            variable\n            initialAuthState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            getLoggedUserData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            isAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            isEmployee\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            isLoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            isLoggedOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            isManager\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            selectAuthState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            selectEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            selectUserInitials\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/selectors/auth.selectors.ts\n            \n            variable\n            userId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/not-auth.guard.ts\n            \n            guard\n            NotAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/users/admin/can-load-admin.guard.ts\n            \n            guard\n            CanLoadAdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/users/can-load-employee.guard.ts\n            \n            guard\n            CanLoadEmployeeGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/users/can-load-manager.guard.ts\n            \n            guard\n            CanLoadManagerGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/task.interface.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            function\n            logoutFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/default-dialog-config.ts\n            \n            function\n            defaultDialogConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/tab/tab.component.ts\n            \n            component\n            TabComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/user-credentials/user-credentials.component.ts\n            \n            component\n            UserCredentialsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/validators/match-password.validator.ts\n            \n            injectable\n            MatchPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/view/admin/delete-modal/delete-modal.component.ts\n            \n            component\n            DeleteModalComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/view/admin/management-table/management-table.component.ts\n            \n            component\n            ManagementTableComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/view/admin/pipes/search-filter.pipe.ts\n            \n            pipe\n            SearchFilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/view/admin/register-user/register-user.component.ts\n            \n            component\n            RegisterUserComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/view/admin/update-info/update-info.component.ts\n            \n            component\n            UpdateInfoComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/view/admin/update-modal/update-modal.component.ts\n            \n            component\n            UpdateModalComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/view/employee/task-calendar/task-calendar.component.ts\n            \n            component\n            TaskCalendarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/view/employee/task-dialog/task-dialog.component.ts\n            \n            component\n            TaskDialogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/view/entity-metadata-map.ts\n            \n            function\n            compareTasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/view/entity-metadata-map.ts\n            \n            variable\n            entityMetadataMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/view/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/view/manager/task-dialog/task-dialog.component.ts\n            \n            component\n            TaskDialogComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/view/manager/task-management/task-management.component.ts\n            \n            component\n            TaskManagementComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/view/pipes/filter-state.pipe.ts\n            \n            pipe\n            FilterStatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/view/services/employee/employee-task-entity.service.ts\n            \n            injectable\n            EmployeeTaskEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/view/services/employee/employee-tasks-data.service.ts\n            \n            injectable\n            EmployeeTaskDataService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/view/services/employee/employee-tasks.resolver.ts\n            \n            guard\n            EmployeeTasksResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/view/services/manager/manager-task-entity.service.ts\n            \n            injectable\n            ManagerTaskEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/view/services/manager/manager-tasks-data.service.ts\n            \n            injectable\n            ManagerTaskDataService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/view/services/manager/manager-tasks.resolver.ts\n            \n            guard\n            ManagerTasksResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/view/services/user/user-data.service.ts\n            \n            injectable\n            UserDataService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/view/services/user/user-entity.service.ts\n            \n            injectable\n            UserEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/view/services/user/users.resolver.ts\n            \n            guard\n            UsersResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-components/datetime-picker : ^7.0.1\n        \n            @angular/animations : ~13.3.0\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/localize : ~13.3.0\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @ng-bootstrap/ng-bootstrap : ^12.1.2\n        \n            @ngrx/data : ^13.2.0\n        \n            @ngrx/effects : ^13.2.0\n        \n            @ngrx/router-store : ^13.2.0\n        \n            @ngrx/store : ^13.2.0\n        \n            @ngrx/store-devtools : ^13.2.0\n        \n            @popperjs/core : ^2.11.5\n        \n            angular-calendar : ^0.29.0\n        \n            autoprefixer : 10.4.5\n        \n            bootstrap : ^5.1.3\n        \n            date-fns : ^2.28.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareTasks   (src/.../entity-metadata-map.ts)\n                        \n                        \n                            defaultDialogConfig   (src/.../default-dialog-config.ts)\n                        \n                        \n                            logoutFunction   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/view/entity-metadata-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compareTasks\n                        \n                    \n                \n            \n            \n                \ncompareTasks(t1: Task, t2: Task)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    t1\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t2\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/shared/default-dialog-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultDialogConfig\n                        \n                    \n                \n            \n            \n                \ndefaultDialogConfig()\n                \n            \n\n\n\n\n        \n    \n    src/app/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logoutFunction\n                        \n                    \n                \n            \n            \n                \nlogoutFunction(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTaskConnect\nThis project was generated with Angular CLI version 13.3.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_declarations\n\n\n\ncluster_EmployeeModule_imports\n\n\n\ncluster_EmployeeModule_providers\n\n\n\ncluster_ManagerModule\n\n\n\ncluster_ManagerModule_declarations\n\n\n\ncluster_ManagerModule_imports\n\n\n\ncluster_ManagerModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_declarations\n\n\n\ncluster_ViewModule_imports\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nDeleteModalComponent\n\nDeleteModalComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nDeleteModalComponent->AdminModule\n\n\n\n\n\nManagementTableComponent\n\nManagementTableComponent\n\nAdminModule -->\n\nManagementTableComponent->AdminModule\n\n\n\n\n\nRegisterUserComponent\n\nRegisterUserComponent\n\nAdminModule -->\n\nRegisterUserComponent->AdminModule\n\n\n\n\n\nSearchFilterPipe\n\nSearchFilterPipe\n\nAdminModule -->\n\nSearchFilterPipe->AdminModule\n\n\n\n\n\nUpdateInfoComponent\n\nUpdateInfoComponent\n\nAdminModule -->\n\nUpdateInfoComponent->AdminModule\n\n\n\n\n\nUpdateModalComponent\n\nUpdateModalComponent\n\nAdminModule -->\n\nUpdateModalComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nSharedModule->EmployeeModule\n\n\n\n\n\nManagerModule\n\nManagerModule\n\nManagerModule -->\n\nSharedModule->ManagerModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nSharedModule->CalendarComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nSharedModule->InputComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nSharedModule->TabComponent \n\n\n\n\n\nUserCredentialsComponent \n\nUserCredentialsComponent \n\nUserCredentialsComponent  -->\n\nSharedModule->UserCredentialsComponent \n\n\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nSharedModule->ViewModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nTaskCalendarComponent\n\nTaskCalendarComponent\n\nEmployeeModule -->\n\nTaskCalendarComponent->EmployeeModule\n\n\n\n\n\nTaskDialogComponent\n\nTaskDialogComponent\n\nEmployeeModule -->\n\nTaskDialogComponent->EmployeeModule\n\n\n\n\n\nEmployeeRoutingModule\n\nEmployeeRoutingModule\n\nEmployeeModule -->\n\nEmployeeRoutingModule->EmployeeModule\n\n\n\n\n\nEmployeeTaskDataService\n\nEmployeeTaskDataService\n\nEmployeeModule -->\n\nEmployeeTaskDataService->EmployeeModule\n\n\n\nViewModule -->\n\nEmployeeTaskDataService->ViewModule\n\n\n\n\n\nEmployeeTaskEntityService\n\nEmployeeTaskEntityService\n\nEmployeeModule -->\n\nEmployeeTaskEntityService->EmployeeModule\n\n\n\nViewModule -->\n\nEmployeeTaskEntityService->ViewModule\n\n\n\n\n\nTaskManagementComponent\n\nTaskManagementComponent\n\nManagerModule -->\n\nTaskManagementComponent->ManagerModule\n\n\n\n\n\nManagerRoutingModule\n\nManagerRoutingModule\n\nManagerModule -->\n\nManagerRoutingModule->ManagerModule\n\n\n\n\n\nManagerTaskDataService\n\nManagerTaskDataService\n\nManagerModule -->\n\nManagerTaskDataService->ManagerModule\n\n\n\nViewModule -->\n\nManagerTaskDataService->ViewModule\n\n\n\n\n\nManagerTaskEntityService\n\nManagerTaskEntityService\n\nManagerModule -->\n\nManagerTaskEntityService->ManagerModule\n\n\n\nViewModule -->\n\nManagerTaskEntityService->ViewModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\nSharedModule -->\n\nCalendarComponent->SharedModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nSharedModule -->\n\nInputComponent->SharedModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nSharedModule -->\n\nTabComponent->SharedModule\n\n\n\n\n\nUserCredentialsComponent\n\nUserCredentialsComponent\n\nSharedModule -->\n\nUserCredentialsComponent->SharedModule\n\n\n\n\n\nFilterStatePipe\n\nFilterStatePipe\n\nViewModule -->\n\nFilterStatePipe->ViewModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nViewModule -->\n\nHomeComponent->ViewModule\n\n\n\n\n\nViewRoutingModule\n\nViewRoutingModule\n\nViewModule -->\n\nViewRoutingModule->ViewModule\n\n\n\n\n\nUserDataService\n\nUserDataService\n\nViewModule -->\n\nUserDataService->ViewModule\n\n\n\n\n\nUserEntityService\n\nUserEntityService\n\nViewModule -->\n\nUserEntityService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authFeatureKey   (src/.../index.ts)\n                        \n                        \n                            authReducer   (src/.../index.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            entityMetadataMap   (src/.../entity-metadata-map.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getLoggedUserData   (src/.../auth.selectors.ts)\n                        \n                        \n                            initialAuthState   (src/.../index.ts)\n                        \n                        \n                            isAdmin   (src/.../auth.selectors.ts)\n                        \n                        \n                            isEmployee   (src/.../auth.selectors.ts)\n                        \n                        \n                            isLoggedIn   (src/.../auth.selectors.ts)\n                        \n                        \n                            isLoggedOut   (src/.../auth.selectors.ts)\n                        \n                        \n                            isManager   (src/.../auth.selectors.ts)\n                        \n                        \n                            login   (src/.../auth-actions.ts)\n                        \n                        \n                            logout   (src/.../auth-actions.ts)\n                        \n                        \n                            metaReducers   (src/.../index.ts)\n                        \n                        \n                            reducers   (src/.../index.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectAuthState   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectEmail   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectUserInitials   (src/.../auth.selectors.ts)\n                        \n                        \n                            updateAccount   (src/.../auth-actions.ts)\n                        \n                        \n                            userId   (src/.../auth.selectors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialAuthState,\n  on(AuthActions.login, (state, action) => {\n    return { user: action.user };\n  }),\n\n  on(AuthActions.logout, (state, action) => {\n    return { user: undefined };\n  }),\n  on(AuthActions.updateAccount, (state, action) => {\n    return { user: { ...state.user, ...action.user } };\n  })\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialAuthState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: undefined,\n}\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/view/entity-metadata-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entityMetadataMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityMetadataMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  Manager: {\n    selectId: (task: Task) => task?._id as string,\n    entityDispatcherOptions: {\n      optimisticUpdate: true,\n      optimisticDelete: true,\n      optimisticSaveEntities: true,\n    },\n    sortComparer: compareTasks,\n  },\n  User: {\n    selectId: (user: User) => user?._id as string,\n    entityDispatcherOptions: {\n      optimisticUpdate: true,\n      optimisticDelete: true,\n      optimisticSaveEntities: true,\n    },\n  },\n  Employee: {\n    selectId: (task: Task) => task._id as string,\n    entityDispatcherOptions: {\n      optimisticUpdate: true,\n      optimisticDelete: true,\n      optimisticSaveEntities: true,\n    },\n    sortComparer: compareTasks,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth/selectors/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLoggedUserData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuthState,\n  (authState) => authState.user as User\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  getLoggedUserData,\n  (user) => !!(user?.role === 'Admin')\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmployee\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  getLoggedUserData,\n  (user) => !!(user?.role === 'Employee')\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuthState,\n  (authState) => !!authState.user\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(isLoggedIn, (loggedIn) => !loggedIn)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  getLoggedUserData,\n  (user) => !!(user?.role === 'Manager')\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuthState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(authFeatureKey)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectEmail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  getLoggedUserData,\n  (user) => user?.email as string\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserInitials\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  getLoggedUserData,\n  (user) => user?.firstName[0].toUpperCase() + user?.lastName[0].toUpperCase()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  getLoggedUserData,\n  (userData) => userData?._id as string\n)\n                    \n                \n\n\n        \n    \n\n    src/app/auth/actions/auth-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] User Login',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Logout Link] User Logout')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAccount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[User Settings Modal] User Edit',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        metaReducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaReducer[]\n\n                    \n                \n                \n                    \n                        Default value : !environment.production\n  ? [logoutFunction]\n  : [logoutFunction]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
